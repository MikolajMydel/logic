{"version":3,"sources":["Components/LogicGate/LogicGate.module.scss","logicalFunctions.js","functions.js","Components/Application/Application.module.scss","Components/LogicGate/OutputPin.js","Components/LogicGate/InputPin.js","Components/Node/Node.module.scss","Components/DummyGate/DummyGate.js","Components/LogicGate/Pin.js","Components/Node/StartNode.js","Components/Node/Node.js","Components/Node/EndNode.js","Components/Menu/Menu.module.scss","Components/Application/Application.js","Components/LogicGate/LogicGate.js","Components/ControlPanel/ControlPanel.js","Components/ControlPanel/ControlPanel.module.scss","Components/Menu/Button.js","Components/Menu/Menu.js","index.js"],"names":["module","exports","AND","inputs","isUndefined","i","length","undefined","NOT","OR","retrieveFunction","functions","funcs","map","f","eval","output","push","compareTop","a","b","parseInt","style","top","slice","makeNewGate","canvas","name","color","inputArea","childNodes","outputArea","endNodes","sort","DOM","findReact","startNodes","solve","alreadyVisited","indexOf","StartNode","gate","args","par","state","parentPin","index","func","outputs","dom","traverseUp","key","Object","keys","find","startsWith","domFiber","GetCompFiber","fiber","parentFiber","return","type","compFiber","stateNode","checkForCycle","gates","collectGates","visited","Array","recStack","DFSutil","getChildGates","children","c","loop","g","forEach","child","includes","childGates","childPins","j","EndNode","OutputPin","props","value","target","cps","this","setState","oldChildren","pinIndex","updatedChildren","splice","signal","receiveSignal","className","LogicGateOutput","onClick","setFocusedElement","Pin","InputPin","handleOnClick","e","button","newParent","getFocusedElement","changeParentPin","disconnect","recursion","connect","processOutput","LogicGateInput","onMouseDown","DummyGate","backgroundColor","inputFields","outputFields","styles","LogicGate","LogicGateDummy","addGate","gateName","function","inputCount","outputCount","LogicGateInputs","pointerEvents","LogicGateValue","LogicGateOutputs","React","Component","mount","toggleValue","val","Node","NodeUndefined","NodeTrue","NodeFalse","position","validateGateName","test","Application","focusedElement","heldElement","heldElementOffset","elements","board","boardRef","createRef","canvasRef","controlRef","element","addNode","classList","contains","pos","clientY","offsetTop","newGate","reference","el","xo","clientX","offsetLeft","yo","left","saveGate","prompt","global","saved","newGateObject","localStorage","getItem","JSON","parse","setItem","stringify","controlPanelObject","addDummy","clearCanvas","current","savedGate","currentTarget","x","y","offsetWidth","offsetHeight","split","comp","selfDestruct","focused","grab","onMouseMove","move","onMouseUp","drop","Canvas","ref","InputArea","Board","OutputArea","mountPin","pin","render","o","from","input","toString","ControlPanel","dummies","newDummy","Button","action","text","Menu","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13ae530f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"LogicGate\":\"LogicGate_LogicGate__1Cc_p\",\"LogicGateDummy\":\"LogicGate_LogicGateDummy__19ubT\",\"LogicGateInputs\":\"LogicGate_LogicGateInputs__oV9js\",\"LogicGateOutputs\":\"LogicGate_LogicGateOutputs__3uRMQ\",\"LogicGateValue\":\"LogicGate_LogicGateValue__3jkbZ\"};","// jezeli jest chociaz jeden undefined - zwroc undefined\nexport const AND = (inputs) => {\n    let isUndefined = false;\n    for (let i = 0; i < inputs.length; i++){\n        if (inputs[i] === false) return [false];\n        if (inputs[i] === undefined) isUndefined = true;\n    }\n    if ( isUndefined ) return [undefined];\n    return [true];\n}\n\nexport const NOT = (inputs) => {\n    if(inputs[0] === undefined) return [undefined];\n    return [!(inputs[0])];\n}\n\n// jezeli jest chociaz jeden true - zwroc true\nexport const OR = (inputs) => {\n    let isUndefined = false;\n    for (let i = 0; i < inputs.length; i++){\n        if ( inputs[i] === true) return [true];\n        if (inputs[i] === undefined) isUndefined = true;\n    }\n    if ( isUndefined ) return [undefined];\n    return [false];\n}\n","import EndNode from \"./Components/Node/EndNode\";\nimport StartNode from \"./Components/Node/StartNode\";\n\n//zwraca gotową funkcję na podstawie tablicy stringów z funkcjami\nexport function retrieveFunction(functions){\n    let funcs = functions.map(f => eval(f));\n    return (inputs) => {\n        let output = [];\n        for(let i=0; i<funcs.length; i++){\n            output.push(funcs[i](inputs));\n        }\n        return output;\n    }\n}\nconst compareTop = (a, b) => parseInt(a.style.top.slice(0,-2)) - parseInt(b.style.top.slice(0,-2));\n\n// zapisuje customową funkcję w formie stringa dla nowej bramki na podstawie\n// podanych obiektów endNode\nexport function makeNewGate(canvas, name, color) {\n    const inputArea = canvas.childNodes[0];\n    const outputArea = canvas.childNodes[2];\n\n    // posortowane od najwyżej położonego do najniżej\n    const endNodes  = [...outputArea.childNodes].sort(compareTop).map(DOM => findReact(DOM));\n    const startNodes = [...inputArea.childNodes].sort(compareTop).map(DOM => findReact(DOM));\n\n    const solve = (output, alreadyVisited) => {\n        if (!output || alreadyVisited.indexOf(output) !== -1) // był już sprawdzany\n            return;\n        if(output instanceof StartNode){\n            for(let i=0; i<startNodes.length; i++){\n                if(output === startNodes[i])\n                    return \"i[\" + i + \"]\";\n            }\n        } else {\n            alreadyVisited.push(output);\n            const gate = output.gate;\n            let args = [];\n            for(const input of gate.inputs){\n                const par = input.state.parentPin;\n                if(par){\n                    args.push(solve(par, alreadyVisited));\n                } else // input bramki nie jest do niczego podpięty\n                    args.push(undefined)\n            }\n            return (\n                gate.name + \"([\" + args + \"])[\" + output.index + \"]\"\n            );\n        }\n    }\n\n    let output = [];\n    for(let endNode of endNodes) {\n        let func = \"(i) => \" + solve(endNode.state.parentPin, []);\n        output.push(func);\n    }\n    return {\n        name: name,\n        inputs: startNodes.length,\n        outputs: endNodes.length,\n        functions: output,\n        color: color,\n    };\n}\n\n// https://stackoverflow.com/questions/29321742/react-getting-a-component-from-a-dom-element-for-debugging/39165137#39165137\n// znajdź komponent React na podstawie elementu DOM\nexport function findReact(dom, traverseUp=0) {\n    const key = Object.keys(dom).find(key => key.startsWith(\"__reactFiber$\"));\n    const domFiber = dom[key];\n    if (domFiber == null) return null;\n\n    const GetCompFiber = fiber=>{\n        //return fiber._debugOwner; // this also works, but is __DEV__ only\n        let parentFiber = fiber.return;\n        while (typeof parentFiber.type == \"string\") {\n            parentFiber = parentFiber.return;\n        }\n        return parentFiber;\n    };\n    let compFiber = GetCompFiber(domFiber);\n    for (let i = 0; i < traverseUp; i++) {\n        compFiber = GetCompFiber(compFiber);\n    }\n    return compFiber.stateNode;\n}\n\nexport function checkForCycle(gate) {\n    // algorytm DFS\n    // https://www.geeksforgeeks.org/depth-first-search-or-dfs-for-a-graph\n    const gates = collectGates(gate);\n    let visited  = new Array(gates.length);\n    let recStack = new Array(gates.length);\n    for(let i=0;i<gates.length;i++) {\n        visited[i]  = false;\n        recStack[i] = false;\n    }\n\n    for (let i = 0; i < gates.length; i++)\n        if (DFSutil(i, visited, recStack, getChildGates(gates[i]))){\n            return true;\n        }\n    return false;\n}\nfunction DFSutil(i, visited, recStack, children) {\n    if (recStack[i])\n        return true;\n\n    if (visited[i])\n        return false;\n\n    visited[i] = true;\n    recStack[i] = true;\n\n    for (let c=0;c< children.length;c++)\n        if (DFSutil(c, visited, recStack, children)){\n            return true;\n        }\n\n    recStack[i] = false;\n\n    return false;\n}\n// zbierz wszystkie bramki poniżej podanej\nfunction collectGates(gate) {\n    let gates = [gate];\n    const loop = (g) => {\n        getChildGates(g).forEach((child) => {\n            // bramki nie ma jeszcze na liście\n            if(!gates.includes(child)) {\n                gates.push(child);\n                loop(child);\n            }\n        });\n    }\n    loop(gate);\n\n    return gates;\n}\n// zbierz bramki bezpośrednio podłączone do podanej jako dzieci\nfunction getChildGates(gate) {\n    let childGates = [];\n    for (let i = 0; i < gate.outputs.length; i++) {\n        // dodaje wszystkie piny, ktore pobieraja sygnal z aktualnej bramki\n        const childPins = gate.outputs[i].state.childPins;\n        for (let j = 0; j < childPins.length; j++){\n            // pomijamy EndNody\n            if (childPins[j] instanceof EndNode) continue;\n            childGates.push( childPins[j].gate );\n        }\n    }\n    return childGates;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Application\":\"Application_Application__2wRsQ\",\"Canvas\":\"Application_Canvas__35aVF\",\"Board\":\"Application_Board__sFgm3\",\"InputArea\":\"Application_InputArea__3XmUM\",\"OutputArea\":\"Application_OutputArea__flxHC\"};","import Pin from \"./Pin\";\n\nclass OutputPin extends Pin {\n    constructor(props) {\n        super(props);\n        this.state = {\n            childPins: [],\n            value: undefined,\n        }\n    }\n\n    // przylaczanie innego pina jako dziecko\n    connect(target) {\n        let cps = this.state.childPins;\n        cps.push(target);\n        this.setState({'childPins': cps});\n    }\n\n    disconnect(target) {\n        const oldChildren = this.state.childPins;\n        const pinIndex = oldChildren.indexOf(target);\n\n        // tworzymy kopie tablicy dzieci (aby uniknac bezposredniej zmiany stanu)\n        let updatedChildren = [...oldChildren];\n        updatedChildren.splice (pinIndex, 1);\n\n        // ustawiamy nowa tablice dzieci jako stan\n        this.setState({\"childPins\": updatedChildren });\n    }\n\n    receiveSignal(signal) {\n        this.setState({'value': signal}, function() {\n            for (let i = 0; i < this.state.childPins.length; i++) {\n                this.state.childPins[i].receiveSignal(signal);\n            }\n        });\n\t}\n\n    render(){\n        return <button className={ this.style.LogicGateOutput } onClick={ () => this.props.setFocusedElement(this) }> </button>;\n    }\n}\n\nexport default OutputPin;\n","import Pin from \"./Pin\";\n\nclass InputPin extends Pin {\n    constructor(props) {\n        super(props);\n        this.state = {\n            parentPin: undefined,\n            value: undefined,\n            recursion: false,\n        }\n    }\n\n    handleOnClick = (e) => {\n        if(e.button === 0) { // lewy\n            const newParent = this.props.getFocusedElement();\n            if(newParent)\n                this.changeParentPin(newParent);\n        } else if(e.button === 1) { // srodkowy\n            this.disconnect();\n        }\n    }\n\n    disconnect() {\n        if(!this.state.parentPin) return;\n        this.state.parentPin.disconnect(this);\n        this.setState({'parentPin': undefined});\n        this.receiveSignal(undefined);\n    }\n\n    // zmień do jakiego outputa podłączony jest ten input\n    changeParentPin(newParent) {\n        if (this.state.parentPin)\n            this.state.parentPin.disconnect(this);\n        newParent.connect(this);\n        this.setState({'parentPin': newParent});\n        this.receiveSignal(newParent.state.value);\n    }\n\n    receiveSignal(signal) {\n        // najwyraźniej najlepszy sposób na zapobiegniecie zapętlania\n        // omg\n        if (signal === this.state.value) return;\n\n        this.setState({'value': signal}, function() {\n            this.gate.processOutput();\n        });\n\t}\n\n    render(){\n        return <button className={ this.style.LogicGateInput } onMouseDown={ this.handleOnClick } ></button>;\n    }\n}\n\nexport default InputPin;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Node\":\"Node_Node__281H-\",\"NodeUndefined\":\"Node_NodeUndefined__3Ozqf\",\"NodeTrue\":\"Node_NodeTrue__3vLME\",\"NodeFalse\":\"Node_NodeFalse__39hyq\"};","import React from \"react\";\r\nimport OutputPin from \"../LogicGate/OutputPin\";\r\nimport InputPin from \"../LogicGate/InputPin\";\r\nimport styles from \"../LogicGate/LogicGate.module.scss\";\r\n\r\nclass DummyGate extends React.Component {\r\n    style = {backgroundColor: this.props.color}\r\n    render () {\r\n        let inputFields = [];\r\n        for (let i = 0; i < this.props.inputs; i++){\r\n            inputFields.push((\r\n                <InputPin />\r\n            ));\r\n        }\r\n        let outputFields = [];\r\n        for (let i = 0; i < this.props.outputs; i++){\r\n            outputFields.push((\r\n                <OutputPin />\r\n            ));\r\n        }\r\n        return (\r\n            <div className={`${styles.LogicGate} ${styles.LogicGateDummy}`}\r\n                style={this.style}\r\n                onMouseDown={(e) => this.props.addGate(e, {\r\n                    gateName: this.props.gateName,\r\n                    function: this.props.function,\r\n                    style: this.style,\r\n                    inputCount: this.props.inputs,\r\n                    outputCount: this.props.outputs,\r\n                })} >\r\n                <div className={styles.LogicGateInputs} style={{pointerEvents: 'none'}} >\r\n                    { inputFields }\r\n                </div>\r\n                <h5 className={styles.LogicGateValue}> { this.props.gateName } </h5>\r\n                <div className={styles.LogicGateOutputs} style={{pointerEvents: 'none'}} >\r\n                    { outputFields }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DummyGate;\r\n","import React from \"react\";\nimport styles from \"./LogicGate.module.scss\";\n\nclass Pin extends React.Component {\n    style = styles;\n\n    constructor(props) {\n        super();\n        this.index = props.index;\n        this.gate = props.gate;\n    }\n\n    componentDidMount() {\n        if(this.props.mount)\n            this.props.mount(this); // dodaj siebie do tablicy pinów swojej bramki\n    }\n}\n\nexport default Pin;\n","import Node from './Node';\r\n\r\nclass StartNode extends Node {\r\n    state = {\r\n        value: false,\r\n        childPins: [],\r\n    }\r\n\r\n    // przylaczanie innego pina jako dziecko\r\n    connect(target) {\r\n        let cps = this.state.childPins;\r\n        cps.push(target);\r\n        this.setState({'childPins': cps});\r\n    }\r\n\r\n    disconnect(target) {\r\n        const oldChildren = this.state.childPins;\r\n        const pinIndex = oldChildren.indexOf(target);\r\n\r\n        // tworzymy kopie tablicy dzieci (aby uniknac bezposredniej zmiany stanu)\r\n        let updatedChildren = [...oldChildren];\r\n        updatedChildren.splice (pinIndex, 1);\r\n\r\n        // ustawiamy nowa tablice dzieci jako stan\r\n        this.setState({\"childPins\": updatedChildren });\r\n    }\r\n\r\n    handleOnClick = (e) => {\r\n        if(e.button === 0) // Lewy PM\r\n            this.props.setFocusedElement(this);\r\n        else if (e.button === 1) // Środkowy PM\r\n            this.toggleValue();\r\n    }\r\n\r\n    toggleValue() {\r\n        const val = !(this.state.value);\r\n        this.setState({value: val}, function() {\r\n            for (let i = 0; i < this.state.childPins.length; i++) {\r\n                this.state.childPins[i].receiveSignal(val);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default StartNode;\r\n","import React from 'react';\r\nimport styles from './Node.module.scss';\r\n\r\nclass Node extends React.Component {\r\n\r\n    get value() { return this.state.value }\r\n\r\n    render() {\r\n        let style;\r\n        const value = this.state.value;\r\n\r\n        // zwróć styl na podstawie wartosci\r\n        if ( value === undefined )\r\n            style = styles.NodeUndefined;\r\n        else if ( value )\r\n            style = styles.NodeTrue;\r\n        else\r\n            style = styles.NodeFalse;\r\n\r\n        const position = this.props.position + 'px';\r\n\r\n        return (\r\n            <div className={ `${styles.Node} ${style}` } onMouseDown={ this.handleOnClick } style={{ top: position }} >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Node;\r\n","import Node from './Node';\n\nclass EndNode extends Node {\n    state = {\n        value: undefined,\n        parentPin: undefined,\n    }\n\n    handleOnClick = (e) => {\n        if(e.button === 0) { // lewy\n            const newParent = this.props.getFocusedElement();\n            if(newParent)\n                this.changeParentPin(newParent);\n        } else if(e.button === 1) { // srodkowy\n            this.disconnect();\n        }\n    }\n\n    disconnect() {\n        if(!this.state.parentPin) return;\n        this.state.parentPin.disconnect(this);\n        this.setState({'parentPin': undefined});\n        this.receiveSignal(undefined);\n    }\n\n    changeParentPin(newParent) {\n        if (this.state.parentPin)\n            this.state.parentPin.disconnect(this);\n        newParent.connect(this);\n        this.setState({'parentPin': newParent});\n        this.receiveSignal(newParent.state.value);\n    }\n\n    receiveSignal(signal) {\n        this.setState({'value': signal});\n\t}\n}\n\nexport default EndNode;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Menu_Menu__2X7bN\",\"Button\":\"Menu_Button__8Dt-Z\"};","import React from \"react\";\r\nimport styles from './Application.module.scss';\r\nimport LogicGate from \"../LogicGate/LogicGate\";\r\nimport StartNode from \"../Node/StartNode\";\r\nimport EndNode from \"../Node/EndNode\";\r\nimport ControlPanel from \"../ControlPanel/ControlPanel\";\r\nimport {findReact, makeNewGate} from \"../../functions\";\r\nimport {AND, NOT, OR} from \"../../logicalFunctions\"\r\nimport Menu from \"../Menu/Menu\"\r\n\r\nfunction validateGateName(name) {\r\n    // nazwa może składać się wyłącznie z liter i cyfr\r\n    // oraz musi zaczynać się od litery\r\n    var regex = /^[A-Za-z][A-Za-z0-9]*$/;\r\n    return regex.test(name);\r\n}\r\nclass Application extends React.Component {\r\n    state = {\r\n        focusedElement: undefined,    // aktualnie wybrane wyjście\r\n        heldElement: undefined,       // aktualnie trzymana bramka\r\n        heldElementOffset: [0, 0],    // różnica koordynatów x i y, między punktem chwytu a faktycznym położeniem bloku\r\n        elements: {\r\n            inputs: [],\r\n            board: [],\r\n            outputs: [],\r\n        }\r\n    }\r\n\r\n    boardRef = React.createRef()\r\n    canvasRef = React.createRef()\r\n    controlRef = React.createRef()\r\n    controlPanelObject;\r\n\r\n    // funkcja zmieniajaca aktualnie wybrane wyjscie - pozwala na uzycie kliknietego wyjscia na wejscie bramki logicznej\r\n    setFocusedElement = ( element ) => {\r\n        this.setState ({'focusedElement': element});\r\n    }\r\n\r\n    // funkcja zwracajaca aktualnie wybrane wyjscie - umozliwia kliknietej bramce logicznej zmiane wejscia na wczesniej klikniete wyjscie\r\n    getFocusedElement = () => this.state.focusedElement;\r\n\r\n    // tylko raz po wyrenderowaniu tego komponentu\r\n    componentDidMount(){\r\n        global.NOT = NOT;\r\n        global.AND = AND;\r\n        global.OR = OR;\r\n\r\n        this.controlPanelObject = findReact(this.controlRef.current);\r\n\r\n        // wczytaj zapisane bramki z localstorage\r\n        let saved;\r\n        if(localStorage.getItem(\"savedGates\") !== null)\r\n            saved = JSON.parse(localStorage.getItem(\"savedGates\"));\r\n        else\r\n            saved = [];\r\n\r\n        for(const savedGate of saved){\r\n            this.controlPanelObject.addDummy(savedGate);\r\n        }\r\n    }\r\n\r\n    addNode = (e, type) => {\r\n        // dodaj tylko jeżeli kliknięto na czysty obszar (nie np istniejący node)\r\n        if ( !e.target.classList.contains('Area') )\r\n            return;\r\n\r\n        const pos = e.clientY - e.target.offsetTop - 10; // 10 - połowa wysokości\r\n        let elements = this.state.elements;\r\n        if (type === \"startNode\")\r\n            elements.inputs.push(\r\n                <StartNode setFocusedElement={ this.setFocusedElement } position={ pos }/>\r\n            );\r\n        else // endNode\r\n            elements.outputs.push(\r\n                <EndNode getFocusedElement={ this.getFocusedElement } position={ pos }/>\r\n            );\r\n        this.setState ({'elements': elements});\r\n    }\r\n\r\n    addGate = (e, args) => {\r\n        let elements = this.state.elements;\r\n        let newGate;\r\n        elements.board.push(\r\n            <LogicGate\r\n                gateName={ args.gateName }\r\n                inputs={ args.inputCount }\r\n                outputs={ args.outputCount }\r\n                function={ args.function }\r\n                style={ args.style }\r\n                getFocusedElement={ this.getFocusedElement }\r\n                setFocusedElement={ this.setFocusedElement }\r\n                reference={el => newGate = el}\r\n            />\r\n        );\r\n        this.setState ({'elements': elements}, function(){\r\n            // 'e.target' odnosi się teraz do komponentu DummyGate\r\n            const xo = e.clientX - e.target.offsetLeft;\r\n            const yo = e.clientY - e.target.offsetTop;\r\n\r\n            newGate.style.left = e.clientX - xo + 'px';\r\n            newGate.style.top  = e.clientY - yo + 'px';\r\n\r\n            this.setState({\r\n                heldElement: newGate,\r\n                heldElementOffset: [xo, yo],\r\n            });\r\n        });\r\n    }\r\n\r\n    // funkcja podnosząca bramkę\r\n    grab(e) {\r\n        const element = e.target;\r\n        if (element.classList.contains(\"LogicGate\")) {\r\n            this.setState({heldElement: element});\r\n            // obliczenie różnicy koordynatów x i y, między punktem chwytu a faktycznym położeniem bloku\r\n            const xo = e.clientX - element.offsetLeft;\r\n            const yo = e.clientY - element.offsetTop;\r\n            this.setState({heldElementOffset: [xo, yo]});\r\n        }\r\n    }\r\n\r\n    move(e) {\r\n        // przenieś bramkę (jeżeli jakaś jest trzymana)\r\n        if(this.state.heldElement){\r\n            const element = this.state.heldElement;\r\n            const canvas  = e.currentTarget;\r\n            const board   = this.boardRef.current;\r\n\r\n            let x = e.clientX - this.state.heldElementOffset[0]; // różnica x\r\n            let y = e.clientY - this.state.heldElementOffset[1]; // różnica y\r\n\r\n            if (x < board.offsetLeft)\r\n                // za daleko w lewo\r\n                x = board.offsetLeft;\r\n            else if (x + element.offsetWidth > board.offsetWidth + board.offsetLeft)\r\n                // za daleko w prawo\r\n                x = board.offsetWidth + board.offsetLeft - element.offsetWidth;\r\n            if (y < canvas.offsetTop)\r\n                // za daleko w górę\r\n                y = canvas.offsetTop;\r\n            else if (y + element.offsetHeight > canvas.offsetHeight + canvas.offsetTop)\r\n                // za daleko w dół\r\n                y = canvas.offsetHeight + canvas.offsetTop - element.offsetHeight;\r\n\r\n            element.style.left = x + 'px';\r\n            element.style.top = y + 'px';\r\n        }\r\n    }\r\n\r\n    drop() {\r\n        // upuść trzymaną bramkę\r\n        const element = this.state.heldElement;\r\n        if(element){\r\n            this.setState({heldElement: undefined});\r\n            const board = this.boardRef.current;\r\n            const y = parseInt(element.style.top.split('px')[0])\r\n\r\n            // jeżeli przeniesiony poniżej poziomu 'board', usuń\r\n            if (y + (element.offsetHeight) > board.offsetHeight + board.offsetTop){\r\n                const comp = findReact(element);\r\n                comp.selfDestruct();\r\n\r\n                const focused = this.getFocusedElement();\r\n                if(focused && focused.gate === comp)\r\n                    this.setFocusedElement(undefined);\r\n            }\r\n        }\r\n    }\r\n\r\n    // zapisuje obszar roboczy jako nową bramkę do projektu\r\n    saveGate = () => {\r\n        do {\r\n            // tutaj będzie wywoływane okno zapisu bramki\r\n            // z wyborem koloru itd. na razie tylko prompt o nazwe\r\n            var name = prompt('podaj nazwę dla tej bramki');\r\n            // sprawdza poprawność nazwy i czy nie jest już taka zdefiniowana\r\n        } while(!validateGateName(name) || global[name] !== undefined);\r\n        do {\r\n            var color = prompt('podaj kolor');\r\n        } while(color === \"\");\r\n\r\n        const newGateObject = makeNewGate(this.canvasRef, name, color);\r\n\r\n        // zapisywanie w localStorage\r\n        let saved;\r\n        if(localStorage.getItem(\"savedGates\") !== null)\r\n            saved = JSON.parse(localStorage.getItem(\"savedGates\"));\r\n        else\r\n            saved = [];\r\n        saved.push(newGateObject);\r\n        localStorage.setItem(\"savedGates\", JSON.stringify(saved));\r\n\r\n        // dodaj nową bramkę do zasobnika\r\n        this.controlPanelObject.addDummy(newGateObject);\r\n    }\r\n\r\n    // wyczyść obszar roboczy\r\n    clearCanvas = () => {\r\n        this.setState({focusedElement: undefined, elements: {inputs: [], board: [], outputs: []}})\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={ styles.Application }\r\n                onMouseDown={ (e) => this.grab(e) }\r\n                onMouseMove={ (e) => this.move(e) }\r\n                onMouseUp={ () => this.drop() }\r\n            >\r\n                <Menu functions={[this.saveGate, this.clearCanvas]}/>\r\n                <div className={ styles.Canvas }\r\n                    ref={el => this.canvasRef = el}\r\n                >\r\n                    <div className={ `Area ${styles.InputArea}` }\r\n                        onClick={ (e) => this.addNode(e, 'startNode')}\r\n                    >\r\n                        { this.state.elements.inputs }\r\n                    </div>\r\n                    <div className={ styles.Board }\r\n                        ref={this.boardRef}\r\n                    >\r\n                        { this.state.elements.board }\r\n                    </div>\r\n                    <div className={ `Area ${styles.OutputArea}` }\r\n                        onClick={ (e) => this.addNode(e, 'endNode')}\r\n                    >\r\n                        { this.state.elements.outputs }\r\n                    </div>\r\n                </div>\r\n                <ControlPanel addGate={this.addGate} reference={this.controlRef}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Application;\r\n","import React from \"react\";\r\nimport OutputPin from \"./OutputPin\";\r\nimport InputPin from \"./InputPin\";\r\nimport styles from \"./LogicGate.module.scss\";\r\n\r\nclass LogicGate extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.name = props.gateName;\r\n        this.func = props.function;\r\n        this.state = {\r\n            value: undefined, // tymczasowo\r\n            render: true,\r\n        }\r\n        this.inputs = [];\r\n        this.outputs = [];\r\n    }\r\n\r\n    // dzięki tej funkcji piny dodają się do tablicy pinów output lub input\r\n    mountPin = (pin) => {\r\n        if(pin instanceof InputPin){\r\n            this.inputs[pin.index] = pin;\r\n        } else if(pin instanceof OutputPin){\r\n            this.outputs[pin.index] = pin;\r\n        }\r\n    }\r\n\r\n    selfDestruct() {\r\n        // usuń wszystkie połączenia\r\n        this.inputs.forEach((i) => i.disconnect());\r\n        this.outputs.forEach((o) => {\r\n            o.state.childPins.forEach((i) => i.disconnect());\r\n        });\r\n        this.setState({render: false});\r\n    }\r\n\r\n    processOutput() {\r\n        let inputs = Array.from(\r\n            this.inputs.map ( (input) => input.state.value )\r\n        );\r\n\r\n        let output = this.func(inputs);\r\n        for(let i=0; i<output.length; i++)\r\n            this.outputs[i].receiveSignal(output[i]);\r\n        this.setState({value: output[0]});\r\n    }\r\n\r\n    render () {\r\n        if(this.state.render === false) return null;\r\n        // na razie używamy wartości logicznej bramki, żeby ułatwić sprawdzanie czy działają ( i tak korzystamy tylko z bramek 1-outputowych ), później powinny mieć po prostu nazwy danej bramki\r\n        let value = this.state.value;\r\n        if(value === undefined) value = \"undefined\"\r\n\r\n        let inputFields = [];\r\n        for (let i = 0; i < this.props.inputs; i++){\r\n            inputFields.push((\r\n                <InputPin\r\n                    index={ i }\r\n                    gate={ this }\r\n                    getFocusedElement={ this.props.getFocusedElement }\r\n                    mount={ this.mountPin } />\r\n            ));\r\n        }\r\n        let outputFields = [];\r\n        for (let i = 0; i < this.props.outputs; i++){\r\n            outputFields.push((\r\n                <OutputPin\r\n                    index={ i }\r\n                    gate={ this }\r\n                    getFocusedElement={ this.props.getFocusedElement }\r\n                    setFocusedElement={ this.props.setFocusedElement }\r\n                    mount={ this.mountPin } />\r\n            ));\r\n        }\r\n        return (\r\n            <div className={`LogicGate ${styles.LogicGate}`}\r\n                style={this.props.style}\r\n                ref={this.props.reference} >\r\n                <div className={styles.LogicGateInputs}>\r\n                    { inputFields }\r\n                </div>\r\n                <h5 className={styles.LogicGateValue}> { value.toString() } </h5>\r\n                <div className={styles.LogicGateOutputs}>\r\n                    { outputFields }\r\n                </div>\r\n            </div>\r\n        ) // styl LogicGateOutputs jeszcze nie istnieje\r\n    }\r\n}\r\n\r\nexport default LogicGate;\r\n","import styles from './ControlPanel.module.scss';\nimport DummyGate from '../DummyGate/DummyGate';\nimport {retrieveFunction} from '../../functions';\nimport {AND, NOT, OR} from \"../../logicalFunctions\"\nimport React from \"react\";\n\nclass ControlPanel extends React.Component {\n\n    constructor(props){\n        super();\n        this.state = {\n            // NAZWA BRAMKI MUSI BYĆ TAKA SAMA JAK NAZWA JEJ FUNKCJI\n            dummies: [\n                <DummyGate\n                    gateName={ \"AND\" }\n                    function={AND}\n                    color={\"cornflowerblue\"}\n                    inputs={ 2 }\n                    outputs={ 1 }\n                    addGate={props.addGate}\n                />,\n                <DummyGate\n                    gateName={ \"NOT\" }\n                    function={NOT}\n                    color={\"red\"}\n                    inputs={ 1 }\n                    outputs={ 1 }\n                    addGate={props.addGate}\n                />,\n                <DummyGate\n                    gateName={ \"OR\" }\n                    function={OR}\n                    color={\"chocolate\"}\n                    inputs={ 2 }\n                    outputs={ 1 }\n                    addGate={props.addGate}\n                />,\n            ],\n        }\n    }\n    addDummy = (newGate) => {\n        let dummies = this.state.dummies;\n        const func = retrieveFunction(newGate.functions);\n\n        // zrób tą funkcję dostępną globalnie\n        global[newGate.name] = func;\n\n        const newDummy = (\n            <DummyGate\n                gateName={ newGate.name }\n                function={ func }\n                color={ newGate.color }\n                inputs={ newGate.inputs }\n                outputs={ newGate.outputs }\n                addGate={ this.props.addGate }\n            />\n        )\n        dummies.push(newDummy);\n        this.setState({dummies: dummies});\n    }\n\n    render(){\n        return (\n        <nav className={ styles.ControlPanel }\n            ref={this.props.reference}\n        >\n            {this.state.dummies}\n        </nav>\n        );\n    }\n}\n\nexport default ControlPanel;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ControlPanel\":\"ControlPanel_ControlPanel__1H8pU\"};","import styles from './Menu.module.scss'\n\nconst Button = (props) => {\n    return (\n        <button onClick={props.action} className={styles.Button}>{props.text}</button>\n    )\n}\n\nexport default Button;\n","import styles from './Menu.module.scss'\nimport Button from './Button'\n\nconst Menu = (props) => {\n    return (\n        <div className={styles.Menu}>\n            <ul>\n                <li><Button text=\"zapisz bramkę\" action={() => props.functions[0]()}/></li>\n                <li><Button text=\"wyczyść canvas\" action={() => props.functions[1]()}/></li>\n                <li><Button text=\"przycisk 3\" action={() => props.functions[2]()}/></li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Menu;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Application from './Components/Application/Application';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Application />\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}