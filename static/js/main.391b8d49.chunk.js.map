{"version":3,"sources":["Components/LogicGate/LogicGate.module.scss","logicalFunctions.js","functions.js","Components/Application/Application.module.scss","Components/LogicGate/Pin/OutputPin.js","Components/LogicGate/Pin/InputPin.js","Components/LogicGate/Pin/Pin.module.scss","Components/Node/Node.module.scss","Components/DummyGate/DummyGate.js","Components/WiresBoard/Wire/Wire.module.scss","Components/LogicGate/Pin/Pin.js","Events/signalChange.js","Events/parentChange.js","Components/Node/StartNode.js","Components/Node/Node.js","Components/Node/EndNode.js","Components/Menu/Menu.module.scss","Components/Application/Application.js","Components/LogicGate/LogicGate.js","Components/ControlPanel/ControlPanel.js","Components/ControlPanel/ControlPanel.module.scss","Components/WiresBoard/WiresBoard.js","Components/WiresBoard/WiresBoard.module.scss","Events/remove.js","Components/Menu/Button.js","Components/Menu/Menu.js","Components/WiresBoard/Wire/pathFunctions.js","Components/WiresBoard/Wire/Wire.js","index.js"],"names":["module","exports","AND","inputs","isUndefined","i","length","undefined","NOT","OR","retrieveFunction","functions","funcs","map","f","eval","output","push","compareTop","a","b","parseInt","style","top","slice","makeNewGate","canvas","name","color","inputArea","childNodes","outputArea","endNodes","sort","DOM","findReact","startNodes","solve","input","alreadyVisited","state","parentPin","indexOf","StartNode","gate","args","index","func","outputs","dom","traverseUp","key","Object","keys","find","startsWith","domFiber","GetCompFiber","fiber","parentFiber","return","type","compFiber","stateNode","checkForCycle","gates","collectGates","visited","Array","recStack","DFSutil","getChildGates","children","c","loop","g","forEach","child","includes","childGates","childPins","j","EndNode","OutputPin","props","value","ref","React","createRef","setStateClass","target","cps","this","setState","stateClass","oldChildren","pinIndex","updatedChildren","splice","signal","current","dispatchEvent","signalChange","receiveSignal","className","Pin","onClick","setFocusedElement","InputPin","handleOnClick","e","newParent","getFocusedElement","changeParentPin","disconnect","connect","parentChange","drawWire","processOutput","DummyGate","backgroundColor","inputFields","outputFields","styles","LogicGate","LogicGateDummy","onMouseDown","addGate","gateName","function","inputCount","outputCount","LogicGateInputs","LogicGateValue","replace","LogicGateOutputs","Component","stateClasses","true","PinHighState","false","PinLowState","PinUndefinedState","mount","Event","handleOnMouseDown","button","toggleValue","val","Node","NodeUndefined","NodeTrue","NodeFalse","position","validateGateName","test","Application","focusedElement","heldElement","heldElementOffset","elements","board","wires","boardRef","canvasRef","controlRef","element","addNode","classList","contains","pos","clientY","offsetTop","removeWire","newGate","reference","el","xo","clientX","offsetLeft","scrollLeft","yo","offsetHeight","left","zIndex","firstPin","secondPin","newWiresList","concat","saveGate","prompt","global","saved","newGateObject","localStorage","getItem","JSON","parse","setItem","stringify","controlPanelObject","addDummy","clearCanvas","savedGate","currentTarget","x","y","offsetWidth","split","comp","selfDestruct","remove","focused","grab","onMouseMove","move","onMouseUp","drop","Canvas","InputArea","Board","OutputArea","mountPin","pin","render","o","from","ControlPanel","dummies","newDummy","handleOnWheel","deltaY","onWheel","WiresBoard","Button","action","text","Menu","calculatePath","firstPinBoundingClient","secondPinBoundingClient","paddings","firstPinCoordinates","secondPinCoordinates","height","width","a1","a2","roundings","verticalDistance","horizontalDistance","calculatePathRight","minVerticalDistance","isAbove","middleRoute","Math","abs","calculatePathLeft","WireHighState","WireLowState","WireUndefinedState","Wire","attachEventListeners","window","addEventListener","updatePosition","removeConnection","updateStateClass","examineWireVisibility","detachEventListeners","removeEventListener","getStateClass","firstPinPosition","getBoundingClientRect","secondPinPosition","currentParent","parentElement","findParentGate","gateBoundingClientRect","firstPinPaddings","bottom","secondPinPaddings","d","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.391b8d49.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"LogicGate\":\"LogicGate_LogicGate__1Cc_p\",\"LogicGateDummy\":\"LogicGate_LogicGateDummy__19ubT\",\"LogicGateInputs\":\"LogicGate_LogicGateInputs__oV9js\",\"LogicGateOutputs\":\"LogicGate_LogicGateOutputs__3uRMQ\",\"LogicGateValue\":\"LogicGate_LogicGateValue__3jkbZ\"};","// jezeli jest chociaz jeden undefined - zwroc undefined\nexport const AND = (inputs) => {\n    let isUndefined = false;\n    for (let i = 0; i < inputs.length; i++){\n        if (inputs[i] === false) return [false];\n        if (inputs[i] === undefined) isUndefined = true;\n    }\n    if ( isUndefined ) return [undefined];\n    return [true];\n}\n\nexport const NOT = (inputs) => {\n    if(inputs[0] === undefined) return [undefined];\n    return [!(inputs[0])];\n}\n\n// jezeli jest chociaz jeden true - zwroc true\nexport const OR = (inputs) => {\n    let isUndefined = false;\n    for (let i = 0; i < inputs.length; i++){\n        if ( inputs[i] === true) return [true];\n        if (inputs[i] === undefined) isUndefined = true;\n    }\n    if ( isUndefined ) return [undefined];\n    return [false];\n}\n","import EndNode from \"./Components/Node/EndNode\";\nimport StartNode from \"./Components/Node/StartNode\";\n\n//zwraca gotową funkcję na podstawie tablicy stringów z funkcjami\nexport function retrieveFunction(functions){\n    let funcs = functions.map(f => eval(f));\n    return (inputs) => {\n        let output = [];\n        for(let i=0; i<funcs.length; i++){\n            output.push(funcs[i](inputs));\n        }\n        return output;\n    }\n}\nconst compareTop = (a, b) => parseInt(a.style.top.slice(0,-2)) - parseInt(b.style.top.slice(0,-2));\n\n// zapisuje customową funkcję w formie stringa dla nowej bramki na podstawie\n// podanych obiektów endNode\nexport function makeNewGate(canvas, name, color) {\n    const inputArea = canvas.childNodes[0];\n    const outputArea = canvas.childNodes[2];\n\n    // posortowane od najwyżej położonego do najniżej\n    const endNodes  = [...outputArea.childNodes].sort(compareTop).map(DOM => findReact(DOM));\n    const startNodes = [...inputArea.childNodes].sort(compareTop).map(DOM => findReact(DOM));\n\n    const solve = (input, alreadyVisited) => {\n        const output = input.state.parentPin;\n        if (!output || (alreadyVisited[output] && alreadyVisited[output].indexOf(input) !== -1)) // był już sprawdzany\n            // to jest do poprawy\n            return \"undefined\";\n        if(output instanceof StartNode){\n            for(let i=0; i<startNodes.length; i++){\n                if(output === startNodes[i])\n                    return \"i[\" + i + \"]\";\n            }\n        } else {\n            if(!alreadyVisited[output])\n                alreadyVisited[output] = [input];\n            else\n                alreadyVisited[output].push(input);\n\n            const gate = output.gate;\n            let args = [];\n            for(const input of gate.inputs){\n                const par = input.state.parentPin;\n                if(par){\n                    args.push(solve(input, alreadyVisited));\n                } else // input bramki nie jest do niczego podpięty\n                    args.push(\"undefined\")\n            }\n            return (\n                gate.name + \"([\" + args + \"])[\" + output.index + \"]\"\n            );\n        }\n    }\n\n    let output = [];\n    for(let endNode of endNodes) {\n        let func = \"(i) => \" + solve(endNode, []);\n        output.push(func);\n    }\n    return {\n        name: name,\n        inputs: startNodes.length,\n        outputs: endNodes.length,\n        functions: output,\n        color: color,\n    };\n}\n\n// https://stackoverflow.com/questions/29321742/react-getting-a-component-from-a-dom-element-for-debugging/39165137#39165137\n// znajdź komponent React na podstawie elementu DOM\nexport function findReact(dom, traverseUp=0) {\n    const key = Object.keys(dom).find(key => key.startsWith(\"__reactFiber$\"));\n    const domFiber = dom[key];\n    if (domFiber == null) return null;\n\n    const GetCompFiber = fiber=>{\n        //return fiber._debugOwner; // this also works, but is __DEV__ only\n        let parentFiber = fiber.return;\n        while (typeof parentFiber.type == \"string\") {\n            parentFiber = parentFiber.return;\n        }\n        return parentFiber;\n    };\n    let compFiber = GetCompFiber(domFiber);\n    for (let i = 0; i < traverseUp; i++) {\n        compFiber = GetCompFiber(compFiber);\n    }\n    return compFiber.stateNode;\n}\n\nexport function checkForCycle(gate) {\n    // algorytm DFS\n    // https://www.geeksforgeeks.org/depth-first-search-or-dfs-for-a-graph\n    const gates = collectGates(gate);\n    let visited  = new Array(gates.length);\n    let recStack = new Array(gates.length);\n    for(let i=0;i<gates.length;i++) {\n        visited[i]  = false;\n        recStack[i] = false;\n    }\n\n    for (let i = 0; i < gates.length; i++)\n        if (DFSutil(i, visited, recStack, getChildGates(gates[i]))){\n            return true;\n        }\n    return false;\n}\nfunction DFSutil(i, visited, recStack, children) {\n    if (recStack[i])\n        return true;\n\n    if (visited[i])\n        return false;\n\n    visited[i] = true;\n    recStack[i] = true;\n\n    for (let c=0;c< children.length;c++)\n        if (DFSutil(c, visited, recStack, children)){\n            return true;\n        }\n\n    recStack[i] = false;\n\n    return false;\n}\n// zbierz wszystkie bramki poniżej podanej\nfunction collectGates(gate) {\n    let gates = [gate];\n    const loop = (g) => {\n        getChildGates(g).forEach((child) => {\n            // bramki nie ma jeszcze na liście\n            if(!gates.includes(child)) {\n                gates.push(child);\n                loop(child);\n            }\n        });\n    }\n    loop(gate);\n\n    return gates;\n}\n// zbierz bramki bezpośrednio podłączone do podanej jako dzieci\nfunction getChildGates(gate) {\n    let childGates = [];\n    for (let i = 0; i < gate.outputs.length; i++) {\n        // dodaje wszystkie piny, ktore pobieraja sygnal z aktualnej bramki\n        const childPins = gate.outputs[i].state.childPins;\n        for (let j = 0; j < childPins.length; j++){\n            // pomijamy EndNody\n            if (childPins[j] instanceof EndNode) continue;\n            childGates.push( childPins[j].gate );\n        }\n    }\n    return childGates;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Application\":\"Application_Application__2wRsQ\",\"Canvas\":\"Application_Canvas__35aVF\",\"Board\":\"Application_Board__sFgm3\",\"InputArea\":\"Application_InputArea__3XmUM\",\"OutputArea\":\"Application_OutputArea__flxHC\"};","import React from \"react\";\nimport Pin from \"./Pin\";\n\nimport signalChange from \"../../../Events/signalChange\";\nclass OutputPin extends Pin {\n    constructor(props) {\n        super(props);\n        this.state = {\n            childPins: [],\n            value: undefined,\n            ref: React.createRef(),\n        };\n\n        this.setStateClass();\n    }\n\n    // przylaczanie innego pina jako dziecko\n    connect(target) {\n        let cps = this.state.childPins;\n        cps.push(target);\n        this.setState({ childPins: cps });\n\n        if (!this.state.stateClass) this.setStateClass();\n    }\n\n    disconnect(target) {\n        const oldChildren = this.state.childPins;\n        const pinIndex = oldChildren.indexOf(target);\n\n        // tworzymy kopie tablicy dzieci (aby uniknac bezposredniej zmiany stanu)\n        let updatedChildren = [...oldChildren];\n        updatedChildren.splice(pinIndex, 1);\n\n        // ustawiamy nowa tablice dzieci jako stan\n        this.setState({ childPins: updatedChildren });\n    }\n\n    receiveSignal(signal) {\n        this.setState({ value: signal }, function () {\n            this.state.ref.current.dispatchEvent(signalChange);\n            this.setStateClass();\n\n            for (let i = 0; i < this.state.childPins.length; i++) {\n                this.state.childPins[i].receiveSignal(signal);\n            }\n        });\n    }\n\n    render() {\n        return (\n            <button\n                ref={this.state.ref}\n                className={`\n        ${this.style.Pin}\n        ${this.state.stateClass}\n        `}\n                onClick={() => this.props.setFocusedElement(this)}\n            >\n                {\" \"}\n            </button>\n        );\n    }\n}\n\nexport default OutputPin;\n","import React from \"react\";\nimport parentChange from \"../../../Events/parentChange\";\nimport Pin from \"./Pin\";\n\nclass InputPin extends Pin {\n    constructor(props) {\n        super(props);\n        this.state = {\n            parentPin: undefined,\n            value: undefined,\n            ref: React.createRef(),\n        };\n\n        this.setStateClass();\n    }\n\n    handleOnClick = (e) => {\n        const newParent = this.props.getFocusedElement();\n        if (newParent) this.changeParentPin(newParent);\n    };\n\n    disconnect() {\n        if (!this.state.parentPin) return;\n        this.state.parentPin.disconnect(this);\n        this.setState({\n            parentPin: undefined,\n            stateClass: \"\",\n        });\n        this.receiveSignal(undefined);\n    }\n\n    // zmień do jakiego outputa podłączony jest ten input\n    changeParentPin(newParent) {\n        if (this.state.parentPin !== newParent) {\n            if (this.state.parentPin) this.state.parentPin.disconnect(this);\n            newParent.connect(this);\n            this.setState(\n                {\n                    parentPin: newParent,\n                },\n                () => this.state.ref.current.dispatchEvent(parentChange)\n            );\n\n            this.receiveSignal(newParent.state.value);\n            this.props.drawWire(newParent, this);\n        }\n    }\n\n    receiveSignal(signal) {\n        // zapobiega pętli przy okazji\n        if (signal === this.state.value)\n            return;\n\n        this.setState({value: signal}, function() {\n                this.setStateClass();\n                this.gate.processOutput();\n            }\n        );\n    }\n\n    render() {\n        return (\n            <button\n                ref={this.state.ref}\n                className={`\n        ${this.style.Pin}\n        ${this.state.stateClass}\n        `}\n                onClick={this.handleOnClick}\n            ></button>\n        );\n    }\n}\n\nexport default InputPin;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pin\":\"Pin_Pin__2O3LC\",\"PinUndefinedState\":\"Pin_PinUndefinedState__2WxX8\",\"PinHighState\":\"Pin_PinHighState__38LMy\",\"PinLowState\":\"Pin_PinLowState__2-FI9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Node\":\"Node_Node__281H-\",\"NodeUndefined\":\"Node_NodeUndefined__3Ozqf\",\"NodeTrue\":\"Node_NodeTrue__3vLME\",\"NodeFalse\":\"Node_NodeFalse__39hyq\"};","import React from \"react\";\r\nimport OutputPin from \"../LogicGate/Pin/OutputPin\";\r\nimport InputPin from \"../LogicGate/Pin/InputPin\";\r\nimport styles from \"../LogicGate/LogicGate.module.scss\";\r\n\r\nclass DummyGate extends React.Component {\r\n    style = {backgroundColor: this.props.color}\r\n    render () {\r\n        let inputFields = [];\r\n        for (let i = 0; i < this.props.inputs; i++){\r\n            inputFields.push((\r\n                <InputPin />\r\n            ));\r\n        }\r\n        let outputFields = [];\r\n        for (let i = 0; i < this.props.outputs; i++){\r\n            outputFields.push((\r\n                <OutputPin />\r\n            ));\r\n        }\r\n        return (\r\n            <div className={`${styles.LogicGate} ${styles.LogicGateDummy}`}\r\n                style={this.style}\r\n                onMouseDown={(e) => this.props.addGate(e, {\r\n                gateName: this.props.gateName,\r\n                function: this.props.function,\r\n                style: this.style,\r\n                inputCount: this.props.inputs,\r\n                outputCount: this.props.outputs,\r\n            })}>\r\n                <div className={styles.LogicGateInputs}>\r\n                    { inputFields }\r\n                </div>\r\n                <h5 className={styles.LogicGateValue}> { this.props.gateName.replace('f_', '') } </h5>\r\n                <div className={styles.LogicGateOutputs}>\r\n                    { outputFields }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DummyGate;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wire\":\"Wire_Wire__14Zuc\",\"WireUndefinedState\":\"Wire_WireUndefinedState__WPt42\",\"WireHighState\":\"Wire_WireHighState__14PU4\",\"WireLowState\":\"Wire_WireLowState__1Ox6P\"};","import React from \"react\";\nimport styles from \"./Pin.module.scss\";\n\nconst stateClasses = {\n    true: styles.PinHighState,\n    false: styles.PinLowState,\n    undefined: styles.PinUndefinedState,\n};\nclass Pin extends React.Component {\n    constructor(props) {\n        super();\n        this.style = styles;\n        this.index = props.index;\n        this.gate = props.gate;\n    }\n\n    setStateClass = () => {\n        this.setState({\n            stateClass: stateClasses[this.state.value],\n        });\n    };\n\n    componentDidMount() {\n        if (this.props.mount) this.props.mount(this); // dodaj siebie do tablicy pinów swojej bramki\n    }\n}\n\nexport default Pin;\n","const signalChange = new Event(\"signalChange\");\n\nexport default signalChange;","const parentChange = new Event(\"parentChange\");\n\nexport default parentChange;","import React from 'react';\r\nimport Node from './Node';\r\nimport signalChange from '../../Events/signalChange';\r\nclass StartNode extends Node {\r\n    state = {\r\n        value: false,\r\n        childPins: [],\r\n\r\n        ref: React.createRef(),\r\n\r\n    }\r\n\r\n    // przylaczanie innego pina jako dziecko\r\n    connect(target) {\r\n        let cps = this.state.childPins;\r\n        cps.push(target);\r\n        this.setState({'childPins': cps});\r\n    }\r\n\r\n    disconnect(target) {\r\n        const oldChildren = this.state.childPins;\r\n        const pinIndex = oldChildren.indexOf(target);\r\n\r\n        // tworzymy kopie tablicy dzieci (aby uniknac bezposredniej zmiany stanu)\r\n        let updatedChildren = [...oldChildren];\r\n        updatedChildren.splice (pinIndex, 1);\r\n\r\n        // ustawiamy nowa tablice dzieci jako stan\r\n        this.setState({\"childPins\": updatedChildren });\r\n    }\r\n\r\n    handleOnMouseDown = (e) => {\r\n        if(e.button === 0) // Lewy PM\r\n            this.props.setFocusedElement(this);\r\n        else if (e.button === 1) // Środkowy PM\r\n            this.toggleValue();\r\n    }\r\n\r\n    toggleValue() {\r\n        const val = !(this.state.value);\r\n        this.setState({value: val}, function() {\r\n            for (let i = 0; i < this.state.childPins.length; i++) {\r\n                this.state.childPins[i].receiveSignal(val);\r\n            }\r\n\r\n            this.state.ref.current.dispatchEvent(signalChange);\r\n        });\r\n    }\r\n}\r\n\r\nexport default StartNode;\r\n","import React from 'react';\r\nimport styles from './Node.module.scss';\r\n\r\nclass Node extends React.Component {\r\n\r\n    get value() { return this.state.value }\r\n\r\n    render() {\r\n        let style;\r\n        const value = this.state.value;\r\n\r\n        // zwróć styl na podstawie wartosci\r\n        if ( value === undefined )\r\n            style = styles.NodeUndefined;\r\n        else if ( value )\r\n            style = styles.NodeTrue;\r\n        else\r\n            style = styles.NodeFalse;\r\n\r\n        const position = this.props.position + 'px';\r\n\r\n        return (\r\n            <div ref={this.state.ref}\r\n            className={ `${styles.Node} ${style}` } onMouseDown={ this.handleOnMouseDown } style={{ top: position }} >\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Node;\r\n","import React from \"react\";\nimport parentChange from \"../../Events/parentChange\";\nimport Node from \"./Node\";\n\nclass EndNode extends Node {\n  state = {\n    value: undefined,\n    parentPin: undefined,\n\n    ref: React.createRef(),\n  };\n\n  handleOnMouseDown = (e) => {\n    if (e.button === 0) {\n      const newParent = this.props.getFocusedElement();\n      if (newParent) this.changeParentPin(newParent);\n    }\n  };\n\n  disconnect = () => this.changeParentPin(undefined);\n\n  changeParentPin = (newParent) => {\n    if (newParent !== this.state.parentPin) {\n      if (this.state.parentPin) this.state.parentPin.disconnect(this);\n\n      this.setState(\n        { parentPin: newParent },\n        // funkcja powiadamiajaca przewod o usunieciu polaczenia\n        () => {\n          this.state.ref.current.dispatchEvent(parentChange);\n        }\n      );\n\n      if (newParent) {\n        newParent.connect(this);\n        this.props.drawWire(newParent, this);\n        this.receiveSignal(newParent.state.value);\n      } else this.receiveSignal(undefined);\n    }\n  };\n\n  receiveSignal(signal) {\n    this.setState({ value: signal });\n  }\n}\n\nexport default EndNode;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Menu_Menu__2X7bN\",\"Button\":\"Menu_Button__8Dt-Z\"};","import React from \"react\";\r\nimport styles from './Application.module.scss';\r\nimport LogicGate from \"../LogicGate/LogicGate\";\r\nimport StartNode from \"../Node/StartNode\";\r\nimport EndNode from \"../Node/EndNode\";\r\nimport ControlPanel from \"../ControlPanel/ControlPanel\";\r\nimport Menu from \"../Menu/Menu\"\r\nimport {findReact, makeNewGate} from \"../../functions\";\r\nimport {AND, NOT, OR} from \"../../logicalFunctions\"\r\nimport Wire from '../WiresBoard/Wire/Wire.js';\r\nimport WiresBoard from \"../WiresBoard/WiresBoard\";\r\nimport remove from \"../../Events/remove\";\r\n\r\nfunction validateGateName(name) {\r\n    // nazwa może składać się wyłącznie z liter i cyfr\r\n    // oraz musi zaczynać się od litery\r\n    var regex = /^f_[A-Za-z0-9]*$/;\r\n    return regex.test(name);\r\n}\r\nclass Application extends React.Component {\r\n    state = {\r\n        focusedElement: undefined,    // aktualnie wybrane wyjście\r\n        heldElement: undefined,       // aktualnie trzymana bramka\r\n        heldElementOffset: [0, 0],    // różnica koordynatów x i y, między punktem chwytu a faktycznym położeniem bloku\r\n        elements: {\r\n            inputs: [],\r\n            board: [],\r\n            outputs: [],\r\n        },\r\n        wires: [],\r\n    }\r\n\r\n    boardRef = React.createRef()\r\n    canvasRef = React.createRef()\r\n    controlRef = React.createRef()\r\n    controlPanelObject\r\n\r\n    // funkcja zmieniajaca aktualnie wybrane wyjscie - pozwala na uzycie kliknietego wyjscia na wejscie bramki logicznej\r\n    setFocusedElement = ( element ) => {\r\n        this.setState ({'focusedElement': element});\r\n    }\r\n\r\n    // funkcja zwracajaca aktualnie wybrane wyjscie - umozliwia kliknietej bramce logicznej zmiane wejscia na wczesniej klikniete wyjscie\r\n    getFocusedElement = () => this.state.focusedElement;\r\n\r\n    // tylko raz po wyrenderowaniu tego komponentu\r\n    componentDidMount(){\r\n        global.NOT = NOT;\r\n        global.AND = AND;\r\n        global.OR = OR;\r\n\r\n        this.controlPanelObject = findReact(this.controlRef.current);\r\n\r\n        // wczytaj zapisane bramki z localstorage\r\n        let saved;\r\n        if(localStorage.getItem(\"savedGates\") !== null)\r\n            saved = JSON.parse(localStorage.getItem(\"savedGates\"));\r\n        else\r\n            saved = [];\r\n\r\n        for(const savedGate of saved){\r\n            this.controlPanelObject.addDummy(savedGate);\r\n        }\r\n    }\r\n\r\n    addNode = (e, type) => {\r\n        // dodaj tylko jeżeli kliknięto na czysty obszar (nie np istniejący node)\r\n        if ( !e.target.classList.contains('Area') )\r\n            return;\r\n\r\n        const pos = e.clientY - e.target.offsetTop - 10; // 10 - połowa wysokości\r\n        let elements = this.state.elements;\r\n        if (type === \"startNode\")\r\n            elements.inputs.push(\r\n                <StartNode setFocusedElement={ this.setFocusedElement } position={ pos }/>\r\n            );\r\n        else // endNode\r\n            elements.outputs.push(\r\n                <EndNode drawWire={ this.drawWire } removeWire={ this.removeWire }\r\n                getFocusedElement={ this.getFocusedElement } position={ pos }/>\r\n            );\r\n        this.setState ({'elements': elements});\r\n    }\r\n\r\n    addGate = (e, args) => {\r\n        let elements = this.state.elements;\r\n        let newGate;\r\n        elements.board.push(\r\n            <LogicGate\r\n                gateName={ args.gateName }\r\n                inputs={ args.inputCount }\r\n                outputs={ args.outputCount }\r\n                function={ args.function }\r\n                style={ args.style }\r\n                drawWire = { this.drawWire }\r\n                getFocusedElement={ this.getFocusedElement }\r\n                setFocusedElement={ this.setFocusedElement }\r\n                reference={el => newGate = el}\r\n            />\r\n        );\r\n        this.setState ({'elements': elements}, function(){\r\n            // 'e.target' odnosi się teraz do komponentu DummyGate\r\n            const xo = e.clientX - e.target.offsetLeft + this.controlRef.current.scrollLeft;\r\n            const yo = e.clientY - e.target.offsetTop + (e.target.offsetHeight/2);\r\n\r\n            newGate.style.left = e.clientX - xo + 'px';\r\n            newGate.style.top  = e.clientY - yo + 'px';\r\n            newGate.style.zIndex = 2;\r\n\r\n            this.setState({\r\n                heldElement: newGate,\r\n                heldElementOffset: [xo, yo],\r\n            });\r\n        });\r\n    }\r\n\r\n    // funkcja podnosząca bramkę\r\n    grab(e) {\r\n        const element = e.target;\r\n        if (element.classList.contains(\"LogicGate\")) {\r\n            element.style.zIndex = 2;\r\n            this.setState({heldElement: element});\r\n            // obliczenie różnicy koordynatów x i y, między punktem chwytu a faktycznym położeniem bloku\r\n            const xo = e.clientX - element.offsetLeft;\r\n            const yo = e.clientY - element.offsetTop;\r\n            this.setState({heldElementOffset: [xo, yo]});\r\n        }\r\n    }\r\n\r\n    move(e) {\r\n        // przenieś bramkę (jeżeli jakaś jest trzymana)\r\n        if(this.state.heldElement){\r\n            const element = this.state.heldElement;\r\n            const canvas  = e.currentTarget;\r\n            const board   = this.boardRef.current;\r\n\r\n            let x = e.clientX - this.state.heldElementOffset[0]; // różnica x\r\n            let y = e.clientY - this.state.heldElementOffset[1]; // różnica y\r\n\r\n            if (x < board.offsetLeft)\r\n                // za daleko w lewo\r\n                x = board.offsetLeft;\r\n            else if (x + element.offsetWidth > board.offsetWidth + board.offsetLeft)\r\n                // za daleko w prawo\r\n                x = board.offsetWidth + board.offsetLeft - element.offsetWidth;\r\n            if (y < canvas.offsetTop)\r\n                // za daleko w górę\r\n                y = canvas.offsetTop;\r\n            else if (y + element.offsetHeight > canvas.offsetHeight + canvas.offsetTop)\r\n                // za daleko w dół\r\n                y = canvas.offsetHeight + canvas.offsetTop - element.offsetHeight;\r\n\r\n            element.style.left = x + 'px';\r\n            element.style.top = y + 'px';\r\n        }\r\n    }\r\n\r\n    drop() {\r\n        // upuść trzymaną bramkę\r\n        const element = this.state.heldElement;\r\n        if(element){\r\n            this.setState({heldElement: undefined});\r\n            const board = this.boardRef.current;\r\n            const y = parseInt(element.style.top.split('px')[0])\r\n\r\n            // jeżeli przeniesiony poniżej poziomu 'board', usuń\r\n            if (y + (element.offsetHeight) > board.offsetHeight + board.offsetTop){\r\n                const comp = findReact(element);\r\n                comp.selfDestruct();\r\n                element.dispatchEvent(remove);\r\n\r\n                const focused = this.getFocusedElement();\r\n                if(focused && focused.gate === comp)\r\n                    this.setFocusedElement(undefined);\r\n            } else {\r\n                element.style.zIndex = 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    drawWire = (firstPin, secondPin) => {\r\n        const newWiresList = this.state.wires.concat([ <Wire firstPin={firstPin} secondPin={secondPin} /> ]);\r\n        this.setState({\"wires\": newWiresList});\r\n    }\r\n\r\n    // zapisuje obszar roboczy jako nową bramkę do projektu\r\n    saveGate = () => {\r\n        do {\r\n            // tutaj będzie wywoływane okno zapisu bramki\r\n            // z wyborem koloru itd. na razie tylko prompt o nazwe\r\n            var name = 'f_' + prompt('podaj nazwę dla tej bramki');\r\n            // sprawdza poprawność nazwy i czy nie jest już taka zdefiniowana\r\n        } while(!validateGateName(name) || global[name] !== undefined);\r\n        do {\r\n            var color = prompt('podaj kolor');\r\n        } while(color === \"\");\r\n\r\n        const newGateObject = makeNewGate(this.canvasRef, name, color);\r\n\r\n        // zapisywanie w localStorage\r\n        let saved;\r\n        if(localStorage.getItem(\"savedGates\") !== null)\r\n            saved = JSON.parse(localStorage.getItem(\"savedGates\"));\r\n        else\r\n            saved = [];\r\n        saved.push(newGateObject);\r\n        localStorage.setItem(\"savedGates\", JSON.stringify(saved));\r\n\r\n        // dodaj nową bramkę do zasobnika\r\n        this.controlPanelObject.addDummy(newGateObject);\r\n    }\r\n\r\n    // wyczyść obszar roboczy\r\n    clearCanvas = () => {\r\n        this.setState({focusedElement: undefined, elements: {inputs: [], board: [], outputs: []}, wires: []})\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={ styles.Application }\r\n                onMouseDown={ (e) => this.grab(e) }\r\n                onMouseMove={ (e) => this.move(e) }\r\n                onMouseUp={ () => this.drop() }\r\n            >\r\n                <Menu functions={[this.saveGate, this.clearCanvas]}/>\r\n                <WiresBoard wires={this.state.wires} />\r\n                <div className={ styles.Canvas }\r\n                    ref={el => this.canvasRef = el}\r\n                >\r\n                    <div className={ `Area ${styles.InputArea}` }\r\n                        onClick={ (e) => this.addNode(e, 'startNode')}\r\n                    >\r\n                        { this.state.elements.inputs }\r\n                    </div>\r\n                    <div className={ styles.Board }\r\n                        ref={this.boardRef}\r\n                    >\r\n\r\n                        { this.state.elements.board }\r\n\r\n                    </div>\r\n                    <div className={ `Area ${styles.OutputArea}` }\r\n                        onClick={ (e) => this.addNode(e, 'endNode')}\r\n                    >\r\n                        { this.state.elements.outputs }\r\n                    </div>\r\n                </div>\r\n                <ControlPanel addGate={this.addGate} reference={this.controlRef}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Application;\r\n","import React from \"react\";\r\nimport OutputPin from \"./Pin/OutputPin\";\r\nimport InputPin from \"./Pin/InputPin\";\r\nimport styles from \"./LogicGate.module.scss\";\r\n\r\nclass LogicGate extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.name = props.gateName;\r\n        this.func = props.function;\r\n        this.state = {\r\n            value: undefined, // tymczasowo\r\n            render: true,\r\n        };\r\n        this.inputs = [];\r\n        this.outputs = [];\r\n    }\r\n\r\n    // dzięki tej funkcji piny dodają się do tablicy pinów output lub input\r\n    mountPin = (pin) => {\r\n        if (pin instanceof InputPin) {\r\n            this.inputs[pin.index] = pin;\r\n        } else if (pin instanceof OutputPin) {\r\n            this.outputs[pin.index] = pin;\r\n        }\r\n    };\r\n\r\n    selfDestruct() {\r\n        // usuń wszystkie połączenia\r\n        this.inputs.forEach((i) => i.disconnect());\r\n        this.outputs.forEach((o) => {\r\n            o.state.childPins.forEach((i) => i.disconnect());\r\n        });\r\n        this.setState({ render: false });\r\n    }\r\n\r\n    processOutput() {\r\n        let inputs = Array.from(this.inputs.map((input) => input.state.value));\r\n\r\n        let output = this.func(inputs);\r\n        for (let i = 0; i < output.length; i++)\r\n            this.outputs[i].receiveSignal(output[i]);\r\n        this.setState({ value: output[0] });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.render === false) return null;\r\n\r\n        let inputFields = [];\r\n        for (let i = 0; i < this.props.inputs; i++) {\r\n            inputFields.push(\r\n                <InputPin\r\n                    drawWire={this.props.drawWire}\r\n                    index={i}\r\n                    gate={this}\r\n                    getFocusedElement={this.props.getFocusedElement}\r\n                    mount={this.mountPin}\r\n                />\r\n            );\r\n        }\r\n\r\n        let outputFields = [];\r\n        for (let i = 0; i < this.props.outputs; i++) {\r\n            outputFields.push(\r\n                <OutputPin\r\n                    index={i}\r\n                    gate={this}\r\n                    getFocusedElement={this.props.getFocusedElement}\r\n                    setFocusedElement={this.props.setFocusedElement}\r\n                    mount={this.mountPin}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div\r\n                className={`LogicGate ${styles.LogicGate}`}\r\n                style={this.props.style}\r\n                ref={this.props.reference}\r\n            >\r\n                <div className={styles.LogicGateInputs}>{inputFields}</div>\r\n                <h5 className={styles.LogicGateValue}> {this.name.replace('f_', '')} </h5>\r\n                <div className={styles.LogicGateOutputs}>{outputFields}</div>\r\n            </div>\r\n        ); // styl LogicGateOutputs jeszcze nie istnieje\r\n    }\r\n}\r\n\r\nexport default LogicGate;\r\n","import styles from './ControlPanel.module.scss';\nimport DummyGate from '../DummyGate/DummyGate';\nimport {retrieveFunction} from '../../functions';\nimport {AND, NOT, OR} from \"../../logicalFunctions\"\nimport React from \"react\";\n\nclass ControlPanel extends React.Component {\n\n    constructor(props){\n        super();\n        this.state = {\n            // NAZWA BRAMKI MUSI BYĆ TAKA SAMA JAK NAZWA JEJ FUNKCJI\n            dummies: [\n                <DummyGate\n                    gateName={ \"AND\" }\n                    function={AND}\n                    color={\"cornflowerblue\"}\n                    inputs={ 2 }\n                    outputs={ 1 }\n                    addGate={props.addGate}\n                />,\n                <DummyGate\n                    gateName={ \"NOT\" }\n                    function={NOT}\n                    color={\"red\"}\n                    inputs={ 1 }\n                    outputs={ 1 }\n                    addGate={props.addGate}\n                />,\n                <DummyGate\n                    gateName={ \"OR\" }\n                    function={OR}\n                    color={\"chocolate\"}\n                    inputs={ 2 }\n                    outputs={ 1 }\n                    addGate={props.addGate}\n                />,\n            ],\n        }\n    }\n\n    addDummy = (newGate) => {\n        let dummies = this.state.dummies;\n        const func = retrieveFunction(newGate.functions);\n\n        // zrób tą funkcję dostępną globalnie\n        global[newGate.name] = func;\n\n        const newDummy = (\n            <DummyGate\n                gateName={ newGate.name }\n                function={ func }\n                color={ newGate.color }\n                inputs={ newGate.inputs }\n                outputs={ newGate.outputs }\n                addGate={ this.props.addGate }\n            />\n        )\n        dummies.push(newDummy);\n        this.setState({dummies: dummies});\n    }\n\n    handleOnWheel = (e) => {\n        const el = e.currentTarget;\n        el.scrollLeft += e.deltaY;\n    }\n\n    render(){\n        return (\n        <div\n            className={ styles.ControlPanel }\n            ref={this.props.reference}\n            onWheel={this.handleOnWheel}\n        >\n            {this.state.dummies}\n        </div>\n        );\n    }\n}\n\nexport default ControlPanel;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ControlPanel\":\"ControlPanel_ControlPanel__1H8pU\"};","import styles from './WiresBoard.module.scss';\n\nconst WiresBoard = (props) => {\n    return (\n        <svg className={ styles.WiresBoard }>\n                { props.wires }\n        </svg>\n    )\n}\n\nexport default WiresBoard;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WiresBoard\":\"WiresBoard_WiresBoard__1awF0\"};","const remove = new Event(\"remove\");\n\nexport default remove;","import styles from './Menu.module.scss'\n\nconst Button = (props) => {\n    return (\n        <button onClick={props.action} className={styles.Button}>{props.text}</button>\n    )\n}\n\nexport default Button;\n","import styles from './Menu.module.scss'\nimport Button from './Button'\n\nconst Menu = (props) => {\n    return (\n        <div className={styles.Menu}>\n            <ul>\n                <li><Button text=\"zapisz bramkę\" action={() => props.functions[0]()}/></li>\n                <li><Button text=\"wyczyść canvas\" action={() => props.functions[1]()}/></li>\n                <li><Button text=\"przycisk 3\" action={() => props.functions[2]()}/></li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Menu;\n","function calculatePathRight(firstPinCoordinates, secondPinCoordinates) {\n    const verticalDistance = secondPinCoordinates[1] - firstPinCoordinates[1];\n    const horizontalDistance = secondPinCoordinates[0] - firstPinCoordinates[0];\n\n    // jezeli docelowy punkt jest nizej:\n    // ostatnie 3 wartosci a1: 1 12,12\n    // jezeli jest wyzej:\n    // ostatnie 3 wartosci a1: 0 12,-12\n    let a1, a2, roundings;\n    if (verticalDistance < -25) {\n        a1 = \"a20,20 0 0 0 12,-12\"\n        a2 = \"a20,20 0 0 1 12 -12\"\n    } else if (verticalDistance > 25) {\n        a1 = \"a20,20 0 0 1 12 12\";\n        a2 = \"a20,20 0 0 0 12 12\"\n    }\n\n    if (a1) {\n        roundings =\n            `\n                l ${[horizontalDistance / 2, 0]}\n                ${a1} \n                l ${[ 0, verticalDistance < 0 ? verticalDistance + 25 : verticalDistance - 25 ]} \n                ${a2}\n                `\n    } else {\n        roundings = \"\";\n    }\n\n    return `M ${firstPinCoordinates} \n            ${roundings}\n        L ${secondPinCoordinates}\n        `\n}\n\nfunction calculatePathLeft(firstPinCoordinates, secondPinCoordinates, paddings) {\n    const verticalDistance = secondPinCoordinates[1] - firstPinCoordinates[1];\n    const horizontalDistance = secondPinCoordinates[0] - firstPinCoordinates[0];\n\n    const isAbove = verticalDistance > 0;\n\n    let middleRoute = \"\";\n    const spaceSize = 75;\n    let minVerticalDistance;\n\n    if (isAbove) minVerticalDistance = paddings[0][1] + paddings[1][0] + spaceSize;\n    else minVerticalDistance = paddings[0][0] + paddings[1][1] + spaceSize;\n\n    // zmiesci sie pomiedzy\n    if (Math.abs(verticalDistance) > minVerticalDistance) {\n\n        // pierwszy jest na gorze\n        if (isAbove) {\n            middleRoute =\n                `\n                a20,20 0 0 1 12,12\n                l 0,${ (verticalDistance / 2) - 25 }\n\n                a20,20 0 0 1 -12,12\n\n                l ${horizontalDistance - 50}, 0\n\n                a20,20 0 0 0 -12,12\n\n                L ${ secondPinCoordinates[0] - 35}, ${secondPinCoordinates[1] - 15}\n\n                a20,20 0 0 0 12,12\n\n                `\n\n        } else {\n            middleRoute =\n                `   \n                    a20,20 0 0 0 12,-12\n                    l 0,${ (verticalDistance / 2) + 25 }\n\n                    a20,20 0 0 0 -12,-12\n\n                    l ${horizontalDistance - 50}, 0\n\n                    a20,20 0 0 1 -12,-12\n\n                    L ${ secondPinCoordinates[0] - 35}, ${secondPinCoordinates[1] + 15}\n\n                    a20,20 0 0 1 12,-12\n\n                `\n        }\n\n        // nie zmiesci sie pomiedzy\n    } else {\n\n        if (isAbove) {\n            middleRoute =\n                `\n                    a20,20 0 0 0 12,-12\n\n                    l 0, ${ 2 * paddings[0][0] }\n\n                    a20,20 0 0 0 -12,-12\n\n                    l ${horizontalDistance - 35}, 0\n\n                    a20,20 0 0 0 -12,12\n\n                    L ${ secondPinCoordinates[0] - 25}, ${secondPinCoordinates[1] - 10}\n\n                    a20,20 0 0 0 12, 12\n                `\n        } else {\n\n            middleRoute =\n                `\n                    a20,20 0 0 1 12,12\n\n                    l 0, ${ -2 * paddings[0][0] }\n\n                    a20,20 0 0 1 -12,12\n\n                    l ${horizontalDistance - 35}, 0\n\n                    a20,20 0 0 1 -12,-12\n\n                    L ${ secondPinCoordinates[0] - 25}, ${secondPinCoordinates[1] + 15}\n\n                    a20,20 0 0 1 12, -12\n                `\n        }\n    }\n\n    // zawsze wychodzi 25 w prawo i o \n    // jezeli sie zmiesci\n    return `\n        M ${firstPinCoordinates}\n        l 25, 0\n        ${middleRoute}\n        \n        L ${secondPinCoordinates}\n    `\n}\n\nfunction calculatePath(firstPinBoundingClient, secondPinBoundingClient, paddings) {\n\n    //const firstPinBoundingClient = firstPin.getBoundingClientRect();\n    const firstPinCoordinates = [firstPinBoundingClient.left, firstPinBoundingClient.top];\n\n    //const secondPinBoundingClient = secondPin.getBoundingClientRect();\n    const secondPinCoordinates = [secondPinBoundingClient.left, secondPinBoundingClient.top];\n\n    // pozycje rowno w srodku pinu\n    firstPinCoordinates[1] += firstPinBoundingClient.height / 2;\n    firstPinCoordinates[0] += firstPinBoundingClient.width / 2;\n    secondPinCoordinates[1] += secondPinBoundingClient.height / 2;\n    secondPinCoordinates[0] += secondPinBoundingClient.width / 2;\n\n    // M - MOVE TO (WEDLUG POZYCJI BEWZGLEDNEJ)\n    // L - LINE TO (WEDLUG POZYCJI BEZWZGLEDNEJ)\n    // https://developer.mozilla.org/en-US/docs/Web/SVG/Element/path\n    // przewod idzie od wyjscia do wejscia\n\n    // jezeli docelowy punkt jest prawo\n    if (secondPinCoordinates[0] > firstPinCoordinates[0] + 30)\n        return calculatePathRight(firstPinCoordinates, secondPinCoordinates, paddings)\n    else\n        // punkt docelowy jest na lewo / mniej niz 30px na prawo\n        return calculatePathLeft(firstPinCoordinates, secondPinCoordinates, paddings)\n\n\n}\n\nexport default calculatePath;","import React from \"react\";\nimport styles from \"./Wire.module.scss\";\nimport calculatePath from \"./pathFunctions\";\n\nconst stateClasses = {\n    true: styles.WireHighState,\n    false: styles.WireLowState,\n    undefined: styles.WireUndefinedState,\n};\n\n// na wypadek jakby HTML ulegl zmianie\nfunction findParentGate(pin) {\n    let currentParent = pin.parentElement;\n\n    while (!currentParent.classList.contains(\"LogicGate\")) {\n        currentParent = currentParent.parentElement;\n    }\n\n    return currentParent;\n}\nclass Wire extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstPin = props.firstPin;\n        this.secondPin = props.secondPin;\n\n        // jezeli pin jest wezlem startowym, to on jest uznawany za bramke\n        this.gates = [this.firstPin, this.secondPin].map((pin) => {\n            return pin.gate\n                ? findParentGate(pin.state.ref.current)\n                : pin.state.ref.current;\n        });\n\n        this.attachEventListeners();\n\n        this.state = {\n            // pozycje pinow w momencie tworzenia polaczenia\n            firstPinPosition:\n                props.firstPin.state.ref.current.getBoundingClientRect(),\n            secondPinPosition:\n                props.secondPin.state.ref.current.getBoundingClientRect(),\n\n            stateClass: this.getStateClass(),\n            render: true,\n        };\n\n        // przyda sie do lepszego zaginania polaczen -\n        // [ odleglosc od gornej granicy bramki, odleglosc od dolnej granicy bramki ]\n        {\n            const gateBoundingClientRect =\n                this.gates[0].getBoundingClientRect();\n\n            this.firstPinPaddings = [\n                gateBoundingClientRect.top - this.state.firstPinPosition.top,\n                gateBoundingClientRect.bottom -\n                    this.state.firstPinPosition.bottom,\n            ];\n        }\n\n        {\n            const gateBoundingClientRect =\n                this.gates[1].getBoundingClientRect();\n\n            this.secondPinPaddings = [\n                gateBoundingClientRect.top - this.state.secondPinPosition.top,\n                gateBoundingClientRect.bottom -\n                    this.state.secondPinPosition.bottom,\n            ];\n        }\n    }\n\n    attachEventListeners = () => {\n        window.addEventListener(\n            \"resize\",\n            this.updatePosition\n        );\n\n        for (let gate of this.gates) {\n            gate.addEventListener(\n                \"mousemove\",    // zmiana na move\n                this.updatePosition\n            );\n\n            gate.addEventListener(\n                \"remove\",\n                this.removeConnection\n            );\n        }\n\n        this.firstPin.state.ref.current.addEventListener(\n            \"signalChange\",\n            this.updateStateClass\n        );\n\n        this.secondPin.state.ref.current.addEventListener(\n            \"parentChange\",\n            this.examineWireVisibility\n        );\n    }\n\n    detachEventListeners = () => {\n        window.removeEventListener(\n            \"resize\",\n            this.updatePosition\n        );\n\n        // usuwam event listenery z obu pinow\n        for (let gate of this.gates) {\n            gate.removeEventListener(\n                \"mousemove\",\n                this.updatePosition\n            );\n\n            gate.removeEventListener(\n                \"remove\",\n                this.removeConnection\n            );\n        }\n\n        this.firstPin.state.ref.current.removeEventListener(\n            \"signalChange\",\n            this.updateStateClass\n        );\n\n        // zapobieganie \"powracaniu\" dawnych przewodow podczas przywracania dawnego polaczenia\n        this.secondPin.state.ref.current.removeEventListener(\n            \"parentChange\",\n            this.examineWireVisibility\n        );\n    }\n\n    handleOnClick = () => this.removeConnection();\n\n    removeConnection = () => {\n        this.detachEventListeners();\n\n        // usuwam polaczenie z perspektywy dziecka i rodzica\n        this.secondPin.disconnect();\n\n        // usuwam graficzny przewod\n        this.setState({\n            render: false,\n        });\n    };\n\n    examineWireVisibility = () => {\n        this.setState({\n            // render tylko, gdy oba piny sa polaczone\n            render: this.firstPin === this.secondPin.state.parentPin,\n        });\n    };\n\n    getStateClass = () => stateClasses[this.firstPin.state.value];\n\n    updateStateClass = () => {\n        this.setState({\n            stateClass: this.getStateClass(),\n        })\n    };\n\n    // funkcja powodujaca aktualizacje pozycji pinow w stanie\n    updatePosition = () => {\n        this.setState({\n            firstPinPosition:\n                this.firstPin.state.ref.current.getBoundingClientRect(),\n            secondPinPosition:\n                this.secondPin.state.ref.current.getBoundingClientRect(),\n        });\n    };\n\n    render() {\n        if (!this.state.render) return null;\n        return (\n            <path\n                d={calculatePath(\n                    this.state.firstPinPosition,\n                    this.state.secondPinPosition,\n                    [this.firstPinPaddings, this.secondPinPaddings]\n                ).replace(/(\\r\\n|\\n|\\r| {2})/gm, \"\")}\n\t\tclassName={`${styles.Wire} ${this.state.stateClass}`}\n\t\tonClick={this.handleOnClick}\n            />\n        );\n    }\n}\n\nexport default Wire;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Application from './Components/Application/Application';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Application />\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}