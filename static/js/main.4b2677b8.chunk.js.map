{"version":3,"sources":["logicalFunctions.js","Components/LogicGate/LogicGate.module.scss","Components/Node/Node.module.scss","Components/DummyGate/DummyGate.js","Components/Node/StartNode.js","functions.js","Components/Application/Application.module.scss","Components/LogicGate/Pin/OutputPin.js","Components/LogicGate/Pin/InputPin.js","findingFunctions.js","Components/LogicGate/Pin/Pin.module.scss","Components/WiresBoard/Wire/Wire.module.scss","Components/LogicGate/Pin/Pin.js","Events/signalChange.js","Events/parentChange.js","Components/Node/Node.js","Events/remove.js","Components/Node/EndNode.js","Components/Menu/Menu.module.scss","Events/move.js","Components/Application/Application.js","Components/LogicGate/LogicGate.js","Components/ControlPanel/ControlPanel.js","Components/ControlPanel/ControlPanel.module.scss","Components/WiresBoard/WiresBoard.js","Components/WiresBoard/WiresBoard.module.scss","Components/Menu/Button.js","Components/Menu/Menu.js","Components/WiresBoard/Wire/pathFunctions.js","Components/WiresBoard/Wire/Wire.js","index.js"],"names":["AND","inputs","isUndefined","i","length","undefined","NOT","OR","TRUE","FALSE","module","exports","DummyGate","style","backgroundColor","props","color","handleMouseDown","e","button","addGate","gateName","function","inputCount","outputCount","outputs","inputFields","this","push","outputFields","className","styles","LogicGate","LogicGateDummy","onMouseDown","LogicGateInputs","LogicGateValue","replace","LogicGateOutputs","React","Component","StartNode","state","childPins","value","handleOnMouseDown","setFocusedElement","toggleValue","selfDestruct","fireRemoveEvent","setState","render","disconnect","target","cps","oldChildren","pinIndex","indexOf","updatedChildren","splice","val","receiveSignal","ref","current","dispatchEvent","signalChange","Node","retrieveFunction","functions","funcs","map","f","eval","output","compareTop","a","b","parseInt","top","slice","makeNewGate","canvas","name","inputArea","childNodes","outputArea","endNodes","sort","DOM","findReact","startNodes","solve","input","alreadyVisited","parentPin","gate","args","index","func","dom","traverseUp","key","Object","keys","find","startsWith","domFiber","GetCompFiber","fiber","parentFiber","return","type","compFiber","stateNode","checkForCycle","gates","collectGates","visited","Array","recStack","DFSutil","getChildGates","children","c","loop","g","forEach","child","includes","childGates","j","EndNode","OutputPin","createRef","setStateClass","stateClass","signal","Pin","onClick","InputPin","handleOnClick","newParent","getFocusedElement","changeParentPin","connect","parentChange","drawWire","processOutput","findParentGate","pin","currentParent","parentElement","classList","contains","findParentNode","stateClasses","true","PinHighState","false","PinLowState","PinUndefinedState","mount","Event","renderNameBox","toggleNameBox","handleHandleMouseUp","onInputChange","remove","NodeButtonUndefined","NodeButtonTrue","NodeButtonFalse","position","nameBox","NodeNameBox","onChange","onKeyDown","NodeStart","NodeEnd","NodeHandle","onMouseUp","NodeButton","move","validateGateName","test","Application","focusedElement","heldElement","heldElementOffset","elements","board","wires","boardRef","canvasRef","controlRef","element","addNode","pos","clientY","offsetTop","removeWire","newGate","reference","el","xo","clientX","offsetLeft","scrollLeft","yo","offsetHeight","left","zIndex","grab","firstPin","secondPin","newWiresList","concat","saveGate","prompt","global","saved","newGateObject","localStorage","getItem","JSON","parse","setItem","stringify","controlPanelObject","addDummy","clearCanvas","window","addEventListener","preventDefault","savedGate","currentTarget","x","y","offsetWidth","node","split","comp","focused","onMouseMove","drop","Canvas","InputArea","Board","OutputArea","mountPin","o","from","ControlPanel","dummies","newDummy","handleOnWheel","deltaY","onWheel","WiresBoard","Button","action","text","Menu","buttons","calculatePath","firstPinBoundingClient","secondPinBoundingClient","paddings","firstPinCoordinates","secondPinCoordinates","height","width","a1","a2","roundings","verticalDistance","horizontalDistance","calculatePathRight","minVerticalDistance","isAbove","middleRoute","Math","abs","calculatePathLeft","WireHighState","WireLowState","WireUndefinedState","Wire","attachEventListeners","updatePosition","removeConnection","updateStateClass","examineWireVisibility","detachEventListeners","removeEventListener","getStateClass","firstPinPosition","getBoundingClientRect","secondPinPosition","gateBoundingClientRect","firstPinPaddings","bottom","secondPinPaddings","d","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b2677b8.chunk.js","sourcesContent":["// jezeli jest chociaz jeden undefined - zwroc undefined\nexport const AND = (inputs) => {\n    let isUndefined = false;\n    for (let i = 0; i < inputs.length; i++){\n        if (inputs[i] === false) return [false];\n        if (inputs[i] === undefined) isUndefined = true;\n    }\n    if ( isUndefined ) return [undefined];\n    return [true];\n}\n\nexport const NOT = (inputs) => {\n    if(inputs[0] === undefined) return [undefined];\n    return [!(inputs[0])];\n}\n\n// jezeli jest chociaz jeden true - zwroc true\nexport const OR = (inputs) => {\n    let isUndefined = false;\n    for (let i = 0; i < inputs.length; i++){\n        if ( inputs[i] === true) return [true];\n        if (inputs[i] === undefined) isUndefined = true;\n    }\n    if ( isUndefined ) return [undefined];\n    return [false];\n}\n\nexport const TRUE = () => [true]\nexport const FALSE = () => [false]\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LogicGate\":\"LogicGate_LogicGate__1Cc_p\",\"LogicGateDummy\":\"LogicGate_LogicGateDummy__19ubT\",\"LogicGateInputs\":\"LogicGate_LogicGateInputs__oV9js\",\"LogicGateOutputs\":\"LogicGate_LogicGateOutputs__3uRMQ\",\"LogicGateValue\":\"LogicGate_LogicGateValue__3jkbZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Node\":\"Node_Node__281H-\",\"NodeStart\":\"Node_NodeStart__1jpUM\",\"NodeButton\":\"Node_NodeButton__1rebI\",\"NodeNameBox\":\"Node_NodeNameBox__345Rr\",\"NodeEnd\":\"Node_NodeEnd__4v1_S\",\"NodeHandle\":\"Node_NodeHandle__KdPUw\",\"NodeButtonUndefined\":\"Node_NodeButtonUndefined__2T20-\",\"NodeButtonTrue\":\"Node_NodeButtonTrue__1G1Qu\",\"NodeButtonFalse\":\"Node_NodeButtonFalse__2WrOE\"};","import React from \"react\";\r\nimport OutputPin from \"../LogicGate/Pin/OutputPin\";\r\nimport InputPin from \"../LogicGate/Pin/InputPin\";\r\nimport styles from \"../LogicGate/LogicGate.module.scss\";\r\n\r\nclass DummyGate extends React.Component {\r\n    style = {backgroundColor: this.props.color}\r\n\r\n    handleMouseDown = (e) => {\r\n        if(e.button === 0) {\r\n            this.props.addGate(e, {\r\n                gateName: this.props.gateName,\r\n                function: this.props.function,\r\n                style: this.style,\r\n                inputCount: this.props.inputs,\r\n                outputCount: this.props.outputs,\r\n            })\r\n        }\r\n    }\r\n\r\n    render () {\r\n        let inputFields = [];\r\n        for (let i = 0; i < this.props.inputs; i++){\r\n            inputFields.push((\r\n                <InputPin />\r\n            ));\r\n        }\r\n        let outputFields = [];\r\n        for (let i = 0; i < this.props.outputs; i++){\r\n            outputFields.push((\r\n                <OutputPin />\r\n            ));\r\n        }\r\n        return (\r\n            <div className={`${styles.LogicGate} ${styles.LogicGateDummy}`}\r\n                style={this.style}\r\n                onMouseDown={(e) => this.props.addGate(e, {\r\n                gateName: this.props.gateName,\r\n                function: this.props.function,\r\n                style: this.style,\r\n                inputCount: this.props.inputs,\r\n                outputCount: this.props.outputs,\r\n            })}>\r\n                <div className={styles.LogicGateInputs}>\r\n                    { inputFields }\r\n                </div>\r\n                <h5 className={styles.LogicGateValue}> { this.props.gateName.replace('f_', '') } </h5>\r\n                <div className={styles.LogicGateOutputs}>\r\n                    { outputFields }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DummyGate;\r\n","import Node from './Node';\r\nimport signalChange from '../../Events/signalChange';\r\nclass StartNode extends Node {\r\n    state = {\r\n        ...this.state,\r\n        childPins: [],\r\n        value: false,\r\n    }\r\n\r\n    // przylaczanie innego pina jako dziecko\r\n    connect(target) {\r\n        let cps = this.state.childPins;\r\n        cps.push(target);\r\n        this.setState({'childPins': cps});\r\n    }\r\n\r\n    disconnect(target) {\r\n        const oldChildren = this.state.childPins;\r\n        const pinIndex = oldChildren.indexOf(target);\r\n\r\n        // tworzymy kopie tablicy dzieci (aby uniknac bezposredniej zmiany stanu)\r\n        let updatedChildren = [...oldChildren];\r\n        updatedChildren.splice (pinIndex, 1);\r\n\r\n        // ustawiamy nowa tablice dzieci jako stan\r\n        this.setState({\"childPins\": updatedChildren });\r\n    }\r\n\r\n    handleOnMouseDown = (e) => {\r\n        if(e.button === 0) // Lewy PM\r\n            this.props.setFocusedElement(this);\r\n        else if (e.button === 1) // Środkowy PM\r\n            this.toggleValue();\r\n    }\r\n\r\n    selfDestruct = () => {\r\n        this.fireRemoveEvent();\r\n\r\n        this.setState({render: false});\r\n        for(const child of this.state.childPins){\r\n            child.disconnect(this);\r\n        }\r\n    }\r\n\r\n    toggleValue() {\r\n        const val = !(this.state.value);\r\n        this.setState({value: val}, function() {\r\n            for (let i = 0; i < this.state.childPins.length; i++) {\r\n                this.state.childPins[i].receiveSignal(val);\r\n            }\r\n\r\n            this.state.ref.current.dispatchEvent(signalChange);\r\n        });\r\n    }\r\n}\r\n\r\nexport default StartNode;\r\n","import EndNode from \"./Components/Node/EndNode\";\nimport StartNode from \"./Components/Node/StartNode\";\n\n//zwraca gotową funkcję na podstawie tablicy stringów z funkcjami\nexport function retrieveFunction(functions){\n    let funcs = functions.map(f => eval(f));\n    return (inputs) => {\n        let output = [];\n        for(let i=0; i<funcs.length; i++){\n            output.push(funcs[i](inputs));\n        }\n        return output;\n    }\n}\nconst compareTop = (a, b) => parseInt(a.style.top.slice(0,-2)) - parseInt(b.style.top.slice(0,-2));\n\n// zapisuje customową funkcję w formie stringa dla nowej bramki na podstawie\n// podanych obiektów endNode\nexport function makeNewGate(canvas, name, color) {\n    const inputArea = canvas.childNodes[0];\n    const outputArea = canvas.childNodes[2];\n\n    // posortowane od najwyżej położonego do najniżej\n    const endNodes  = [...outputArea.childNodes].sort(compareTop).map(DOM => findReact(DOM));\n    const startNodes = [...inputArea.childNodes].sort(compareTop).map(DOM => findReact(DOM));\n\n    const solve = (input, alreadyVisited) => {\n        const output = input.state.parentPin;\n        if (!output || (alreadyVisited[output] && alreadyVisited[output].indexOf(input) !== -1)) // był już sprawdzany\n            // to jest do poprawy\n            return \"undefined\";\n        if(output instanceof StartNode){\n            for(let i=0; i<startNodes.length; i++){\n                if(output === startNodes[i])\n                    return \"i[\" + i + \"]\";\n            }\n        } else {\n            if(!alreadyVisited[output])\n                alreadyVisited[output] = [input];\n            else\n                alreadyVisited[output].push(input);\n\n            const gate = output.gate;\n            let args = [];\n            for(const input of gate.inputs){\n                const par = input.state.parentPin;\n                if(par){\n                    args.push(solve(input, alreadyVisited));\n                } else // input bramki nie jest do niczego podpięty\n                    args.push(\"undefined\")\n            }\n            return (\n                gate.name + \"([\" + args + \"])[\" + output.index + \"]\"\n            );\n        }\n    }\n\n    let output = [];\n    for(let endNode of endNodes) {\n        let func = \"(i) => \" + solve(endNode, []);\n        output.push(func);\n    }\n    return {\n        name: name,\n        inputs: startNodes.length,\n        outputs: endNodes.length,\n        functions: output,\n        color: color,\n    };\n}\n\n// https://stackoverflow.com/questions/29321742/react-getting-a-component-from-a-dom-element-for-debugging/39165137#39165137\n// znajdź komponent React na podstawie elementu DOM\nexport function findReact(dom, traverseUp=0) {\n    const key = Object.keys(dom).find(key => key.startsWith(\"__reactFiber$\"));\n    const domFiber = dom[key];\n    if (domFiber == null) return null;\n\n    const GetCompFiber = fiber=>{\n        //return fiber._debugOwner; // this also works, but is __DEV__ only\n        let parentFiber = fiber.return;\n        while (typeof parentFiber.type == \"string\") {\n            parentFiber = parentFiber.return;\n        }\n        return parentFiber;\n    };\n    let compFiber = GetCompFiber(domFiber);\n    for (let i = 0; i < traverseUp; i++) {\n        compFiber = GetCompFiber(compFiber);\n    }\n    return compFiber.stateNode;\n}\n\nexport function checkForCycle(gate) {\n    // algorytm DFS\n    // https://www.geeksforgeeks.org/depth-first-search-or-dfs-for-a-graph\n    const gates = collectGates(gate);\n    let visited  = new Array(gates.length);\n    let recStack = new Array(gates.length);\n    for(let i=0;i<gates.length;i++) {\n        visited[i]  = false;\n        recStack[i] = false;\n    }\n\n    for (let i = 0; i < gates.length; i++)\n        if (DFSutil(i, visited, recStack, getChildGates(gates[i]))){\n            return true;\n        }\n    return false;\n}\nfunction DFSutil(i, visited, recStack, children) {\n    if (recStack[i])\n        return true;\n\n    if (visited[i])\n        return false;\n\n    visited[i] = true;\n    recStack[i] = true;\n\n    for (let c=0;c< children.length;c++)\n        if (DFSutil(c, visited, recStack, children)){\n            return true;\n        }\n\n    recStack[i] = false;\n\n    return false;\n}\n// zbierz wszystkie bramki poniżej podanej\nfunction collectGates(gate) {\n    let gates = [gate];\n    const loop = (g) => {\n        getChildGates(g).forEach((child) => {\n            // bramki nie ma jeszcze na liście\n            if(!gates.includes(child)) {\n                gates.push(child);\n                loop(child);\n            }\n        });\n    }\n    loop(gate);\n\n    return gates;\n}\n// zbierz bramki bezpośrednio podłączone do podanej jako dzieci\nfunction getChildGates(gate) {\n    let childGates = [];\n    for (let i = 0; i < gate.outputs.length; i++) {\n        // dodaje wszystkie piny, ktore pobieraja sygnal z aktualnej bramki\n        const childPins = gate.outputs[i].state.childPins;\n        for (let j = 0; j < childPins.length; j++){\n            // pomijamy EndNody\n            if (childPins[j] instanceof EndNode) continue;\n            childGates.push( childPins[j].gate );\n        }\n    }\n    return childGates;\n}\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Application\":\"Application_Application__2wRsQ\",\"Canvas\":\"Application_Canvas__35aVF\",\"Board\":\"Application_Board__sFgm3\",\"InputArea\":\"Application_InputArea__3XmUM\",\"OutputArea\":\"Application_OutputArea__flxHC\"};","import React from \"react\";\nimport Pin from \"./Pin\";\n\nimport signalChange from \"../../../Events/signalChange\";\nclass OutputPin extends Pin {\n    constructor(props) {\n        super(props);\n        this.state = {\n            childPins: [],\n            value: undefined,\n            ref: React.createRef(),\n        };\n\n        this.setStateClass();\n    }\n\n    // przylaczanie innego pina jako dziecko\n    connect(target) {\n        let cps = this.state.childPins;\n        cps.push(target);\n        this.setState({ childPins: cps });\n\n        if (!this.state.stateClass) this.setStateClass();\n    }\n\n    disconnect(target) {\n        const oldChildren = this.state.childPins;\n        const pinIndex = oldChildren.indexOf(target);\n\n        // tworzymy kopie tablicy dzieci (aby uniknac bezposredniej zmiany stanu)\n        let updatedChildren = [...oldChildren];\n        updatedChildren.splice(pinIndex, 1);\n\n        // ustawiamy nowa tablice dzieci jako stan\n        this.setState({ childPins: updatedChildren });\n    }\n\n    receiveSignal(signal) {\n        this.setState({ value: signal }, function () {\n            this.state.ref.current.dispatchEvent(signalChange);\n            this.setStateClass();\n\n            for (let i = 0; i < this.state.childPins.length; i++) {\n                this.state.childPins[i].receiveSignal(signal);\n            }\n        });\n    }\n\n    render() {\n        return (\n            <button\n                ref={this.state.ref}\n                className={`\n        ${this.style.Pin}\n        ${this.state.stateClass}\n        `}\n                onClick={() => this.props.setFocusedElement(this)}\n            >\n                {\" \"}\n            </button>\n        );\n    }\n}\n\nexport default OutputPin;\n","import React from \"react\";\nimport parentChange from \"../../../Events/parentChange\";\nimport Pin from \"./Pin\";\n\nclass InputPin extends Pin {\n    constructor(props) {\n        super(props);\n        this.state = {\n            parentPin: undefined,\n            value: undefined,\n            ref: React.createRef(),\n        };\n\n        this.setStateClass();\n    }\n\n    handleOnClick = (e) => {\n        const newParent = this.props.getFocusedElement();\n        if (newParent) this.changeParentPin(newParent);\n    };\n\n    disconnect() {\n        if (!this.state.parentPin) return;\n        this.state.parentPin.disconnect(this);\n        this.setState({\n            parentPin: undefined,\n            stateClass: \"\",\n        });\n        this.receiveSignal(undefined);\n    }\n\n    // zmień do jakiego outputa podłączony jest ten input\n    changeParentPin(newParent) {\n        if (this.state.parentPin !== newParent) {\n            if (this.state.parentPin) this.state.parentPin.disconnect(this);\n            newParent.connect(this);\n            this.setState(\n                {\n                    parentPin: newParent,\n                },\n                () => this.state.ref.current.dispatchEvent(parentChange)\n            );\n\n            this.receiveSignal(newParent.state.value);\n            this.props.drawWire(newParent, this);\n        }\n    }\n\n    receiveSignal(signal) {\n        // zapobiega pętli przy okazji\n        if (signal === this.state.value)\n            return;\n\n        this.setState({value: signal}, function() {\n                this.setStateClass();\n                this.gate.processOutput();\n            }\n        );\n    }\n\n    render() {\n        return (\n            <button\n                ref={this.state.ref}\n                className={`\n        ${this.style.Pin}\n        ${this.state.stateClass}\n        `}\n                onClick={this.handleOnClick}\n            ></button>\n        );\n    }\n}\n\nexport default InputPin;\n","export function findParentGate(pin) {\n    let currentParent = pin.parentElement;\n    while (!currentParent.classList.contains(\"LogicGate\")) {\n        currentParent = currentParent.parentElement;\n    }\n\n    return currentParent;\n}\n\nexport function findParentNode(pin) {\n    if (!pin) return;\n\n    let currentParent = pin.parentElement;\n    while (!currentParent.className.includes(\"Node\")) {\n        currentParent = currentParent.parentElement;\n    }\n\n    return currentParent;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pin\":\"Pin_Pin__2O3LC\",\"PinUndefinedState\":\"Pin_PinUndefinedState__2WxX8\",\"PinHighState\":\"Pin_PinHighState__38LMy\",\"PinLowState\":\"Pin_PinLowState__2-FI9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wire\":\"Wire_Wire__14Zuc\",\"WireUndefinedState\":\"Wire_WireUndefinedState__WPt42\",\"WireHighState\":\"Wire_WireHighState__14PU4\",\"WireLowState\":\"Wire_WireLowState__1Ox6P\"};","import React from \"react\";\nimport styles from \"./Pin.module.scss\";\n\nconst stateClasses = {\n    true: styles.PinHighState,\n    false: styles.PinLowState,\n    undefined: styles.PinUndefinedState,\n};\nclass Pin extends React.Component {\n    constructor(props) {\n        super();\n        this.style = styles;\n        this.index = props.index;\n        this.gate = props.gate;\n    }\n\n    setStateClass = () => {\n        this.setState({\n            stateClass: stateClasses[this.state.value],\n        });\n    };\n\n    componentDidMount() {\n        if (this.props.mount) this.props.mount(this); // dodaj siebie do tablicy pinów swojej bramki\n    }\n}\n\nexport default Pin;\n","const signalChange = new Event(\"signalChange\");\n\nexport default signalChange;","const parentChange = new Event(\"parentChange\");\n\nexport default parentChange;","import React from 'react';\r\nimport styles from './Node.module.scss';\r\nimport remove from '../../Events/remove';\r\nimport StartNode from './StartNode';\r\nimport { findParentNode } from '../../findingFunctions';\r\nclass Node extends React.Component {\r\n    state = {\r\n        name: \"\",\r\n        render: true,\r\n        renderNameBox: false,\r\n        ref: React.createRef(),\r\n        value: undefined,\r\n    }\r\n\r\n    get value() { return this.state.value }\r\n    get name() { return this.state.name }\r\n\r\n    toggleNameBox = () => {\r\n        this.setState({renderNameBox: !this.state.renderNameBox})\r\n    }\r\n\r\n    handleHandleMouseUp = (e) => {\r\n        if(e.button === 2) { // tylko PPM\r\n            this.toggleNameBox();\r\n        }\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        this.setState({\r\n            name: e.target.value\r\n        });\r\n    }\r\n\r\n    fireRemoveEvent = () => {\r\n        // event sygnalizujacy usuniecie polaczenia dla Wire\r\n        findParentNode(this.state.ref.current).dispatchEvent(remove);\r\n    }\r\n\r\n    render() {\r\n        if(this.state.render === false) return null;\r\n        let style;\r\n        const value = this.state.value;\r\n\r\n        // zwróć styl na podstawie wartosci\r\n        if ( value === undefined )\r\n            style = styles.NodeButtonUndefined;\r\n        else if ( value )\r\n            style = styles.NodeButtonTrue;\r\n        else\r\n            style = styles.NodeButtonFalse;\r\n\r\n        const position = this.props.position + 'px';\r\n        if(this.state.renderNameBox)\r\n            var nameBox = (\r\n                <div\r\n                    className={styles.NodeNameBox}\r\n                >\r\n                    <input\r\n                        onChange={this.onInputChange}\r\n                        value={this.name}\r\n                        onKeyDown={\r\n                            (e) => {if(e.key === \"Enter\") this.toggleNameBox()}\r\n                        }\r\n                    />\r\n                    <div onClick={this.selfDestruct}>delete</div>\r\n                </div>\r\n            );\r\n\r\n        return (\r\n            <div\r\n                className={`${styles.Node} ${this instanceof StartNode ? styles.NodeStart:styles.NodeEnd }`}\r\n                style={{ top: position }}\r\n            >\r\n                <div\r\n                    className={`NodeHandle ${styles.NodeHandle}`}\r\n                    onMouseUp={this.handleHandleMouseUp}\r\n                ></div>\r\n\r\n                <div\r\n                    ref={this.state.ref}\r\n                    className={ `${styles.NodeButton} ${style}` }\r\n                    onMouseDown={ this.handleOnMouseDown }\r\n                ></div>\r\n\r\n                {nameBox}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Node;\r\n","const remove = new Event(\"remove\");\n\nexport default remove;","import parentChange from \"../../Events/parentChange\";\nimport Node from \"./Node\";\n\nclass EndNode extends Node {\n  state = {\n    ...this.state,\n    parentPin: undefined,\n    value: undefined,\n  };\n\n  handleOnMouseDown = (e) => {\n    if (e.button === 0) {\n      const newParent = this.props.getFocusedElement();\n      if (newParent) this.changeParentPin(newParent);\n    }\n  };\n\n  disconnect = () => this.changeParentPin(undefined);\n\n  changeParentPin = (newParent) => {\n    if (newParent !== this.state.parentPin) {\n      if (this.state.parentPin) this.state.parentPin.disconnect(this);\n\n      this.setState(\n        { parentPin: newParent },\n        // funkcja powiadamiajaca przewod o usunieciu polaczenia\n        () => {\n          if( this.state.ref.current )\n            this.state.ref.current.dispatchEvent(parentChange);\n        }\n      );\n\n      if (newParent) {\n        newParent.connect(this);\n        this.props.drawWire(newParent, this);\n        this.receiveSignal(newParent.state.value);\n      } else this.receiveSignal(undefined);\n    }\n  };\n\n  selfDestruct = () => {\n    this.fireRemoveEvent();\n\n    this.disconnect();\n    this.setState({render: false});\n  }\n\n  receiveSignal(signal) {\n    this.setState({ value: signal });\n  }\n}\n\nexport default EndNode;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Menu_Menu__2X7bN\",\"Button\":\"Menu_Button__8Dt-Z\"};","const move = new Event(\"move\");\n\nexport default move;","import React from \"react\";\r\nimport styles from './Application.module.scss';\r\nimport LogicGate from \"../LogicGate/LogicGate\";\r\nimport StartNode from \"../Node/StartNode\";\r\nimport EndNode from \"../Node/EndNode\";\r\nimport ControlPanel from \"../ControlPanel/ControlPanel\";\r\nimport Menu from \"../Menu/Menu\"\r\nimport {findReact, makeNewGate} from \"../../functions\";\r\nimport {AND, NOT, OR, FALSE, TRUE} from \"../../logicalFunctions\"\r\nimport Wire from '../WiresBoard/Wire/Wire.js';\r\nimport WiresBoard from \"../WiresBoard/WiresBoard\";\r\nimport remove from \"../../Events/remove\";\r\nimport move from \"../../Events/move\";\r\n\r\nfunction validateGateName(name) {\r\n    // nazwa może składać się wyłącznie z liter i cyfr\r\n    // oraz musi zaczynać się od litery\r\n    var regex = /^f_[A-Za-z0-9]*$/;\r\n    return regex.test(name);\r\n}\r\nclass Application extends React.Component {\r\n    state = {\r\n        focusedElement: undefined,    // aktualnie wybrane wyjście\r\n        heldElement: undefined,       // aktualnie trzymana bramka\r\n        heldElementOffset: [0, 0],    // różnica koordynatów x i y, między punktem chwytu a faktycznym położeniem bloku\r\n        elements: {\r\n            inputs: [],\r\n            board: [],\r\n            outputs: [],\r\n        },\r\n        wires: [],\r\n    }\r\n\r\n    boardRef = React.createRef()\r\n    canvasRef = React.createRef()\r\n    controlRef = React.createRef()\r\n    controlPanelObject\r\n\r\n    // funkcja zmieniajaca aktualnie wybrane wyjscie - pozwala na uzycie kliknietego wyjscia na wejscie bramki logicznej\r\n    setFocusedElement = ( element ) => {\r\n        this.setState ({'focusedElement': element});\r\n    }\r\n\r\n    // funkcja zwracajaca aktualnie wybrane wyjscie - umozliwia kliknietej bramce logicznej zmiane wejscia na wczesniej klikniete wyjscie\r\n    getFocusedElement = () => this.state.focusedElement;\r\n\r\n    // tylko raz po wyrenderowaniu tego komponentu\r\n    componentDidMount(){\r\n        global.NOT = NOT;\r\n        global.AND = AND;\r\n        global.OR = OR;\r\n        global.TRUE = TRUE;\r\n        global.FALSE = FALSE;\r\n\r\n        // bez contextmenu\r\n        window.addEventListener(\"contextmenu\", (e) => e.preventDefault());\r\n\r\n        this.controlPanelObject = findReact(this.controlRef.current);\r\n\r\n        // wczytaj zapisane bramki z localstorage\r\n        let saved;\r\n        if(localStorage.getItem(\"savedGates\") !== null)\r\n            saved = JSON.parse(localStorage.getItem(\"savedGates\"));\r\n        else\r\n            saved = [];\r\n\r\n        for(const savedGate of saved){\r\n            this.controlPanelObject.addDummy(savedGate);\r\n        }\r\n    }\r\n\r\n    addNode = (e, type) => {\r\n        // dodaj tylko jeżeli kliknięto na czysty obszar (nie np istniejący node)\r\n        if ( !e.target.classList.contains('Area') )\r\n            return;\r\n\r\n        const pos = e.clientY - e.target.offsetTop - 10; // 10 - połowa wysokości\r\n        let elements = this.state.elements;\r\n        if (type === \"startNode\")\r\n            elements.inputs.push(\r\n                <StartNode setFocusedElement={ this.setFocusedElement } position={ pos }/>\r\n            );\r\n        else // endNode\r\n            elements.outputs.push(\r\n                <EndNode drawWire={ this.drawWire } removeWire={ this.removeWire }\r\n                getFocusedElement={ this.getFocusedElement } position={ pos }/>\r\n            );\r\n        this.setState ({'elements': elements});\r\n    }\r\n\r\n    addGate = (e, args) => {\r\n        let elements = this.state.elements;\r\n        let newGate;\r\n        elements.board.push(\r\n            <LogicGate\r\n                gateName={ args.gateName }\r\n                inputs={ args.inputCount }\r\n                outputs={ args.outputCount }\r\n                function={ args.function }\r\n                style={ args.style }\r\n                drawWire = { this.drawWire }\r\n                getFocusedElement={ this.getFocusedElement }\r\n                setFocusedElement={ this.setFocusedElement }\r\n                reference={el => newGate = el}\r\n            />\r\n        );\r\n        this.setState ({'elements': elements}, function(){\r\n            // 'e.target' odnosi się teraz do komponentu DummyGate\r\n            const xo = e.clientX - e.target.offsetLeft + this.controlRef.current.scrollLeft;\r\n            const yo = e.clientY - e.target.offsetTop + (e.target.offsetHeight/2);\r\n\r\n            newGate.style.left = e.clientX - xo + 'px';\r\n            newGate.style.top  = e.clientY - yo + 'px';\r\n            newGate.style.zIndex = 2;\r\n\r\n            this.setState({\r\n                heldElement: newGate,\r\n                heldElementOffset: [xo, yo],\r\n            });\r\n        });\r\n    }\r\n\r\n    handleMouseDown = (e) => {\r\n        if(e.button === 0)\r\n            this.grab(e);\r\n    }\r\n    // funkcja podnosząca element\r\n    grab(e) {\r\n        const element = e.target;\r\n        if (element.classList.contains(\"LogicGate\") ||\r\n            element.classList.contains(\"NodeHandle\")) {\r\n            element.style.zIndex = 2;\r\n            this.setState({heldElement: element});\r\n            // obliczenie różnicy koordynatów x i y, między punktem chwytu a faktycznym położeniem bloku\r\n            const xo = e.clientX - element.offsetLeft;\r\n            const yo = e.clientY - element.offsetTop;\r\n            this.setState({heldElementOffset: [xo, yo]});\r\n        }\r\n    }\r\n\r\n    // przenieś trzymany element\r\n    move(e) {\r\n        const element = this.state.heldElement;\r\n        if(!element) return;\r\n\r\n        const canvas  = e.currentTarget;\r\n        const board   = this.boardRef.current;\r\n\r\n        if(element.classList.contains(\"LogicGate\")){\r\n            let x = e.clientX - this.state.heldElementOffset[0]; // różnica x\r\n            let y = e.clientY - this.state.heldElementOffset[1]; // różnica y\r\n\r\n            if (x < board.offsetLeft)\r\n                // za daleko w lewo\r\n                x = board.offsetLeft;\r\n            else if (x + element.offsetWidth > board.offsetWidth + board.offsetLeft)\r\n                // za daleko w prawo\r\n                x = board.offsetWidth + board.offsetLeft - element.offsetWidth;\r\n            if (y < canvas.offsetTop)\r\n                // za daleko w górę\r\n                y = canvas.offsetTop;\r\n            else if (y + element.offsetHeight > canvas.offsetHeight + canvas.offsetTop)\r\n                // za daleko w dół\r\n                y = canvas.offsetHeight + canvas.offsetTop - element.offsetHeight;\r\n\r\n            element.style.left = x + 'px';\r\n            element.style.top = y + 'px';\r\n            element.dispatchEvent(move);\r\n        } else if(element.classList.contains(\"NodeHandle\")){\r\n            const node = element.parentElement;\r\n            let y = e.clientY;\r\n\r\n            if (y > node.parentElement.offsetHeight - 20)\r\n                y = node.parentElement.offsetHeight - 20;\r\n\r\n            if (y < node.parentElement.offsetTop + 40)\r\n                y = node.parentElement.offsetTop + 40;\r\n\r\n            node.style.top = y - 10 + 'px';\r\n            node.dispatchEvent(move);\r\n        }\r\n    }\r\n\r\n    drop() {\r\n        // upuść trzymany element\r\n        const element = this.state.heldElement;\r\n        if(element){\r\n            this.setState({heldElement: undefined});\r\n            const board = this.boardRef.current;\r\n            const y = parseInt(element.style.top.split('px')[0])\r\n\r\n            // jeżeli przeniesiony poniżej poziomu 'board', usuń\r\n            if (y + (element.offsetHeight) > board.offsetHeight + board.offsetTop){\r\n                const comp = findReact(element);\r\n                comp.selfDestruct();\r\n                element.dispatchEvent(remove);\r\n\r\n                const focused = this.getFocusedElement();\r\n                if(focused && focused.gate === comp)\r\n                    this.setFocusedElement(undefined);\r\n            } else {\r\n                element.style.zIndex = 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    drawWire = (firstPin, secondPin) => {\r\n        const newWiresList = this.state.wires.concat([ <Wire firstPin={firstPin} secondPin={secondPin} /> ]);\r\n        this.setState({\"wires\": newWiresList});\r\n    }\r\n\r\n    // zapisuje obszar roboczy jako nową bramkę do projektu\r\n    saveGate = () => {\r\n        do {\r\n            // tutaj będzie wywoływane okno zapisu bramki\r\n            // z wyborem koloru itd. na razie tylko prompt o nazwe\r\n            var name = 'f_' + prompt('podaj nazwę dla tej bramki');\r\n            // sprawdza poprawność nazwy i czy nie jest już taka zdefiniowana\r\n        } while(!validateGateName(name) || global[name] !== undefined);\r\n        do {\r\n            var color = prompt('podaj kolor');\r\n        } while(color === \"\");\r\n\r\n        const newGateObject = makeNewGate(this.canvasRef, name, color);\r\n\r\n        // zapisywanie w localStorage\r\n        let saved;\r\n        if(localStorage.getItem(\"savedGates\") !== null)\r\n            saved = JSON.parse(localStorage.getItem(\"savedGates\"));\r\n        else\r\n            saved = [];\r\n        saved.push(newGateObject);\r\n        localStorage.setItem(\"savedGates\", JSON.stringify(saved));\r\n\r\n        // dodaj nową bramkę do zasobnika\r\n        this.controlPanelObject.addDummy(newGateObject);\r\n    }\r\n\r\n    // wyczyść obszar roboczy\r\n    clearCanvas = () => {\r\n        this.setState({focusedElement: undefined, elements: {inputs: [], board: [], outputs: []}, wires: []})\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={ styles.Application }\r\n                onMouseDown={ this.handleMouseDown }\r\n                onMouseMove={ (e) => this.move(e) }\r\n                onMouseUp={ () => this.drop() }\r\n            >\r\n                <Menu functions={[\r\n                    {\r\n                        name: \"zapisz bramkę\",\r\n                        function: this.saveGate,\r\n                    },\r\n                    {\r\n                        name: \"wyczyść\",\r\n                        function: this.clearCanvas,\r\n                    },\r\n                ]}/>\r\n                <WiresBoard wires={this.state.wires} />\r\n                <div className={ styles.Canvas }\r\n                    ref={el => this.canvasRef = el}\r\n                >\r\n                    <div className={ `Area ${styles.InputArea}` }\r\n                        onClick={ (e) => this.addNode(e, 'startNode')}\r\n                    >\r\n                        { this.state.elements.inputs }\r\n                    </div>\r\n                    <div className={ styles.Board }\r\n                        ref={this.boardRef}\r\n                    >\r\n\r\n                        { this.state.elements.board }\r\n\r\n                    </div>\r\n                    <div className={ `Area ${styles.OutputArea}` }\r\n                        onClick={ (e) => this.addNode(e, 'endNode')}\r\n                    >\r\n                        { this.state.elements.outputs }\r\n                    </div>\r\n                </div>\r\n                <ControlPanel addGate={this.addGate} reference={this.controlRef}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Application;\r\n","import React from \"react\";\r\nimport OutputPin from \"./Pin/OutputPin\";\r\nimport InputPin from \"./Pin/InputPin\";\r\nimport styles from \"./LogicGate.module.scss\";\r\n\r\nclass LogicGate extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.name = props.gateName;\r\n        this.func = props.function;\r\n        this.state = {\r\n            value: undefined, // tymczasowo\r\n            render: true,\r\n        };\r\n        this.inputs = [];\r\n        this.outputs = [];\r\n    }\r\n\r\n    // dzięki tej funkcji piny dodają się do tablicy pinów output lub input\r\n    mountPin = (pin) => {\r\n        if (pin instanceof InputPin) {\r\n            this.inputs[pin.index] = pin;\r\n        } else if (pin instanceof OutputPin) {\r\n            this.outputs[pin.index] = pin;\r\n        }\r\n    };\r\n\r\n    componentDidMount(){\r\n        // bramki constant nigdy nie przetwarzałyby swoich wartości\r\n        this.processOutput();\r\n    }\r\n\r\n    selfDestruct() {\r\n        // usuń wszystkie połączenia\r\n        this.inputs.forEach((i) => i.disconnect());\r\n        this.outputs.forEach((o) => {\r\n            o.state.childPins.forEach((i) => i.disconnect());\r\n        });\r\n        this.setState({ render: false });\r\n    }\r\n\r\n    processOutput() {\r\n        let inputs = Array.from(this.inputs.map((input) => input.state.value));\r\n\r\n        let output = this.func(inputs);\r\n        for (let i = 0; i < output.length; i++)\r\n            this.outputs[i].receiveSignal(output[i]);\r\n        this.setState({ value: output[0] });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.render === false) return null;\r\n\r\n        let inputFields = [];\r\n        for (let i = 0; i < this.props.inputs; i++) {\r\n            inputFields.push(\r\n                <InputPin\r\n                    drawWire={this.props.drawWire}\r\n                    index={i}\r\n                    gate={this}\r\n                    getFocusedElement={this.props.getFocusedElement}\r\n                    mount={this.mountPin}\r\n                />\r\n            );\r\n        }\r\n\r\n        let outputFields = [];\r\n        for (let i = 0; i < this.props.outputs; i++) {\r\n            outputFields.push(\r\n                <OutputPin\r\n                    index={i}\r\n                    gate={this}\r\n                    getFocusedElement={this.props.getFocusedElement}\r\n                    setFocusedElement={this.props.setFocusedElement}\r\n                    mount={this.mountPin}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div\r\n                className={`LogicGate ${styles.LogicGate}`}\r\n                style={this.props.style}\r\n                ref={this.props.reference}\r\n            >\r\n                <div className={styles.LogicGateInputs}>{inputFields}</div>\r\n                <h5 className={styles.LogicGateValue}> {this.name.replace('f_', '')} </h5>\r\n                <div className={styles.LogicGateOutputs}>{outputFields}</div>\r\n            </div>\r\n        ); // styl LogicGateOutputs jeszcze nie istnieje\r\n    }\r\n}\r\n\r\nexport default LogicGate;\r\n","import styles from './ControlPanel.module.scss';\nimport DummyGate from '../DummyGate/DummyGate';\nimport {retrieveFunction} from '../../functions';\nimport {AND, NOT, OR, FALSE, TRUE} from \"../../logicalFunctions\"\nimport React from \"react\";\n\nclass ControlPanel extends React.Component {\n\n    constructor(props){\n        super();\n        this.state = {\n            // NAZWA BRAMKI MUSI BYĆ TAKA SAMA JAK NAZWA JEJ FUNKCJI\n            dummies: [\n                <DummyGate\n                    gateName={ \"AND\" }\n                    function={AND}\n                    color={\"cornflowerblue\"}\n                    inputs={ 2 }\n                    outputs={ 1 }\n                    addGate={props.addGate}\n                />,\n                <DummyGate\n                    gateName={ \"NOT\" }\n                    function={NOT}\n                    color={\"purple\"}\n                    inputs={ 1 }\n                    outputs={ 1 }\n                    addGate={props.addGate}\n                />,\n                <DummyGate\n                    gateName={ \"OR\" }\n                    function={OR}\n                    color={\"chocolate\"}\n                    inputs={ 2 }\n                    outputs={ 1 }\n                    addGate={props.addGate}\n                />,\n                <DummyGate\n                    gateName={ \"FALSE\" }\n                    function={FALSE}\n                    color={\"red\"}\n                    inputs={ 0 }\n                    outputs={ 1 }\n                    addGate={props.addGate}\n                />,\n                <DummyGate\n                    gateName={ \"TRUE\" }\n                    function={TRUE}\n                    color={\"lime\"}\n                    inputs={ 0 }\n                    outputs={ 1 }\n                    addGate={props.addGate}\n                />,\n            ],\n        }\n    }\n\n    addDummy = (newGate) => {\n        let dummies = this.state.dummies;\n        const func = retrieveFunction(newGate.functions);\n\n        // zrób tą funkcję dostępną globalnie\n        global[newGate.name] = func;\n\n        const newDummy = (\n            <DummyGate\n                gateName={ newGate.name }\n                function={ func }\n                color={ newGate.color }\n                inputs={ newGate.inputs }\n                outputs={ newGate.outputs }\n                addGate={ this.props.addGate }\n            />\n        )\n        dummies.push(newDummy);\n        this.setState({dummies: dummies});\n    }\n\n    handleOnWheel = (e) => {\n        const el = e.currentTarget;\n        el.scrollLeft += e.deltaY;\n    }\n\n    render(){\n        return (\n        <div\n            className={ styles.ControlPanel }\n            ref={this.props.reference}\n            onWheel={this.handleOnWheel}\n        >\n            {this.state.dummies}\n        </div>\n        );\n    }\n}\n\nexport default ControlPanel;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ControlPanel\":\"ControlPanel_ControlPanel__1H8pU\"};","import styles from './WiresBoard.module.scss';\n\nconst WiresBoard = (props) => {\n    return (\n        <svg className={ styles.WiresBoard }>\n                { props.wires }\n        </svg>\n    )\n}\n\nexport default WiresBoard;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WiresBoard\":\"WiresBoard_WiresBoard__1awF0\"};","import styles from './Menu.module.scss'\n\nconst Button = (props) => {\n    return (\n        <button onClick={props.action} className={styles.Button}>{props.text}</button>\n    )\n}\n\nexport default Button;\n","import styles from './Menu.module.scss'\nimport Button from './Button'\n\nconst Menu = (props) => {\n    let buttons = [];\n    for (const f of props.functions){\n        buttons.push(\n            <li><Button text={f.name} action={f.function}/></li>\n        );\n    }\n    return (\n        <div className={styles.Menu}>\n            <ul>\n                {buttons}\n            </ul>\n        </div>\n    )\n}\n\nexport default Menu;\n","function calculatePathRight(firstPinCoordinates, secondPinCoordinates) {\n    const verticalDistance = secondPinCoordinates[1] - firstPinCoordinates[1];\n    const horizontalDistance = secondPinCoordinates[0] - firstPinCoordinates[0];\n\n    // jezeli docelowy punkt jest nizej:\n    // ostatnie 3 wartosci a1: 1 12,12\n    // jezeli jest wyzej:\n    // ostatnie 3 wartosci a1: 0 12,-12\n    let a1, a2, roundings;\n    if (verticalDistance < -25) {\n        a1 = \"a20,20 0 0 0 12,-12\"\n        a2 = \"a20,20 0 0 1 12 -12\"\n    } else if (verticalDistance > 25) {\n        a1 = \"a20,20 0 0 1 12 12\";\n        a2 = \"a20,20 0 0 0 12 12\"\n    }\n\n    if (a1) {\n        roundings =\n            `\n                l ${[horizontalDistance / 2, 0]}\n                ${a1} \n                l ${[ 0, verticalDistance < 0 ? verticalDistance + 25 : verticalDistance - 25 ]} \n                ${a2}\n                `\n    } else {\n        roundings = \"\";\n    }\n\n    return `M ${firstPinCoordinates} \n            ${roundings}\n        L ${secondPinCoordinates}\n        `\n}\n\nfunction calculatePathLeft(firstPinCoordinates, secondPinCoordinates, paddings) {\n    const verticalDistance = secondPinCoordinates[1] - firstPinCoordinates[1];\n    const horizontalDistance = secondPinCoordinates[0] - firstPinCoordinates[0];\n\n    const isAbove = verticalDistance > 0;\n\n    let middleRoute = \"\";\n    const spaceSize = 75;\n    let minVerticalDistance;\n\n    if (isAbove) minVerticalDistance = paddings[0][1] + paddings[1][0] + spaceSize;\n    else minVerticalDistance = paddings[0][0] + paddings[1][1] + spaceSize;\n\n    // zmiesci sie pomiedzy\n    if (Math.abs(verticalDistance) > minVerticalDistance) {\n\n        // pierwszy jest na gorze\n        if (isAbove) {\n            middleRoute =\n                `\n                a20,20 0 0 1 12,12\n                l 0,${ (verticalDistance / 2) - 25 }\n\n                a20,20 0 0 1 -12,12\n\n                l ${horizontalDistance - 50}, 0\n\n                a20,20 0 0 0 -12,12\n\n                L ${ secondPinCoordinates[0] - 35}, ${secondPinCoordinates[1] - 15}\n\n                a20,20 0 0 0 12,12\n\n                `\n\n        } else {\n            middleRoute =\n                `   \n                    a20,20 0 0 0 12,-12\n                    l 0,${ (verticalDistance / 2) + 25 }\n\n                    a20,20 0 0 0 -12,-12\n\n                    l ${horizontalDistance - 50}, 0\n\n                    a20,20 0 0 1 -12,-12\n\n                    L ${ secondPinCoordinates[0] - 35}, ${secondPinCoordinates[1] + 15}\n\n                    a20,20 0 0 1 12,-12\n\n                `\n        }\n\n        // nie zmiesci sie pomiedzy\n    } else {\n\n        if (isAbove) {\n            middleRoute =\n                `\n                    a20,20 0 0 0 12,-12\n\n                    l 0, ${ 2 * paddings[0][0] }\n\n                    a20,20 0 0 0 -12,-12\n\n                    l ${horizontalDistance - 35}, 0\n\n                    a20,20 0 0 0 -12,12\n\n                    L ${ secondPinCoordinates[0] - 25}, ${secondPinCoordinates[1] - 10}\n\n                    a20,20 0 0 0 12, 12\n                `\n        } else {\n\n            middleRoute =\n                `\n                    a20,20 0 0 1 12,12\n\n                    l 0, ${ -2 * paddings[0][0] }\n\n                    a20,20 0 0 1 -12,12\n\n                    l ${horizontalDistance - 35}, 0\n\n                    a20,20 0 0 1 -12,-12\n\n                    L ${ secondPinCoordinates[0] - 25}, ${secondPinCoordinates[1] + 15}\n\n                    a20,20 0 0 1 12, -12\n                `\n        }\n    }\n\n    // zawsze wychodzi 25 w prawo i o \n    // jezeli sie zmiesci\n    return `\n        M ${firstPinCoordinates}\n        l 25, 0\n        ${middleRoute}\n        \n        L ${secondPinCoordinates}\n    `\n}\n\nfunction calculatePath(firstPinBoundingClient, secondPinBoundingClient, paddings) {\n\n    //const firstPinBoundingClient = firstPin.getBoundingClientRect();\n    const firstPinCoordinates = [firstPinBoundingClient.left, firstPinBoundingClient.top];\n\n    //const secondPinBoundingClient = secondPin.getBoundingClientRect();\n    const secondPinCoordinates = [secondPinBoundingClient.left, secondPinBoundingClient.top];\n\n    // pozycje rowno w srodku pinu\n    firstPinCoordinates[1] += firstPinBoundingClient.height / 2;\n    firstPinCoordinates[0] += firstPinBoundingClient.width / 2;\n    secondPinCoordinates[1] += secondPinBoundingClient.height / 2;\n    secondPinCoordinates[0] += secondPinBoundingClient.width / 2;\n\n    // M - MOVE TO (WEDLUG POZYCJI BEWZGLEDNEJ)\n    // L - LINE TO (WEDLUG POZYCJI BEZWZGLEDNEJ)\n    // https://developer.mozilla.org/en-US/docs/Web/SVG/Element/path\n    // przewod idzie od wyjscia do wejscia\n\n    // jezeli docelowy punkt jest prawo\n    if (secondPinCoordinates[0] > firstPinCoordinates[0] + 30)\n        return calculatePathRight(firstPinCoordinates, secondPinCoordinates, paddings)\n    else\n        // punkt docelowy jest na lewo / mniej niz 30px na prawo\n        return calculatePathLeft(firstPinCoordinates, secondPinCoordinates, paddings)\n\n\n}\n\nexport default calculatePath;","import React from \"react\";\nimport styles from \"./Wire.module.scss\";\nimport calculatePath from \"./pathFunctions\";\nimport { findParentGate, findParentNode } from \"../../../findingFunctions\";\n\nconst stateClasses = {\n    true: styles.WireHighState,\n    false: styles.WireLowState,\n    undefined: styles.WireUndefinedState,\n};\n\nclass Wire extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstPin = props.firstPin;\n        this.secondPin = props.secondPin;\n\n        // jezeli pin jest wezlem startowym, to on jest uznawany za bramke\n        this.gates = [this.firstPin, this.secondPin].map((pin) => {\n          return pin.gate\n            ? findParentGate(pin.state.ref.current) // bramka\n            : findParentNode(pin.state.ref.current); // node\n        });\n\n        this.attachEventListeners();\n\n        this.state = {\n            // pozycje pinow w momencie tworzenia polaczenia\n            firstPinPosition:\n                props.firstPin.state.ref.current.getBoundingClientRect(),\n            secondPinPosition:\n                props.secondPin.state.ref.current.getBoundingClientRect(),\n\n            stateClass: this.getStateClass(),\n            render: true,\n        };\n\n        // przyda sie do lepszego zaginania polaczen -\n        // [ odleglosc od gornej granicy bramki, odleglosc od dolnej granicy bramki ]\n        {\n            const gateBoundingClientRect =\n                this.gates[0].getBoundingClientRect();\n\n            this.firstPinPaddings = [\n                gateBoundingClientRect.top - this.state.firstPinPosition.top,\n                gateBoundingClientRect.bottom - this.state.firstPinPosition.bottom,\n            ];\n        }\n\n        {\n            const gateBoundingClientRect =\n                this.gates[1].getBoundingClientRect();\n\n            this.secondPinPaddings = [\n                gateBoundingClientRect.top - this.state.secondPinPosition.top,\n                gateBoundingClientRect.bottom - this.state.secondPinPosition.bottom,\n            ];\n        }\n    }\n\n    attachEventListeners = () => {\n        window.addEventListener(\n            \"resize\",\n            this.updatePosition\n        );\n\n        for (let gate of this.gates) {\n            gate.addEventListener(\n                \"move\",    // zmiana na move\n                this.updatePosition\n            );\n\n            gate.addEventListener(\n                \"remove\",\n                this.removeConnection\n            );\n        }\n\n        this.firstPin.state.ref.current.addEventListener(\n            \"signalChange\",\n            this.updateStateClass\n        );\n\n        this.secondPin.state.ref.current.addEventListener(\n            \"parentChange\",\n            this.examineWireVisibility\n        );\n    }\n\n    detachEventListeners = () => {\n        window.removeEventListener(\n            \"resize\",\n            this.updatePosition\n        );\n\n        // usuwam event listenery z obu pinow\n        for (let gate of this.gates) {\n            gate.removeEventListener(\n                \"move\",\n                this.updatePosition\n            );\n\n            gate.removeEventListener(\n                \"remove\",\n                this.removeConnection\n            );\n        }\n\n        this.firstPin.state.ref.current.removeEventListener(\n            \"signalChange\",\n            this.updateStateClass\n        );\n\n        // zapobieganie \"powracaniu\" dawnych przewodow podczas przywracania dawnego polaczenia\n        this.secondPin.state.ref.current.removeEventListener(\n            \"parentChange\",\n            this.examineWireVisibility\n        );\n    }\n\n    handleOnClick = () => this.removeConnection();\n\n    removeConnection = () => {\n        this.detachEventListeners();\n\n        // usuwam polaczenie z perspektywy dziecka i rodzica\n        this.secondPin.disconnect();\n\n        // usuwam graficzny przewod\n        this.setState({\n            render: false,\n        });\n    };\n\n    examineWireVisibility = () => {\n        this.setState({\n            // render tylko, gdy oba piny sa polaczone\n            render: this.firstPin === this.secondPin.state.parentPin,\n        });\n    };\n\n    getStateClass = () => stateClasses[this.firstPin.state.value];\n\n    updateStateClass = () => {\n        this.setState({\n            stateClass: this.getStateClass(),\n        })\n    };\n\n    // funkcja powodujaca aktualizacje pozycji pinow w stanie\n    updatePosition = () => {\n        this.setState({\n            firstPinPosition:\n                this.firstPin.state.ref.current.getBoundingClientRect(),\n            secondPinPosition:\n                this.secondPin.state.ref.current.getBoundingClientRect(),\n        });\n    };\n\n    render() {\n        if (!this.state.render) return null;\n        return (\n            <path\n                d={calculatePath(\n                    this.state.firstPinPosition,\n                    this.state.secondPinPosition,\n                    [this.firstPinPaddings, this.secondPinPaddings]\n                ).replace(/(\\r\\n|\\n|\\r| {2})/gm, \"\")}\n\t\tclassName={`${styles.Wire} ${this.state.stateClass}`}\n\t\tonClick={this.handleOnClick}\n            />\n        );\n    }\n}\n\nexport default Wire;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Application from './Components/Application/Application';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Application />\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}