{"version":3,"sources":["Components/LogicGate/LogicGate.module.scss","Components/Menu/Menu.module.scss","Components/ControlPanel/ControlPanel.module.scss","Components/LogicGate/Pin.js","Components/LogicGate/OutputPin.js","Components/LogicGate/InputPin.js","Components/LogicGate/LogicGate.js","Components/LogicGate/LogicalFunctions.js","Components/Node/Node.js","Components/Node/StartNode.js","Components/Node/EndNode.js","Components/DummyGate/DummyGate.js","Components/ControlPanel/ControlPanel.js","Components/Menu/Button.js","Components/Menu/Menu.js","Components/Application/Application.js","functions.js","index.js","Components/Application/Application.module.scss","Components/Node/Node.module.scss"],"names":["module","exports","Pin","props","style","styles","index","gate","mount","React","Component","OutputPin","state","childPins","value","undefined","target","cps","this","push","setState","oldChildren","pinIndex","indexOf","updatedChildren","splice","signal","i","length","receiveSignal","className","LogicGateOutput","onClick","setFocusedElement","InputPin","handleOnClick","e","button","newParent","getFocusedElement","changeParentPin","disconnect","parentPin","recursion","connect","processOutput","LogicGateInput","onMouseDown","gateClass","LogicGateAND","LogicGateOR","LogicGateNOT","basicFunctions","inputs","isUndefined","AND","OR","LogicGate","mountPin","pin","outputs","func","gateType","render","forEach","o","Array","from","map","input","output","inputFields","outputFields","ref","reference","LogicGateInputs","LogicGateValue","toString","LogicGateOutputs","Node","NodeUndefined","NodeTrue","NodeFalse","position","top","StartNode","toggleValue","val","EndNode","DummyGate","LogicGateDummy","addGate","gateLogic","inputCount","outputCount","pointerEvents","ControlPanel","Button","action","text","Menu","console","log","Application","focusedElement","heldElement","heldElementOffset","elements","board","boardRef","createRef","element","addNode","type","classList","contains","pos","clientY","offsetTop","args","newGate","el","xo","clientX","offsetLeft","yo","left","canvas","currentTarget","current","x","y","offsetWidth","offsetHeight","parseInt","split","comp","dom","traverseUp","key","Object","keys","find","startsWith","domFiber","GetCompFiber","fiber","parentFiber","return","compFiber","stateNode","findReact","selfDestruct","grab","onMouseMove","move","onMouseUp","drop","Canvas","InputArea","Board","OutputArea","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75ee075e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"LogicGate\":\"LogicGate_LogicGate__1Cc_p\",\"LogicGateDummy\":\"LogicGate_LogicGateDummy__19ubT\",\"LogicGateAND\":\"LogicGate_LogicGateAND__77ers\",\"LogicGateOR\":\"LogicGate_LogicGateOR__58ZlK\",\"LogicGateNOT\":\"LogicGate_LogicGateNOT__1LoDZ\",\"LogicGateInputs\":\"LogicGate_LogicGateInputs__oV9js\",\"LogicGateOutputs\":\"LogicGate_LogicGateOutputs__3uRMQ\",\"LogicGateValue\":\"LogicGate_LogicGateValue__3jkbZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Menu_Menu__2X7bN\",\"Button\":\"Menu_Button__8Dt-Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ControlPanel\":\"ControlPanel_ControlPanel__1H8pU\"};","import React from \"react\";\nimport styles from \"./LogicGate.module.scss\";\n\nclass Pin extends React.Component {\n    style = styles;\n\n    constructor(props) {\n        super();\n        this.index = props.index;\n        this.gate = props.gate;\n        if(props.mount)\n            props.mount(this); // dodaj siebie do tablicy pinów swojej bramki\n    }\n}\n\nexport default Pin;\n","import Pin from \"./Pin\";\n\nclass OutputPin extends Pin {\n    constructor(props) {\n        super(props);\n        this.state = {\n            childPins: [],\n            value: undefined,\n        }\n    }\n\n    // przylaczanie innego pina jako dziecko\n    connect(target) {\n        let cps = this.state.childPins;\n        cps.push(target);\n        this.setState({'childPins': cps});\n    }\n\n    disconnect(target) {\n        const oldChildren = this.state.childPins;\n        const pinIndex = oldChildren.indexOf(target);\n\n        // tworzymy kopie tablicy dzieci (aby uniknac bezposredniej zmiany stanu)\n        let updatedChildren = [...oldChildren];\n        updatedChildren.splice (pinIndex, 1);\n\n        // ustawiamy nowa tablice dzieci jako stan\n        this.setState({\"childPins\": updatedChildren });\n    }\n\n    receiveSignal(signal) {\n        this.setState({'value': signal}, function() {\n            for (let i = 0; i < this.state.childPins.length; i++) {\n                this.state.childPins[i].receiveSignal(signal);\n            }\n        });\n\t}\n\n    render(){\n        return <button className={ this.style.LogicGateOutput } onClick={ () => this.props.setFocusedElement(this) }> </button>;\n    }\n}\n\nexport default OutputPin;\n","import Pin from \"./Pin\";\n\nclass InputPin extends Pin {\n    constructor(props) {\n        super(props);\n        this.state = {\n            parentPin: undefined,\n            value: undefined,\n            recursion: false,\n        }\n    }\n\n    handleOnClick = (e) => {\n        if(e.button === 0) { // lewy\n            const newParent = this.props.getFocusedElement();\n            if(newParent)\n                this.changeParentPin(newParent);\n        } else if(e.button === 1) { // srodkowy\n            this.disconnect();\n        }\n    }\n\n    disconnect() {\n        if(!this.state.parentPin) return;\n        this.state.parentPin.disconnect(this);\n        this.setState({'parentPin': undefined});\n        this.receiveSignal(undefined);\n    }\n\n    // zmień do jakiego outputa podłączony jest ten input\n    changeParentPin(newParent) {\n        if (this.state.parentPin)\n            this.state.parentPin.disconnect(this);\n        newParent.connect(this);\n        this.setState({'parentPin': newParent});\n        this.receiveSignal(newParent.state.value);\n    }\n\n    receiveSignal(signal) {\n        // najwyraźniej najlepszy sposób na zapobiegniecie zapętlania\n        // omg\n        if (signal === this.state.value) return;\n\n        this.setState({'value': signal}, function() {\n            this.gate.processOutput();\n        });\n\t}\n\n    render(){\n        return <button className={ this.style.LogicGateInput } onMouseDown={ this.handleOnClick } ></button>;\n    }\n}\n\nexport default InputPin;\n","import React from \"react\";\r\nimport OutputPin from \"./OutputPin\";\r\nimport InputPin from \"./InputPin\";\r\nimport styles from \"./LogicGate.module.scss\";\r\n\r\nimport {AND, OR, NOT} from './LogicalFunctions.js';\r\n\r\nconst gateClass = {\r\n    'AND': styles.LogicGateAND,\r\n    'OR': styles.LogicGateOR,\r\n    'NOT': styles.LogicGateNOT,\r\n}\r\nconst basicFunctions = {\r\n    'AND': (i) => AND(i),\r\n    'OR':  (i) => OR(i),\r\n    'NOT': (i) => NOT(i),\r\n    'TEST': (i) => [i[1], i[0]],\r\n}\r\n\r\nclass LogicGate extends React.Component {\r\n    constructor( {...props} ) {\r\n        super();\r\n        this.func = basicFunctions[props.gateType];\r\n        this.state = {\r\n            value: undefined, // tymczasowo\r\n            render: true,\r\n        }\r\n        this.inputs = [];\r\n        this.outputs = [];\r\n    }\r\n\r\n    // dzięki tej funkcji piny dodają się do tablicy pinów output lub input\r\n    mountPin = (pin) => {\r\n        if(pin instanceof InputPin){\r\n            this.inputs[pin.index] = pin;\r\n        } else if(pin instanceof OutputPin){\r\n            this.outputs[pin.index] = pin;\r\n        }\r\n    }\r\n\r\n    selfDestruct() {\r\n        // usuń wszystkie połączenia\r\n        this.inputs.forEach((i) => i.disconnect());\r\n        this.outputs.forEach((o) => {\r\n            o.state.childPins.forEach((i) => i.disconnect());\r\n        });\r\n        this.setState({render: false});\r\n    }\r\n\r\n    processOutput() {\r\n        let inputs = Array.from(\r\n            this.inputs.map ( (input) => input.state.value )\r\n        );\r\n\r\n        let output = this.func(inputs);\r\n        for(let i=0; i<output.length; i++)\r\n            this.outputs[i].receiveSignal(output[i]);\r\n        this.setState({value: output[0]});\r\n    }\r\n\r\n    render () {\r\n        if(this.state.render === false) return null;\r\n        // na razie używamy wartości logicznej bramki, żeby ułatwić sprawdzanie czy działają ( i tak korzystamy tylko z bramek 1-outputowych ), później powinny mieć po prostu nazwy danej bramki\r\n        let value = this.state.value;\r\n        if(value === undefined) value = \"undefined\"\r\n        const style = gateClass[ this.props.gateType ];\r\n\r\n        let inputFields = [];\r\n        for (let i = 0; i < this.props.inputs; i++){\r\n            inputFields.push((\r\n                <InputPin\r\n                    index={ i }\r\n                    gate={ this }\r\n                    getFocusedElement={ this.props.getFocusedElement }\r\n                    mount={ this.mountPin } />\r\n            ));\r\n        }\r\n        let outputFields = [];\r\n        for (let i = 0; i < this.props.outputs; i++){\r\n            outputFields.push((\r\n                <OutputPin\r\n                    index={ i }\r\n                    gate={ this }\r\n                    getFocusedElement={ this.props.getFocusedElement }\r\n                    setFocusedElement={ this.props.setFocusedElement }\r\n                    mount={ this.mountPin } />\r\n            ));\r\n        }\r\n        return (\r\n            <div className={`LogicGate ${styles.LogicGate} ${style}`}\r\n                ref={this.props.reference} >\r\n                <div className={styles.LogicGateInputs}>\r\n                    { inputFields }\r\n                </div>\r\n                <h5 className={styles.LogicGateValue}> { value.toString() } </h5>\r\n                <div className={styles.LogicGateOutputs}>\r\n                    { outputFields }\r\n                </div>\r\n            </div>\r\n        ) // styl LogicGateOutputs jeszcze nie istnieje\r\n    }\r\n}\r\n\r\nexport default LogicGate;\r\n","// jezeli jest chociaz jeden undefined - zwroc undefined\nexport const AND = (inputs) => {\n    let isUndefined = false;\n    for (let i = 0; i < inputs.length; i++){\n        if (inputs[i] === false) return [false];\n        if (inputs[i] === undefined) isUndefined = true;\n    }\n    if ( isUndefined ) return [undefined];\n    return [true];\n}\n\nexport const NOT = (inputs) => [!(inputs[0])]\n\n// jezeli jest chociaz jeden true - zwroc true\nexport const OR = (inputs) => {\n    let isUndefined = false;\n    for (let i = 0; i < inputs.length; i++){\n        if ( inputs[i] === true) return [true];\n        if (inputs[i] === undefined) isUndefined = true;\n    }\n    if ( isUndefined ) return [undefined];\n    return [false];\n}\n","import React from 'react';\r\nimport styles from './Node.module.scss';\r\n\r\nclass Node extends React.Component {\r\n\r\n    get value() { return this.state.value }\r\n\r\n    render() {\r\n        let style;\r\n        const value = this.state.value;\r\n\r\n        // zwróć styl na podstawie wartosci\r\n        if ( value === undefined )\r\n            style = styles.NodeUndefined;\r\n        else if ( value )\r\n            style = styles.NodeTrue;\r\n        else\r\n            style = styles.NodeFalse;\r\n\r\n        const position = this.props.position + 'px';\r\n\r\n        return (\r\n            <div className={ `${styles.Node} ${style}` } onMouseDown={ this.handleOnClick } style={{ top: position }} >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Node;\r\n","import Node from './Node';\r\n\r\nclass StartNode extends Node {\r\n    state = {\r\n        value: false,\r\n        childPins: [],\r\n    }\r\n\r\n    // przylaczanie innego pina jako dziecko\r\n    connect(target) {\r\n        let cps = this.state.childPins;\r\n        cps.push(target);\r\n        this.setState({'childPins': cps});\r\n    }\r\n\r\n    disconnect(target) {\r\n        const oldChildren = this.state.childPins;\r\n        const pinIndex = oldChildren.indexOf(target);\r\n\r\n        // tworzymy kopie tablicy dzieci (aby uniknac bezposredniej zmiany stanu)\r\n        let updatedChildren = [...oldChildren];\r\n        updatedChildren.splice (pinIndex, 1);\r\n\r\n        // ustawiamy nowa tablice dzieci jako stan\r\n        this.setState({\"childPins\": updatedChildren });\r\n    }\r\n\r\n    handleOnClick = (e) => {\r\n        if(e.button === 0) // Lewy PM\r\n            this.props.setFocusedElement(this);\r\n        else if (e.button === 1) // Środkowy PM\r\n            this.toggleValue();\r\n    }\r\n\r\n    toggleValue() {\r\n        const val = !(this.state.value);\r\n        this.setState({value: val}, function() {\r\n            for (let i = 0; i < this.state.childPins.length; i++) {\r\n                this.state.childPins[i].receiveSignal(val);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default StartNode;\r\n","import Node from './Node';\n\nclass EndNode extends Node {\n    state = {\n        value: undefined,\n        parentPin: undefined,\n    }\n\n    handleOnClick = (e) => {\n        if(e.button === 0) { // lewy\n            const newParent = this.props.getFocusedElement();\n            if(newParent)\n                this.changeParentPin(newParent);\n        } else if(e.button === 1) { // srodkowy\n            this.disconnect();\n        }\n    }\n\n    disconnect() {\n        if(!this.state.parentPin) return;\n        this.state.parentPin.disconnect(this);\n        this.setState({'parentPin': undefined});\n        this.receiveSignal(undefined);\n    }\n\n    changeParentPin(newParent) {\n        if (this.state.parentPin)\n            this.state.parentPin.disconnect(this);\n        newParent.connect(this);\n        this.setState({'parentPin': newParent});\n        this.receiveSignal(newParent.state.value);\n    }\n\n    receiveSignal(signal) {\n        this.setState({'value': signal});\n\t}\n}\n\nexport default EndNode;\n","import React from \"react\";\r\nimport OutputPin from \"../LogicGate/OutputPin\";\r\nimport InputPin from \"../LogicGate/InputPin\";\r\nimport styles from \"../LogicGate/LogicGate.module.scss\";\r\n\r\nconst gateClass = {\r\n    'AND': styles.LogicGateAND,\r\n    'OR': styles.LogicGateOR,\r\n    'NOT': styles.LogicGateNOT,\r\n}\r\nclass DummyGate extends React.Component {\r\n    style = gateClass[ this.props.gateType ];\r\n    render () {\r\n        let inputFields = [];\r\n        for (let i = 0; i < this.props.inputs; i++){\r\n            inputFields.push((\r\n                <InputPin />\r\n            ));\r\n        }\r\n        let outputFields = [];\r\n        for (let i = 0; i < this.props.outputs; i++){\r\n            outputFields.push((\r\n                <OutputPin />\r\n            ));\r\n        }\r\n        return (\r\n            <div className={`${styles.LogicGate} ${this.style} ${styles.LogicGateDummy}`}\r\n                onMouseDown={(e) => this.props.addGate(e, {\r\n                    gateLogic: this.props.gateType,\r\n                    inputCount: this.props.inputs,\r\n                    outputCount: this.props.outputs,\r\n                })} >\r\n                <div className={styles.LogicGateInputs} style={{pointerEvents: 'none'}} >\r\n                    { inputFields }\r\n                </div>\r\n                <h5 className={styles.LogicGateValue}> { this.props.gateType } </h5>\r\n                <div className={styles.LogicGateOutputs} style={{pointerEvents: 'none'}} >\r\n                    { outputFields }\r\n                </div>\r\n            </div>\r\n        ) // styl LogicGateOutputs jeszcze nie istnieje\r\n    }\r\n}\r\n\r\nexport default DummyGate;\r\n","import styles from './ControlPanel.module.scss';\nimport DummyGate from '../DummyGate/DummyGate';\n\nconst ControlPanel = (props) => (\n    <nav className={ styles.ControlPanel }>\n        <DummyGate\n            gateType={ \"AND\" }\n            inputs={ 2 }\n            outputs={ 1 }\n            addGate={props.addGate}\n        />\n        <DummyGate\n            gateType={ \"OR\" }\n            inputs={ 2 }\n            outputs={ 1 }\n            addGate={props.addGate}\n        />\n        <DummyGate\n            gateType={ \"NOT\" }\n            inputs={ 1 }\n            outputs={ 1 }\n            addGate={props.addGate}\n        />\n        <DummyGate\n            gateType={ \"TEST\" }\n            inputs={ 2 }\n            outputs={ 2 }\n            addGate={props.addGate}\n        />\n        <DummyGate\n            gateType={ \"OR\" }\n            inputs={ 3 }\n            outputs={ 1 }\n            addGate={props.addGate}\n        />\n    </nav>\n)\n\nexport default ControlPanel;\n","import styles from './Menu.module.scss'\n\nconst Button = (props) => {\n    return (\n        <button onClick={props.action} className={styles.Button}>{props.text}</button>\n    )\n}\n\nexport default Button;\n","import styles from './Menu.module.scss'\nimport Button from './Button'\n\nconst Menu = (props) => {\n    return (\n        <div className={styles.Menu}>\n            <ul>\n                <li><Button text=\"przycisk 1\" action={() => console.log(\"przycisk 1\")}/></li>\n                <li><Button text=\"przycisk 2\"/></li>\n                <li><Button text=\"przycisk 3\"/></li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Menu;\n","import React from \"react\";\r\nimport styles from './Application.module.scss';\r\nimport LogicGate from \"../LogicGate/LogicGate\";\r\nimport StartNode from \"../Node/StartNode\";\r\nimport EndNode from \"../Node/EndNode\";\r\nimport ControlPanel from \"../ControlPanel/ControlPanel\";\r\nimport {findReact} from \"../../functions\";\r\nimport Menu from \"../Menu/Menu\"\r\n\r\nclass Application extends React.Component {\r\n    state = {\r\n        focusedElement: undefined,    // aktualnie wybrane wyjście\r\n        heldElement: undefined,       // aktualnie trzymana bramka\r\n        heldElementOffset: [0, 0],    // różnica koordynatów x i y, między punktem chwytu a faktycznym położeniem bloku\r\n        elements: {\r\n            inputs: [],\r\n            board: [],\r\n            outputs: [],\r\n        }\r\n    }\r\n\r\n    boardRef = React.createRef()\r\n\r\n    // funkcja zmieniajaca aktualnie wybrane wyjscie - pozwala na uzycie kliknietego wyjscia na wejscie bramki logicznej\r\n    setFocusedElement = ( element ) => {\r\n        this.setState ({'focusedElement': element});\r\n    }\r\n\r\n    // funkcja zwracajaca aktualnie wybrane wyjscie - umozliwia kliknietej bramce logicznej zmiane wejscia na wczesniej klikniete wyjscie\r\n    getFocusedElement = () => this.state.focusedElement;\r\n\r\n    addNode = (e, type) => {\r\n        // dodaj tylko jeżeli kliknięto na czysty obszar (nie np istniejący node)\r\n        if ( !e.target.classList.contains('Area') )\r\n            return;\r\n\r\n        const pos = e.clientY - e.target.offsetTop - 10; // 10 - połowa wysokości\r\n        let elements = this.state.elements;\r\n        if (type === \"startNode\")\r\n            elements.inputs.push(\r\n                <StartNode setFocusedElement={ this.setFocusedElement } position={ pos }/>\r\n            );\r\n        else // endNode\r\n            elements.outputs.push(\r\n                <EndNode getFocusedElement={ this.getFocusedElement } position={ pos }/>\r\n            );\r\n        this.setState ({'elements': elements});\r\n    }\r\n\r\n    addGate = (e, args) => {\r\n        let elements = this.state.elements;\r\n        let newGate;\r\n        elements.board.push(\r\n            <LogicGate\r\n                gateType={ args.gateLogic }\r\n                inputs={ args.inputCount }\r\n                outputs={ args.outputCount }\r\n                getFocusedElement={ this.getFocusedElement }\r\n                setFocusedElement={ this.setFocusedElement }\r\n                reference={el => newGate = el}\r\n            />\r\n        );\r\n        this.setState ({'elements': elements}, function(){\r\n            // 'e.target' odnosi się teraz do komponentu DummyGate\r\n            const xo = e.clientX - e.target.offsetLeft;\r\n            const yo = e.clientY - e.target.offsetTop;\r\n\r\n            newGate.style.left = e.clientX - xo + 'px';\r\n            newGate.style.top  = e.clientY - yo + 'px';\r\n\r\n            this.setState({\r\n                heldElement: newGate,\r\n                heldElementOffset: [xo, yo],\r\n            });\r\n        });\r\n    }\r\n\r\n    // funkcja podnosząca bramkę\r\n    grab(e) {\r\n        const element = e.target;\r\n        if (element.classList.contains(\"LogicGate\")) {\r\n            this.setState({heldElement: element});\r\n            // obliczenie różnicy koordynatów x i y, między punktem chwytu a faktycznym położeniem bloku\r\n            const xo = e.clientX - element.offsetLeft;\r\n            const yo = e.clientY - element.offsetTop;\r\n            this.setState({heldElementOffset: [xo, yo]});\r\n        }\r\n    }\r\n\r\n    move(e) {\r\n        // przenieś bramkę (jeżeli jakaś jest trzymana)\r\n        if(this.state.heldElement){\r\n            const element = this.state.heldElement;\r\n            const canvas  = e.currentTarget;\r\n            const board   = this.boardRef.current;\r\n\r\n            let x = e.clientX - this.state.heldElementOffset[0]; // różnica x\r\n            let y = e.clientY - this.state.heldElementOffset[1]; // różnica y\r\n\r\n            if (x < board.offsetLeft)\r\n                // za daleko w lewo\r\n                x = board.offsetLeft;\r\n            else if (x + element.offsetWidth > board.offsetWidth + board.offsetLeft)\r\n                // za daleko w prawo\r\n                x = board.offsetWidth + board.offsetLeft - element.offsetWidth;\r\n            if (y < canvas.offsetTop)\r\n                // za daleko w górę\r\n                y = canvas.offsetTop;\r\n            else if (y + element.offsetHeight > canvas.offsetHeight + canvas.offsetTop)\r\n                // za daleko w dół\r\n                y = canvas.offsetHeight + canvas.offsetTop - element.offsetHeight;\r\n\r\n            element.style.left = x + 'px';\r\n            element.style.top = y + 'px';\r\n        }\r\n    }\r\n\r\n    drop() {\r\n        // upuść trzymaną bramkę\r\n        const element = this.state.heldElement;\r\n        if(element){\r\n            this.setState({heldElement: undefined});\r\n            const board = this.boardRef.current;\r\n            const y = parseInt(element.style.top.split('px')[0])\r\n\r\n            // jeżeli przeniesiony poniżej poziomu 'board', usuń\r\n            if (y + (element.offsetHeight) > board.offsetHeight + board.offsetTop){\r\n                const comp = findReact(element);\r\n                if(comp.selfDestruct)\r\n                    comp.selfDestruct();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={ styles.Application }\r\n                onMouseDown={ (e) => this.grab(e) }\r\n                onMouseMove={ (e) => this.move(e) }\r\n                onMouseUp={ () => this.drop() }\r\n            >\r\n                <Menu />\r\n                <div className={ styles.Canvas }>\r\n                    <div className={ `Area ${styles.InputArea}` }\r\n                        onClick={ (e) => this.addNode(e, 'startNode')}\r\n                    >\r\n                        { this.state.elements.inputs }\r\n                    </div>\r\n                    <div className={ styles.Board }\r\n                        ref={this.boardRef}\r\n                    >\r\n                        { this.state.elements.board }\r\n                    </div>\r\n                    <div className={ `Area ${styles.OutputArea}` }\r\n                        onClick={ (e) => this.addNode(e, 'endNode')}\r\n                    >\r\n                        { this.state.elements.outputs }\r\n                    </div>\r\n                </div>\r\n                <ControlPanel addGate={this.addGate} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Application;\r\n","import EndNode from \"./Components/Node/EndNode\";\n\n// https://stackoverflow.com/questions/29321742/react-getting-a-component-from-a-dom-element-for-debugging/39165137#39165137\n// znajdź komponent React na podstawie elementu DOM\nexport function findReact(dom, traverseUp=0) {\n    const key = Object.keys(dom).find(key => key.startsWith(\"__reactFiber$\"));\n    const domFiber = dom[key];\n    if (domFiber == null) return null;\n\n    const GetCompFiber = fiber=>{\n        //return fiber._debugOwner; // this also works, but is __DEV__ only\n        let parentFiber = fiber.return;\n        while (typeof parentFiber.type == \"string\") {\n            parentFiber = parentFiber.return;\n        }\n        return parentFiber;\n    };\n    let compFiber = GetCompFiber(domFiber);\n    for (let i = 0; i < traverseUp; i++) {\n        compFiber = GetCompFiber(compFiber);\n    }\n    return compFiber.stateNode;\n}\n\nexport function checkForCycle(gate) {\n    // algorytm DFS\n    // https://www.geeksforgeeks.org/depth-first-search-or-dfs-for-a-graph\n    const gates = collectGates(gate);\n    let visited  = new Array(gates.length);\n    let recStack = new Array(gates.length);\n    for(let i=0;i<gates.length;i++) {\n        visited[i]  = false;\n        recStack[i] = false;\n    }\n\n    for (let i = 0; i < gates.length; i++)\n        if (DFSutil(i, visited, recStack, getChildGates(gates[i]))){\n            return true;\n        }\n    return false;\n}\nfunction DFSutil(i, visited, recStack, children) {\n    if (recStack[i])\n        return true;\n\n    if (visited[i])\n        return false;\n\n    visited[i] = true;\n    recStack[i] = true;\n\n    for (let c=0;c< children.length;c++)\n        if (DFSutil(c, visited, recStack, children)){\n            return true;\n        }\n\n    recStack[i] = false;\n\n    return false;\n}\n// zbierz wszystkie bramki poniżej podanej\nfunction collectGates(gate) {\n    let gates = [gate];\n    const loop = (g) => {\n        getChildGates(g).forEach((child) => {\n            // bramki nie ma jeszcze na liście\n            if(!gates.includes(child)) {\n                gates.push(child);\n                loop(child);\n            }\n        });\n    }\n    loop(gate);\n\n    return gates;\n}\n// zbierz bramki bezpośrednio podłączone do podanej jako dzieci\nfunction getChildGates(gate) {\n    let childGates = [];\n    for (let i = 0; i < gate.outputs.length; i++) {\n        // dodaje wszystkie piny, ktore pobieraja sygnal z aktualnej bramki\n        const childPins = gate.outputs[i].state.childPins;\n        for (let j = 0; j < childPins.length; j++){\n            // pomijamy EndNody\n            if (childPins[j] instanceof EndNode) continue;\n            childGates.push( childPins[j].gate );\n        }\n    }\n    return childGates;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Application from './Components/Application/Application';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Application />\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Application\":\"Application_Application__2wRsQ\",\"Canvas\":\"Application_Canvas__35aVF\",\"Board\":\"Application_Board__sFgm3\",\"InputArea\":\"Application_InputArea__3XmUM\",\"OutputArea\":\"Application_OutputArea__flxHC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Node\":\"Node_Node__281H-\",\"NodeUndefined\":\"Node_NodeUndefined__3Ozqf\",\"NodeTrue\":\"Node_NodeTrue__3vLME\",\"NodeFalse\":\"Node_NodeFalse__39hyq\"};"],"sourceRoot":""}