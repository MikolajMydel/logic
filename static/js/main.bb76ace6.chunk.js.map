{"version":3,"sources":["Components/LogicGate/LogicGate.module.scss","logicalFunctions.js","functions.js","Components/Application/Application.module.scss","Components/LogicGate/OutputPin.js","Components/LogicGate/InputPin.js","Components/Node/Node.module.scss","Components/DummyGate/DummyGate.js","Components/LogicGate/Pin.js","Events/signalChange.js","Events/parentChange.js","Components/Node/StartNode.js","Components/Node/Node.js","Components/Node/EndNode.js","Components/Menu/Menu.module.scss","Components/WiresBoard/Wire/Wire.module.scss","Components/Application/Application.js","Components/LogicGate/LogicGate.js","Components/ControlPanel/ControlPanel.js","Components/ControlPanel/ControlPanel.module.scss","Components/WiresBoard/WiresBoard.js","Components/WiresBoard/WiresBoard.module.scss","Events/remove.js","Components/Menu/Button.js","Components/Menu/Menu.js","Components/WiresBoard/Wire/pathFunctions.js","Components/WiresBoard/Wire/Wire.js","index.js"],"names":["module","exports","AND","inputs","isUndefined","i","length","undefined","NOT","OR","retrieveFunction","functions","funcs","map","f","eval","output","push","compareTop","a","b","parseInt","style","top","slice","makeNewGate","canvas","name","color","inputArea","childNodes","outputArea","endNodes","sort","DOM","findReact","startNodes","solve","alreadyVisited","indexOf","StartNode","gate","args","par","state","parentPin","index","func","outputs","dom","traverseUp","key","Object","keys","find","startsWith","domFiber","GetCompFiber","fiber","parentFiber","return","type","compFiber","stateNode","checkForCycle","gates","collectGates","visited","Array","recStack","DFSutil","getChildGates","children","c","loop","g","forEach","child","includes","childGates","childPins","j","EndNode","OutputPin","props","value","ref","React","createRef","target","cps","this","setState","oldChildren","pinIndex","updatedChildren","splice","signal","current","dispatchEvent","signalChange","receiveSignal","className","LogicGateOutput","onClick","setFocusedElement","Pin","InputPin","handleOnClick","e","newParent","getFocusedElement","changeParentPin","disconnect","connect","parentChange","drawWire","processOutput","LogicGateInput","DummyGate","backgroundColor","inputFields","outputFields","styles","LogicGate","LogicGateDummy","onMouseDown","addGate","gateName","function","inputCount","outputCount","LogicGateInputs","pointerEvents","LogicGateValue","LogicGateOutputs","Component","mount","Event","handleOnMouseDown","button","toggleValue","val","Node","NodeUndefined","NodeTrue","NodeFalse","position","validateGateName","test","Application","focusedElement","heldElement","heldElementOffset","elements","board","wires","boardRef","canvasRef","controlRef","element","addNode","classList","contains","pos","clientY","offsetTop","removeWire","newGate","reference","el","xo","clientX","offsetLeft","yo","left","firstPin","secondPin","newWiresList","concat","saveGate","prompt","global","saved","newGateObject","localStorage","getItem","JSON","parse","setItem","stringify","controlPanelObject","addDummy","clearCanvas","savedGate","currentTarget","x","y","offsetWidth","offsetHeight","split","comp","selfDestruct","remove","focused","grab","onMouseMove","move","onMouseUp","drop","Canvas","InputArea","Board","OutputArea","mountPin","pin","render","o","from","input","toString","ControlPanel","dummies","newDummy","WiresBoard","Button","action","text","Menu","calculatePath","firstPinBoundingClient","secondPinBoundingClient","paddings","firstPinCoordinates","secondPinCoordinates","height","width","a1","a2","roundings","verticalDistance","horizontalDistance","calculatePathRight","minVerticalDistance","isAbove","middleRoute","Math","abs","calculatePathLeft","Wire","removeConnection","removeEventListener","updatePosition","examineWireVisibility","getStateClass","WireHighState","WireLowState","firstPinPosition","getBoundingClientRect","secondPinPosition","currentParent","parentElement","findParentGate","addEventListener","stateClass","gateBoundingClientRect","firstPinPaddings","bottom","secondPinPaddings","d","replace","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb76ace6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"LogicGate\":\"LogicGate_LogicGate__1Cc_p\",\"LogicGateDummy\":\"LogicGate_LogicGateDummy__19ubT\",\"LogicGateInputs\":\"LogicGate_LogicGateInputs__oV9js\",\"LogicGateOutputs\":\"LogicGate_LogicGateOutputs__3uRMQ\",\"LogicGateValue\":\"LogicGate_LogicGateValue__3jkbZ\"};","// jezeli jest chociaz jeden undefined - zwroc undefined\nexport const AND = (inputs) => {\n    let isUndefined = false;\n    for (let i = 0; i < inputs.length; i++){\n        if (inputs[i] === false) return [false];\n        if (inputs[i] === undefined) isUndefined = true;\n    }\n    if ( isUndefined ) return [undefined];\n    return [true];\n}\n\nexport const NOT = (inputs) => {\n    if(inputs[0] === undefined) return [undefined];\n    return [!(inputs[0])];\n}\n\n// jezeli jest chociaz jeden true - zwroc true\nexport const OR = (inputs) => {\n    let isUndefined = false;\n    for (let i = 0; i < inputs.length; i++){\n        if ( inputs[i] === true) return [true];\n        if (inputs[i] === undefined) isUndefined = true;\n    }\n    if ( isUndefined ) return [undefined];\n    return [false];\n}\n","import EndNode from \"./Components/Node/EndNode\";\nimport StartNode from \"./Components/Node/StartNode\";\n\n//zwraca gotową funkcję na podstawie tablicy stringów z funkcjami\nexport function retrieveFunction(functions){\n    let funcs = functions.map(f => eval(f));\n    return (inputs) => {\n        let output = [];\n        for(let i=0; i<funcs.length; i++){\n            output.push(funcs[i](inputs));\n        }\n        return output;\n    }\n}\nconst compareTop = (a, b) => parseInt(a.style.top.slice(0,-2)) - parseInt(b.style.top.slice(0,-2));\n\n// zapisuje customową funkcję w formie stringa dla nowej bramki na podstawie\n// podanych obiektów endNode\nexport function makeNewGate(canvas, name, color) {\n    const inputArea = canvas.childNodes[0];\n    const outputArea = canvas.childNodes[2];\n\n    // posortowane od najwyżej położonego do najniżej\n    const endNodes  = [...outputArea.childNodes].sort(compareTop).map(DOM => findReact(DOM));\n    const startNodes = [...inputArea.childNodes].sort(compareTop).map(DOM => findReact(DOM));\n\n    const solve = (output, alreadyVisited) => {\n        if (!output || alreadyVisited.indexOf(output) !== -1) // był już sprawdzany\n            return;\n        if(output instanceof StartNode){\n            for(let i=0; i<startNodes.length; i++){\n                if(output === startNodes[i])\n                    return \"i[\" + i + \"]\";\n            }\n        } else {\n            alreadyVisited.push(output);\n            const gate = output.gate;\n            let args = [];\n            for(const input of gate.inputs){\n                const par = input.state.parentPin;\n                if(par){\n                    args.push(solve(par, alreadyVisited));\n                } else // input bramki nie jest do niczego podpięty\n                    args.push(undefined)\n            }\n            return (\n                gate.name + \"([\" + args + \"])[\" + output.index + \"]\"\n            );\n        }\n    }\n\n    let output = [];\n    for(let endNode of endNodes) {\n        let func = \"(i) => \" + solve(endNode.state.parentPin, []);\n        output.push(func);\n    }\n    return {\n        name: name,\n        inputs: startNodes.length,\n        outputs: endNodes.length,\n        functions: output,\n        color: color,\n    };\n}\n\n// https://stackoverflow.com/questions/29321742/react-getting-a-component-from-a-dom-element-for-debugging/39165137#39165137\n// znajdź komponent React na podstawie elementu DOM\nexport function findReact(dom, traverseUp=0) {\n    const key = Object.keys(dom).find(key => key.startsWith(\"__reactFiber$\"));\n    const domFiber = dom[key];\n    if (domFiber == null) return null;\n\n    const GetCompFiber = fiber=>{\n        //return fiber._debugOwner; // this also works, but is __DEV__ only\n        let parentFiber = fiber.return;\n        while (typeof parentFiber.type == \"string\") {\n            parentFiber = parentFiber.return;\n        }\n        return parentFiber;\n    };\n    let compFiber = GetCompFiber(domFiber);\n    for (let i = 0; i < traverseUp; i++) {\n        compFiber = GetCompFiber(compFiber);\n    }\n    return compFiber.stateNode;\n}\n\nexport function checkForCycle(gate) {\n    // algorytm DFS\n    // https://www.geeksforgeeks.org/depth-first-search-or-dfs-for-a-graph\n    const gates = collectGates(gate);\n    let visited  = new Array(gates.length);\n    let recStack = new Array(gates.length);\n    for(let i=0;i<gates.length;i++) {\n        visited[i]  = false;\n        recStack[i] = false;\n    }\n\n    for (let i = 0; i < gates.length; i++)\n        if (DFSutil(i, visited, recStack, getChildGates(gates[i]))){\n            return true;\n        }\n    return false;\n}\nfunction DFSutil(i, visited, recStack, children) {\n    if (recStack[i])\n        return true;\n\n    if (visited[i])\n        return false;\n\n    visited[i] = true;\n    recStack[i] = true;\n\n    for (let c=0;c< children.length;c++)\n        if (DFSutil(c, visited, recStack, children)){\n            return true;\n        }\n\n    recStack[i] = false;\n\n    return false;\n}\n// zbierz wszystkie bramki poniżej podanej\nfunction collectGates(gate) {\n    let gates = [gate];\n    const loop = (g) => {\n        getChildGates(g).forEach((child) => {\n            // bramki nie ma jeszcze na liście\n            if(!gates.includes(child)) {\n                gates.push(child);\n                loop(child);\n            }\n        });\n    }\n    loop(gate);\n\n    return gates;\n}\n// zbierz bramki bezpośrednio podłączone do podanej jako dzieci\nfunction getChildGates(gate) {\n    let childGates = [];\n    for (let i = 0; i < gate.outputs.length; i++) {\n        // dodaje wszystkie piny, ktore pobieraja sygnal z aktualnej bramki\n        const childPins = gate.outputs[i].state.childPins;\n        for (let j = 0; j < childPins.length; j++){\n            // pomijamy EndNody\n            if (childPins[j] instanceof EndNode) continue;\n            childGates.push( childPins[j].gate );\n        }\n    }\n    return childGates;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Application\":\"Application_Application__2wRsQ\",\"Canvas\":\"Application_Canvas__35aVF\",\"Board\":\"Application_Board__sFgm3\",\"InputArea\":\"Application_InputArea__3XmUM\",\"OutputArea\":\"Application_OutputArea__flxHC\"};","import React from \"react\";\nimport Pin from \"./Pin\";\n\nimport signalChange from \"../../Events/signalChange\";\nclass OutputPin extends Pin {\n    constructor(props) {\n        super(props);\n        this.state = {\n            childPins: [],\n            value: undefined,\n\n            ref: React.createRef(),\n\n        }\n    }\n\n    // przylaczanie innego pina jako dziecko\n    connect(target) {\n        let cps = this.state.childPins;\n        cps.push(target);\n        this.setState({'childPins': cps});\n    }\n\n    disconnect(target) {\n        const oldChildren = this.state.childPins;\n        const pinIndex = oldChildren.indexOf(target);\n\n        // tworzymy kopie tablicy dzieci (aby uniknac bezposredniej zmiany stanu)\n        let updatedChildren = [...oldChildren];\n        updatedChildren.splice (pinIndex, 1);\n\n        // ustawiamy nowa tablice dzieci jako stan\n        this.setState({\"childPins\": updatedChildren });\n    }\n\n    receiveSignal(signal) {\n        this.setState({'value': signal}, function() {\n            this.state.ref.current.dispatchEvent(signalChange);\n\n            for (let i = 0; i < this.state.childPins.length; i++) {\n                this.state.childPins[i].receiveSignal(signal);\n            }\n        });\n\t}\n\n    render(){\n        return <button ref={ this.state.ref } className={ this.style.LogicGateOutput } \n            onClick={ () => this.props.setFocusedElement(this) }> </button>;\n    }\n}\n\nexport default OutputPin;\n","import React from \"react\";\nimport parentChange from \"../../Events/parentChange\";\nimport Pin from \"./Pin\";\n\nclass InputPin extends Pin {\n    constructor(props) {\n        super(props);\n        this.state = {\n            parentPin: undefined,\n            value: undefined,\n\n            ref: React.createRef(),\n\n        }\n    }\n\n    handleOnClick = (e) => {\n        const newParent = this.props.getFocusedElement();\n        if (newParent)\n            this.changeParentPin(newParent);\n    }\n\n    disconnect() {\n        if (!this.state.parentPin) return;\n        this.state.parentPin.disconnect(this);\n        this.setState({\n            'parentPin': undefined\n        });\n        this.receiveSignal(undefined);\n    }\n\n    // zmień do jakiego outputa podłączony jest ten input\n    changeParentPin(newParent) {\n\n        if (this.state.parentPin !== newParent) {\n\n            if (this.state.parentPin) this.state.parentPin.disconnect(this);\n            newParent.connect(this);\n            this.setState({\n                'parentPin': newParent\n            }, () => this.state.ref.current.dispatchEvent(parentChange));\n\n            this.receiveSignal(newParent.state.value);\n            this.props.drawWire(newParent, this);\n        }\n\n    }\n\n    receiveSignal(signal) {\n        // najwyraźniej najlepszy sposób na zapobiegniecie zapętlania\n        // omg\n        if (signal === this.state.value) return;\n\n        this.setState({\n            'value': signal\n        }, function () {\n            this.gate.processOutput();\n        });\n    }\n\n    render() {\n        return ( <button ref = {\n                this.state.ref\n            }\n            className = {\n                this.style.LogicGateInput\n            }\n            onClick = {\n                this.handleOnClick\n            }>\n\n            </button>\n        )\n    }\n}\n\nexport default InputPin;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Node\":\"Node_Node__281H-\",\"NodeUndefined\":\"Node_NodeUndefined__3Ozqf\",\"NodeTrue\":\"Node_NodeTrue__3vLME\",\"NodeFalse\":\"Node_NodeFalse__39hyq\"};","import React from \"react\";\r\nimport OutputPin from \"../LogicGate/OutputPin\";\r\nimport InputPin from \"../LogicGate/InputPin\";\r\nimport styles from \"../LogicGate/LogicGate.module.scss\";\r\n\r\nclass DummyGate extends React.Component {\r\n    style = {backgroundColor: this.props.color}\r\n    render () {\r\n        let inputFields = [];\r\n        for (let i = 0; i < this.props.inputs; i++){\r\n            inputFields.push((\r\n                <InputPin />\r\n            ));\r\n        }\r\n        let outputFields = [];\r\n        for (let i = 0; i < this.props.outputs; i++){\r\n            outputFields.push((\r\n                <OutputPin />\r\n            ));\r\n        }\r\n        return (\r\n            <div className={`${styles.LogicGate} ${styles.LogicGateDummy}`}\r\n                style={this.style}\r\n                onMouseDown={(e) => this.props.addGate(e, {\r\n                    gateName: this.props.gateName,\r\n                    function: this.props.function,\r\n                    style: this.style,\r\n                    inputCount: this.props.inputs,\r\n                    outputCount: this.props.outputs,\r\n                })} >\r\n                <div className={styles.LogicGateInputs} style={{pointerEvents: 'none'}} >\r\n                    { inputFields }\r\n                </div>\r\n                <h5 className={styles.LogicGateValue}> { this.props.gateName } </h5>\r\n                <div className={styles.LogicGateOutputs} style={{pointerEvents: 'none'}} >\r\n                    { outputFields }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DummyGate;\r\n","import React from \"react\";\nimport styles from \"./LogicGate.module.scss\";\n\nclass Pin extends React.Component {\n    style = styles;\n\n    constructor(props) {\n        super();\n\n        this.index = props.index;\n        this.gate = props.gate;\n    }\n\n    componentDidMount() {\n        if(this.props.mount)\n            this.props.mount(this); // dodaj siebie do tablicy pinów swojej bramki\n    }\n}\n\nexport default Pin;\n","const signalChange = new Event(\"signalChange\");\n\nexport default signalChange;","const parentChange = new Event(\"parentChange\");\n\nexport default parentChange;","import React from 'react';\r\nimport Node from './Node';\r\nimport signalChange from '../../Events/signalChange';\r\nclass StartNode extends Node {\r\n    state = {\r\n        value: false,\r\n        childPins: [],\r\n\r\n        ref: React.createRef(),\r\n\r\n    }\r\n\r\n    // przylaczanie innego pina jako dziecko\r\n    connect(target) {\r\n        let cps = this.state.childPins;\r\n        cps.push(target);\r\n        this.setState({'childPins': cps});\r\n    }\r\n\r\n    disconnect(target) {\r\n        const oldChildren = this.state.childPins;\r\n        const pinIndex = oldChildren.indexOf(target);\r\n\r\n        // tworzymy kopie tablicy dzieci (aby uniknac bezposredniej zmiany stanu)\r\n        let updatedChildren = [...oldChildren];\r\n        updatedChildren.splice (pinIndex, 1);\r\n\r\n        // ustawiamy nowa tablice dzieci jako stan\r\n        this.setState({\"childPins\": updatedChildren });\r\n    }\r\n\r\n    handleOnMouseDown = (e) => {\r\n        if(e.button === 0) // Lewy PM\r\n            this.props.setFocusedElement(this);\r\n        else if (e.button === 1) // Środkowy PM\r\n            this.toggleValue();\r\n    }\r\n\r\n    toggleValue() {\r\n        const val = !(this.state.value);\r\n        this.setState({value: val}, function() {\r\n            for (let i = 0; i < this.state.childPins.length; i++) {\r\n                this.state.childPins[i].receiveSignal(val);\r\n            }\r\n\r\n            this.state.ref.current.dispatchEvent(signalChange);\r\n        });\r\n    }\r\n}\r\n\r\nexport default StartNode;\r\n","import React from 'react';\r\nimport styles from './Node.module.scss';\r\n\r\nclass Node extends React.Component {\r\n\r\n    get value() { return this.state.value }\r\n\r\n    render() {\r\n        let style;\r\n        const value = this.state.value;\r\n\r\n        // zwróć styl na podstawie wartosci\r\n        if ( value === undefined )\r\n            style = styles.NodeUndefined;\r\n        else if ( value )\r\n            style = styles.NodeTrue;\r\n        else\r\n            style = styles.NodeFalse;\r\n\r\n        const position = this.props.position + 'px';\r\n\r\n        return (\r\n            <div ref={this.state.ref}\r\n            className={ `${styles.Node} ${style}` } onMouseDown={ this.handleOnMouseDown } style={{ top: position }} >\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Node;\r\n","import React from \"react\";\nimport parentChange from \"../../Events/parentChange\";\nimport Node from \"./Node\";\n\nclass EndNode extends Node {\n  state = {\n    value: undefined,\n    parentPin: undefined,\n\n    ref: React.createRef(),\n  };\n\n  handleOnMouseDown = (e) => {\n    if (e.button === 0) {\n      const newParent = this.props.getFocusedElement();\n      if (newParent) this.changeParentPin(newParent);\n    }\n  };\n\n  disconnect = () => this.changeParentPin(undefined);\n\n  changeParentPin = (newParent) => {\n    if (newParent !== this.state.parentPin) {\n      if (this.state.parentPin) this.state.parentPin.disconnect(this);\n\n      this.setState(\n        { parentPin: newParent },\n        // funkcja powiadamiajaca przewod o usunieciu polaczenia\n        () => {\n          this.state.ref.current.dispatchEvent(parentChange);\n        }\n      );\n\n      if (newParent) {\n        newParent.connect(this);\n        this.props.drawWire(newParent, this);\n        this.receiveSignal(newParent.state.value);\n      } else this.receiveSignal(undefined);\n    }\n  };\n\n  receiveSignal(signal) {\n    this.setState({ value: signal });\n  }\n}\n\nexport default EndNode;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Menu_Menu__2X7bN\",\"Button\":\"Menu_Button__8Dt-Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wire\":\"Wire_Wire__14Zuc\",\"WireHighState\":\"Wire_WireHighState__14PU4\",\"WireLowState\":\"Wire_WireLowState__1Ox6P\"};","import React from \"react\";\r\nimport styles from './Application.module.scss';\r\nimport LogicGate from \"../LogicGate/LogicGate\";\r\nimport StartNode from \"../Node/StartNode\";\r\nimport EndNode from \"../Node/EndNode\";\r\nimport ControlPanel from \"../ControlPanel/ControlPanel\";\r\nimport Menu from \"../Menu/Menu\"\r\nimport {findReact, makeNewGate} from \"../../functions\";\r\nimport {AND, NOT, OR} from \"../../logicalFunctions\"\r\nimport Wire from '../WiresBoard/Wire/Wire.js';\r\nimport WiresBoard from \"../WiresBoard/WiresBoard\";\r\nimport remove from \"../../Events/remove\";\r\n\r\nfunction validateGateName(name) {\r\n    // nazwa może składać się wyłącznie z liter i cyfr\r\n    // oraz musi zaczynać się od litery\r\n    var regex = /^[A-Za-z][A-Za-z0-9]*$/;\r\n    return regex.test(name);\r\n}\r\nclass Application extends React.Component {\r\n    state = {\r\n        focusedElement: undefined,    // aktualnie wybrane wyjście\r\n        heldElement: undefined,       // aktualnie trzymana bramka\r\n        heldElementOffset: [0, 0],    // różnica koordynatów x i y, między punktem chwytu a faktycznym położeniem bloku\r\n        elements: {\r\n            inputs: [],\r\n            board: [],\r\n            outputs: [],\r\n        },\r\n        wires: [],\r\n    }\r\n\r\n    boardRef = React.createRef()\r\n    canvasRef = React.createRef()\r\n    controlRef = React.createRef()\r\n    controlPanelObject\r\n\r\n    // funkcja zmieniajaca aktualnie wybrane wyjscie - pozwala na uzycie kliknietego wyjscia na wejscie bramki logicznej\r\n    setFocusedElement = ( element ) => {\r\n        this.setState ({'focusedElement': element});\r\n    }\r\n\r\n    // funkcja zwracajaca aktualnie wybrane wyjscie - umozliwia kliknietej bramce logicznej zmiane wejscia na wczesniej klikniete wyjscie\r\n    getFocusedElement = () => this.state.focusedElement;\r\n\r\n    // tylko raz po wyrenderowaniu tego komponentu\r\n    componentDidMount(){\r\n        global.NOT = NOT;\r\n        global.AND = AND;\r\n        global.OR = OR;\r\n\r\n        this.controlPanelObject = findReact(this.controlRef.current);\r\n\r\n        // wczytaj zapisane bramki z localstorage\r\n        let saved;\r\n        if(localStorage.getItem(\"savedGates\") !== null)\r\n            saved = JSON.parse(localStorage.getItem(\"savedGates\"));\r\n        else\r\n            saved = [];\r\n\r\n        for(const savedGate of saved){\r\n            this.controlPanelObject.addDummy(savedGate);\r\n        }\r\n    }\r\n\r\n    addNode = (e, type) => {\r\n        // dodaj tylko jeżeli kliknięto na czysty obszar (nie np istniejący node)\r\n        if ( !e.target.classList.contains('Area') )\r\n            return;\r\n\r\n        const pos = e.clientY - e.target.offsetTop - 10; // 10 - połowa wysokości\r\n        let elements = this.state.elements;\r\n        if (type === \"startNode\")\r\n            elements.inputs.push(\r\n                <StartNode setFocusedElement={ this.setFocusedElement } position={ pos }/>\r\n            );\r\n        else // endNode\r\n            elements.outputs.push(\r\n                <EndNode drawWire={ this.drawWire } removeWire={ this.removeWire }\r\n                getFocusedElement={ this.getFocusedElement } position={ pos }/>\r\n            );\r\n        this.setState ({'elements': elements});\r\n    }\r\n\r\n    addGate = (e, args) => {\r\n        let elements = this.state.elements;\r\n        let newGate;\r\n        elements.board.push(\r\n            <LogicGate\r\n                gateName={ args.gateName }\r\n                inputs={ args.inputCount }\r\n                outputs={ args.outputCount }\r\n                function={ args.function }\r\n                style={ args.style }\r\n                drawWire = { this.drawWire }\r\n                getFocusedElement={ this.getFocusedElement }\r\n                setFocusedElement={ this.setFocusedElement }\r\n                reference={el => newGate = el}\r\n            />\r\n        );\r\n        this.setState ({'elements': elements}, function(){\r\n            // 'e.target' odnosi się teraz do komponentu DummyGate\r\n            const xo = e.clientX - e.target.offsetLeft;\r\n            const yo = e.clientY - e.target.offsetTop;\r\n\r\n            newGate.style.left = e.clientX - xo + 'px';\r\n            newGate.style.top  = e.clientY - yo + 'px';\r\n\r\n            this.setState({\r\n                heldElement: newGate,\r\n                heldElementOffset: [xo, yo],\r\n            });\r\n        });\r\n    }\r\n\r\n    // funkcja podnosząca bramkę\r\n    grab(e) {\r\n        const element = e.target;\r\n        if (element.classList.contains(\"LogicGate\")) {\r\n            this.setState({heldElement: element});\r\n            // obliczenie różnicy koordynatów x i y, między punktem chwytu a faktycznym położeniem bloku\r\n            const xo = e.clientX - element.offsetLeft;\r\n            const yo = e.clientY - element.offsetTop;\r\n            this.setState({heldElementOffset: [xo, yo]});\r\n        }\r\n    }\r\n\r\n    move(e) {\r\n        // przenieś bramkę (jeżeli jakaś jest trzymana)\r\n        if(this.state.heldElement){\r\n            const element = this.state.heldElement;\r\n            const canvas  = e.currentTarget;\r\n            const board   = this.boardRef.current;\r\n\r\n            let x = e.clientX - this.state.heldElementOffset[0]; // różnica x\r\n            let y = e.clientY - this.state.heldElementOffset[1]; // różnica y\r\n\r\n            if (x < board.offsetLeft)\r\n                // za daleko w lewo\r\n                x = board.offsetLeft;\r\n            else if (x + element.offsetWidth > board.offsetWidth + board.offsetLeft)\r\n                // za daleko w prawo\r\n                x = board.offsetWidth + board.offsetLeft - element.offsetWidth;\r\n            if (y < canvas.offsetTop)\r\n                // za daleko w górę\r\n                y = canvas.offsetTop;\r\n            else if (y + element.offsetHeight > canvas.offsetHeight + canvas.offsetTop)\r\n                // za daleko w dół\r\n                y = canvas.offsetHeight + canvas.offsetTop - element.offsetHeight;\r\n\r\n            element.style.left = x + 'px';\r\n            element.style.top = y + 'px';\r\n        }\r\n    }\r\n\r\n    drop() {\r\n        // upuść trzymaną bramkę\r\n        const element = this.state.heldElement;\r\n        if(element){\r\n            this.setState({heldElement: undefined});\r\n            const board = this.boardRef.current;\r\n            const y = parseInt(element.style.top.split('px')[0])\r\n\r\n            // jeżeli przeniesiony poniżej poziomu 'board', usuń\r\n            if (y + (element.offsetHeight) > board.offsetHeight + board.offsetTop){\r\n                const comp = findReact(element);\r\n                comp.selfDestruct();\r\n                element.dispatchEvent(remove);\r\n\r\n                const focused = this.getFocusedElement();\r\n                if(focused && focused.gate === comp)\r\n                    this.setFocusedElement(undefined);\r\n            }\r\n        }\r\n    }\r\n\r\n    drawWire = (firstPin, secondPin) => {\r\n        const newWiresList = this.state.wires.concat([ <Wire firstPin={firstPin} secondPin={secondPin} /> ]);\r\n        this.setState({\"wires\": newWiresList});\r\n    }\r\n\r\n    // zapisuje obszar roboczy jako nową bramkę do projektu\r\n    saveGate = () => {\r\n        do {\r\n            // tutaj będzie wywoływane okno zapisu bramki\r\n            // z wyborem koloru itd. na razie tylko prompt o nazwe\r\n            var name = prompt('podaj nazwę dla tej bramki');\r\n            // sprawdza poprawność nazwy i czy nie jest już taka zdefiniowana\r\n        } while(!validateGateName(name) || global[name] !== undefined);\r\n        do {\r\n            var color = prompt('podaj kolor');\r\n        } while(color === \"\");\r\n\r\n        const newGateObject = makeNewGate(this.canvasRef, name, color);\r\n\r\n        // zapisywanie w localStorage\r\n        let saved;\r\n        if(localStorage.getItem(\"savedGates\") !== null)\r\n            saved = JSON.parse(localStorage.getItem(\"savedGates\"));\r\n        else\r\n            saved = [];\r\n        saved.push(newGateObject);\r\n        localStorage.setItem(\"savedGates\", JSON.stringify(saved));\r\n\r\n        // dodaj nową bramkę do zasobnika\r\n        this.controlPanelObject.addDummy(newGateObject);\r\n    }\r\n\r\n    // wyczyść obszar roboczy\r\n    clearCanvas = () => {\r\n        this.setState({focusedElement: undefined, elements: {inputs: [], board: [], outputs: []}, wires: []})\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={ styles.Application }\r\n                onMouseDown={ (e) => this.grab(e) }\r\n                onMouseMove={ (e) => this.move(e) }\r\n                onMouseUp={ () => this.drop() }\r\n            >\r\n                <Menu functions={[this.saveGate, this.clearCanvas]}/>\r\n                <WiresBoard wires={this.state.wires} />\r\n                <div className={ styles.Canvas }\r\n                    ref={el => this.canvasRef = el}\r\n                >\r\n                    <div className={ `Area ${styles.InputArea}` }\r\n                        onClick={ (e) => this.addNode(e, 'startNode')}\r\n                    >\r\n                        { this.state.elements.inputs }\r\n                    </div>\r\n                    <div className={ styles.Board }\r\n                        ref={this.boardRef}\r\n                    >\r\n\r\n                        { this.state.elements.board }\r\n\r\n                    </div>\r\n                    <div className={ `Area ${styles.OutputArea}` }\r\n                        onClick={ (e) => this.addNode(e, 'endNode')}\r\n                    >\r\n                        { this.state.elements.outputs }\r\n                    </div>\r\n                </div>\r\n                <ControlPanel addGate={this.addGate} reference={this.controlRef}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Application;\r\n","import React from \"react\";\r\nimport OutputPin from \"./OutputPin\";\r\nimport InputPin from \"./InputPin\";\r\nimport styles from \"./LogicGate.module.scss\";\r\n\r\nclass LogicGate extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.name = props.gateName;\r\n        this.func = props.function;\r\n        this.state = {\r\n            value: undefined, // tymczasowo\r\n            render: true,\r\n        }\r\n        this.inputs = [];\r\n        this.outputs = [];\r\n    }\r\n\r\n    // dzięki tej funkcji piny dodają się do tablicy pinów output lub input\r\n    mountPin = (pin) => {\r\n        if(pin instanceof InputPin){\r\n            this.inputs[pin.index] = pin;\r\n        } else if(pin instanceof OutputPin){\r\n            this.outputs[pin.index] = pin;\r\n        }\r\n    }\r\n\r\n    selfDestruct() {\r\n        // usuń wszystkie połączenia\r\n        this.inputs.forEach((i) => i.disconnect());\r\n        this.outputs.forEach((o) => {\r\n            o.state.childPins.forEach((i) => i.disconnect());\r\n        });\r\n        this.setState({render: false});\r\n    }\r\n\r\n    processOutput() {\r\n        let inputs = Array.from(\r\n            this.inputs.map ( (input) => input.state.value )\r\n        );\r\n\r\n        let output = this.func(inputs);\r\n        for(let i=0; i<output.length; i++)\r\n            this.outputs[i].receiveSignal(output[i]);\r\n        this.setState({value: output[0]});\r\n    }\r\n\r\n    render () {\r\n        if(this.state.render === false) return null;\r\n        // na razie używamy wartości logicznej bramki, żeby ułatwić sprawdzanie czy działają ( i tak korzystamy tylko z bramek 1-outputowych ), później powinny mieć po prostu nazwy danej bramki\r\n        let value = this.state.value;\r\n        if(value === undefined) value = \"undefined\"\r\n\r\n        let inputFields = [];\r\n\r\n        for (let i = 0; i < this.props.inputs; i++){\r\n            inputFields.push((\r\n                <InputPin\r\n                    drawWire={ this.props.drawWire }\r\n\r\n                    index={ i }\r\n                    gate={ this }\r\n                    getFocusedElement={ this.props.getFocusedElement }\r\n                    mount={ this.mountPin } />\r\n            ));\r\n        }\r\n\r\n        let outputFields = [];\r\n        for (let i = 0; i < this.props.outputs; i++){\r\n            outputFields.push((\r\n                <OutputPin\r\n                    index={ i }\r\n                    gate={ this }\r\n                    getFocusedElement={ this.props.getFocusedElement }\r\n                    setFocusedElement={ this.props.setFocusedElement }\r\n                    mount={ this.mountPin } />\r\n            ));\r\n        }\r\n        return (\r\n            <div className={`LogicGate ${styles.LogicGate}`}\r\n                style={this.props.style}\r\n                ref={this.props.reference}\r\n            >\r\n                <div className={styles.LogicGateInputs}>\r\n                    { inputFields }\r\n                </div>\r\n                <h5 className={styles.LogicGateValue}> { value.toString() } </h5>\r\n                <div className={styles.LogicGateOutputs}>\r\n                    { outputFields }\r\n                </div>\r\n            </div>\r\n        ) // styl LogicGateOutputs jeszcze nie istnieje\r\n    }\r\n}\r\n\r\nexport default LogicGate;\r\n","import styles from './ControlPanel.module.scss';\nimport DummyGate from '../DummyGate/DummyGate';\nimport {retrieveFunction} from '../../functions';\nimport {AND, NOT, OR} from \"../../logicalFunctions\"\nimport React from \"react\";\n\nclass ControlPanel extends React.Component {\n\n    constructor(props){\n        super();\n        this.state = {\n            // NAZWA BRAMKI MUSI BYĆ TAKA SAMA JAK NAZWA JEJ FUNKCJI\n            dummies: [\n                <DummyGate\n                    gateName={ \"AND\" }\n                    function={AND}\n                    color={\"cornflowerblue\"}\n                    inputs={ 2 }\n                    outputs={ 1 }\n                    addGate={props.addGate}\n                />,\n                <DummyGate\n                    gateName={ \"NOT\" }\n                    function={NOT}\n                    color={\"red\"}\n                    inputs={ 1 }\n                    outputs={ 1 }\n                    addGate={props.addGate}\n                />,\n                <DummyGate\n                    gateName={ \"OR\" }\n                    function={OR}\n                    color={\"chocolate\"}\n                    inputs={ 2 }\n                    outputs={ 1 }\n                    addGate={props.addGate}\n                />,\n            ],\n        }\n    }\n    addDummy = (newGate) => {\n        let dummies = this.state.dummies;\n        const func = retrieveFunction(newGate.functions);\n\n        // zrób tą funkcję dostępną globalnie\n        global[newGate.name] = func;\n\n        const newDummy = (\n            <DummyGate\n                gateName={ newGate.name }\n                function={ func }\n                color={ newGate.color }\n                inputs={ newGate.inputs }\n                outputs={ newGate.outputs }\n                addGate={ this.props.addGate }\n            />\n        )\n        dummies.push(newDummy);\n        this.setState({dummies: dummies});\n    }\n\n    render(){\n        return (\n        <nav className={ styles.ControlPanel }\n            ref={this.props.reference}\n        >\n            {this.state.dummies}\n        </nav>\n        );\n    }\n}\n\nexport default ControlPanel;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ControlPanel\":\"ControlPanel_ControlPanel__1H8pU\"};","import styles from './WiresBoard.module.scss';\n\nconst WiresBoard = (props) => {\n    return (\n        <svg className={ styles.WiresBoard }>\n                { props.wires }\n        </svg>\n    )\n}\n\nexport default WiresBoard;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WiresBoard\":\"WiresBoard_WiresBoard__1awF0\"};","const remove = new Event(\"remove\");\n\nexport default remove;","import styles from './Menu.module.scss'\n\nconst Button = (props) => {\n    return (\n        <button onClick={props.action} className={styles.Button}>{props.text}</button>\n    )\n}\n\nexport default Button;\n","import styles from './Menu.module.scss'\nimport Button from './Button'\n\nconst Menu = (props) => {\n    return (\n        <div className={styles.Menu}>\n            <ul>\n                <li><Button text=\"zapisz bramkę\" action={() => props.functions[0]()}/></li>\n                <li><Button text=\"wyczyść canvas\" action={() => props.functions[1]()}/></li>\n                <li><Button text=\"przycisk 3\" action={() => props.functions[2]()}/></li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Menu;\n","function calculatePathRight(firstPinCoordinates, secondPinCoordinates) {\n    const verticalDistance = secondPinCoordinates[1] - firstPinCoordinates[1];\n    const horizontalDistance = secondPinCoordinates[0] - firstPinCoordinates[0];\n\n    // jezeli docelowy punkt jest nizej:\n    // ostatnie 3 wartosci a1: 1 12,12\n    // jezeli jest wyzej:\n    // ostatnie 3 wartosci a1: 0 12,-12\n    let a1, a2, roundings;\n    if (verticalDistance < -25) {\n        a1 = \"a20,20 0 0 0 12,-12\"\n        a2 = \"a20,20 0 0 1 12 -12\"\n    } else if (verticalDistance > 25) {\n        a1 = \"a20,20 0 0 1 12 12\";\n        a2 = \"a20,20 0 0 0 12 12\"\n    }\n\n    if (a1) {\n        roundings =\n            `\n                l ${[horizontalDistance / 2, 0]}\n                ${a1} \n                l ${[ 0, verticalDistance < 0 ? verticalDistance + 25 : verticalDistance - 25 ]} \n                ${a2}\n                `\n    } else {\n        roundings = \"\";\n    }\n\n    return `M ${firstPinCoordinates} \n            ${roundings}\n        L ${secondPinCoordinates}\n        `\n}\n\nfunction calculatePathLeft(firstPinCoordinates, secondPinCoordinates, paddings) {\n    const verticalDistance = secondPinCoordinates[1] - firstPinCoordinates[1];\n    const horizontalDistance = secondPinCoordinates[0] - firstPinCoordinates[0];\n\n    const isAbove = verticalDistance > 0;\n\n    let middleRoute = \"\";\n    const spaceSize = 75;\n    let minVerticalDistance;\n\n    if (isAbove) minVerticalDistance = paddings[0][1] + paddings[1][0] + spaceSize;\n    else minVerticalDistance = paddings[0][0] + paddings[1][1] + spaceSize;\n\n    // zmiesci sie pomiedzy\n    if (Math.abs(verticalDistance) > minVerticalDistance) {\n\n        // pierwszy jest na gorze\n        if (isAbove) {\n            middleRoute =\n                `\n                a20,20 0 0 1 12,12\n                l 0,${ (verticalDistance / 2) - 25 }\n\n                a20,20 0 0 1 -12,12\n\n                l ${horizontalDistance - 50}, 0\n\n                a20,20 0 0 0 -12,12\n\n                L ${ secondPinCoordinates[0] - 35}, ${secondPinCoordinates[1] - 15}\n\n                a20,20 0 0 0 12,12\n\n                `\n\n        } else {\n            middleRoute =\n                `   \n                    a20,20 0 0 0 12,-12\n                    l 0,${ (verticalDistance / 2) + 25 }\n\n                    a20,20 0 0 0 -12,-12\n\n                    l ${horizontalDistance - 50}, 0\n\n                    a20,20 0 0 1 -12,-12\n\n                    L ${ secondPinCoordinates[0] - 35}, ${secondPinCoordinates[1] + 15}\n\n                    a20,20 0 0 1 12,-12\n\n                `\n        }\n\n        // nie zmiesci sie pomiedzy\n    } else {\n\n        if (isAbove) {\n            middleRoute =\n                `\n                    a20,20 0 0 0 12,-12\n\n                    l 0, ${ 2 * paddings[0][0] }\n\n                    a20,20 0 0 0 -12,-12\n\n                    l ${horizontalDistance - 35}, 0\n\n                    a20,20 0 0 0 -12,12\n\n                    L ${ secondPinCoordinates[0] - 25}, ${secondPinCoordinates[1] - 10}\n\n                    a20,20 0 0 0 12, 12\n                `\n        } else {\n\n            middleRoute =\n                `\n                    a20,20 0 0 1 12,12\n\n                    l 0, ${ -2 * paddings[0][0] }\n\n                    a20,20 0 0 1 -12,12\n\n                    l ${horizontalDistance - 35}, 0\n\n                    a20,20 0 0 1 -12,-12\n\n                    L ${ secondPinCoordinates[0] - 25}, ${secondPinCoordinates[1] + 15}\n\n                    a20,20 0 0 1 12, -12\n                `\n        }\n    }\n\n    // zawsze wychodzi 25 w prawo i o \n    // jezeli sie zmiesci\n    return `\n        M ${firstPinCoordinates}\n        l 25, 0\n        ${middleRoute}\n        \n        L ${secondPinCoordinates}\n    `\n}\n\nfunction calculatePath(firstPinBoundingClient, secondPinBoundingClient, paddings) {\n\n    //const firstPinBoundingClient = firstPin.getBoundingClientRect();\n    const firstPinCoordinates = [firstPinBoundingClient.left, firstPinBoundingClient.top];\n\n    //const secondPinBoundingClient = secondPin.getBoundingClientRect();\n    const secondPinCoordinates = [secondPinBoundingClient.left, secondPinBoundingClient.top];\n\n    // pozycje rowno w srodku pinu\n    firstPinCoordinates[1] += firstPinBoundingClient.height / 2;\n    firstPinCoordinates[0] += firstPinBoundingClient.width / 2;\n    secondPinCoordinates[1] += secondPinBoundingClient.height / 2;\n    secondPinCoordinates[0] += secondPinBoundingClient.width / 2;\n\n    // M - MOVE TO (WEDLUG POZYCJI BEWZGLEDNEJ)\n    // L - LINE TO (WEDLUG POZYCJI BEZWZGLEDNEJ)\n    // https://developer.mozilla.org/en-US/docs/Web/SVG/Element/path\n    // przewod idzie od wyjscia do wejscia\n\n    // jezeli docelowy punkt jest prawo\n    if (secondPinCoordinates[0] > firstPinCoordinates[0] + 30)\n        return calculatePathRight(firstPinCoordinates, secondPinCoordinates, paddings)\n    else\n        // punkt docelowy jest na lewo / mniej niz 30px na prawo\n        return calculatePathLeft(firstPinCoordinates, secondPinCoordinates, paddings)\n\n\n}\n\nexport default calculatePath;","import React from \"react\";\nimport styles from \"./Wire.module.scss\";\nimport calculatePath from \"./pathFunctions\";\n\n// na wypadek jakby HTML ulegl zmianie\nfunction findParentGate(pin) {\n  let currentParent = pin.parentElement;\n\n  while (!currentParent.classList.contains(\"LogicGate\")) {\n    currentParent = currentParent.parentElement;\n  }\n\n  return currentParent;\n}\nclass Wire extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.firstPin = props.firstPin;\n    this.secondPin = props.secondPin;\n\n    // jezeli pin jest wezlem startowym, to on jest uznawany za bramke\n    this.gates = [this.firstPin, this.secondPin].map((pin) => {\n      return pin.gate\n        ? findParentGate(pin.state.ref.current)\n        : pin.state.ref.current;\n    });\n\n    // pozycje pinow zostaja zaktualizowane, gdy przejezdzamy mysza po bramce / wezle\n    for (let gate of this.gates) {\n      gate.addEventListener(\"mousemove\", this.updatePosition);\n\n      gate.addEventListener(\"remove\", this.removeConnection);\n    }\n\n    this.firstPin.state.ref.current.addEventListener(\"signalChange\", () => {\n      this.setState({\n        stateClass: this.getStateClass(),\n      });\n    });\n\n    this.secondPin.state.ref.current.addEventListener(\"parentChange\", this.examineWireVisibility);\n\n    this.state = {\n      // pozycje pinow w momencie tworzenia polaczenia\n      firstPinPosition:\n        props.firstPin.state.ref.current.getBoundingClientRect(),\n      secondPinPosition:\n        props.secondPin.state.ref.current.getBoundingClientRect(),\n\n      stateClass: this.getStateClass(),\n      render: true,\n    };\n\n    // przyda sie do lepszego zaginania polaczen -\n    // [ odleglosc od gornej granicy bramki, odleglosc od dolnej granicy bramki ]\n    {\n      const gateBoundingClientRect = this.gates[0].getBoundingClientRect();\n\n      this.firstPinPaddings = [\n        gateBoundingClientRect.top - this.state.firstPinPosition.top,\n        gateBoundingClientRect.bottom - this.state.firstPinPosition.bottom,\n      ];\n    }\n\n    {\n      const gateBoundingClientRect = this.gates[1].getBoundingClientRect();\n\n      this.secondPinPaddings = [\n        gateBoundingClientRect.top - this.state.secondPinPosition.top,\n        gateBoundingClientRect.bottom - this.state.secondPinPosition.bottom,\n      ];\n    }\n  }\n\n  handleOnClick = () => this.removeConnection();\n\n  removeConnection = () => {\n    // usuwam event listenery z obu pinow\n    for (let gate of this.gates) {\n      gate.removeEventListener(\"mousemove\", this.updatePosition);\n      gate.removeEventListener(\"remove\", this.removeConnection);\n    }\n\n    // zapobieganie \"powracaniu\" dawnych przewodow podczas przywracania dawnego polaczenia\n    this.secondPin.state.ref.current.removeEventListener(\"parentChange\", this.examineWireVisibility);\n\n    // usuwam polaczenie z perspektywy dziecka i rodzica\n    this.secondPin.disconnect();\n\n    // usuwam graficzny przewod\n    this.setState({\n      render: false,\n    });\n  };\n\n  examineWireVisibility = () => {\n    this.setState({\n      // render tylko, gdy oba piny sa polaczone\n      render: this.firstPin === this.secondPin.state.parentPin,\n    });\n  }\n\n  getStateClass = () => {\n    if (this.firstPin.state.value) return styles.WireHighState;\n    else return styles.WireLowState;\n  };\n\n  // funkcja powodujaca aktualizacje pozycji pinow w stanie\n  updatePosition = () => {\n    this.setState({\n      firstPinPosition: this.firstPin.state.ref.current.getBoundingClientRect(),\n      secondPinPosition:\n        this.secondPin.state.ref.current.getBoundingClientRect(),\n    });\n  };\n\n  render() {\n    if (!this.state.render) return null;\n    return (\n      <path\n        d={calculatePath(\n          this.state.firstPinPosition,\n          this.state.secondPinPosition,\n          [this.firstPinPaddings, this.secondPinPaddings]\n        ).replace(/(\\r\\n|\\n|\\r| {2})/gm, \"\")}\n        className={`\n                ${styles.Wire}\n                ${this.state.stateClass}\n            `}\n        onClick={this.handleOnClick}\n      />\n    );\n  }\n}\n\nexport default Wire;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Application from './Components/Application/Application';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Application />\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}